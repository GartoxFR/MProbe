<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1524"><g><title>[[heap]] (1 samples, 0.07%)</title><rect x="0.0000%" y="885" width="0.0656%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.07%)</title><rect x="0.0000%" y="869" width="0.0656%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="0.0656%" y="869" width="0.0656%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3156%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="0.1312%" y="869" width="0.0656%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.3812%" y="879.50"></text></g><g><title>[[stack]] (3 samples, 0.20%)</title><rect x="0.0656%" y="885" width="0.1969%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="3"/><text x="0.3156%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="0.1969%" y="869" width="0.0656%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.4469%" y="879.50"></text></g><g><title>[cargo] (1 samples, 0.07%)</title><rect x="0.2625%" y="885" width="0.0656%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.5125%" y="895.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.07%)</title><rect x="0.2625%" y="869" width="0.0656%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="1"/><text x="0.5125%" y="879.50"></text></g><g><title>cargo::commands::build::exec (1 samples, 0.07%)</title><rect x="1.0499%" y="645" width="0.0656%" height="15" fill="rgb(218,30,26)" fg:x="16" fg:w="1"/><text x="1.2999%" y="655.50"></text></g><g><title>&lt;clap_builder::parser::matches::arg_matches::ArgMatches as cargo::util::command_prelude::ArgMatchesExt&gt;::workspace (1 samples, 0.07%)</title><rect x="1.0499%" y="629" width="0.0656%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="1"/><text x="1.2999%" y="639.50"></text></g><g><title>&lt;cargo::core::workspace::Workspace&gt;::new (1 samples, 0.07%)</title><rect x="1.0499%" y="613" width="0.0656%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="1"/><text x="1.2999%" y="623.50"></text></g><g><title>&lt;cargo::core::workspace::Workspace&gt;::find_root (1 samples, 0.07%)</title><rect x="1.0499%" y="597" width="0.0656%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="1"/><text x="1.2999%" y="607.50"></text></g><g><title>&lt;cargo::core::workspace::Packages&gt;::load (1 samples, 0.07%)</title><rect x="1.0499%" y="581" width="0.0656%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="1"/><text x="1.2999%" y="591.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId&gt;::new (1 samples, 0.07%)</title><rect x="1.0499%" y="565" width="0.0656%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="1"/><text x="1.2999%" y="575.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId&gt;::wrap (1 samples, 0.07%)</title><rect x="1.0499%" y="549" width="0.0656%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="1"/><text x="1.2999%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(&amp;cargo::core::source::source_id::SourceIdInner, ())&gt;&gt;::insert::&lt;hashbrown::map::make_hasher&lt;&amp;cargo::core::source::source_id::SourceIdInner, &amp;cargo::core::source::source_id::SourceIdInner, (), std::collections::hash::map::RandomState&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="1.0499%" y="533" width="0.0656%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="1"/><text x="1.2999%" y="543.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.07%)</title><rect x="1.1155%" y="421" width="0.0656%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="1"/><text x="1.3655%" y="431.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.07%)</title><rect x="1.1155%" y="405" width="0.0656%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="1"/><text x="1.3655%" y="415.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.07%)</title><rect x="1.1155%" y="389" width="0.0656%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="1"/><text x="1.3655%" y="399.50"></text></g><g><title>eckey_pub_decode (1 samples, 0.07%)</title><rect x="1.1811%" y="357" width="0.0656%" height="15" fill="rgb(226,26,5)" fg:x="18" fg:w="1"/><text x="1.4311%" y="367.50"></text></g><g><title>eckey_type2param (1 samples, 0.07%)</title><rect x="1.1811%" y="341" width="0.0656%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="1"/><text x="1.4311%" y="351.50"></text></g><g><title>EC_GROUP_new_by_curve_name (1 samples, 0.07%)</title><rect x="1.1811%" y="325" width="0.0656%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="1"/><text x="1.4311%" y="335.50"></text></g><g><title>ec_precompute_mont_data (1 samples, 0.07%)</title><rect x="1.1811%" y="309" width="0.0656%" height="15" fill="rgb(221,5,38)" fg:x="18" fg:w="1"/><text x="1.4311%" y="319.50"></text></g><g><title>BN_MONT_CTX_set (1 samples, 0.07%)</title><rect x="1.1811%" y="293" width="0.0656%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="1"/><text x="1.4311%" y="303.50"></text></g><g><title>BN_mod_inverse (1 samples, 0.07%)</title><rect x="1.1811%" y="277" width="0.0656%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="1"/><text x="1.4311%" y="287.50"></text></g><g><title>int_bn_mod_inverse (1 samples, 0.07%)</title><rect x="1.1811%" y="261" width="0.0656%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="1"/><text x="1.4311%" y="271.50"></text></g><g><title>BN_uadd (1 samples, 0.07%)</title><rect x="1.1811%" y="245" width="0.0656%" height="15" fill="rgb(225,111,53)" fg:x="18" fg:w="1"/><text x="1.4311%" y="255.50"></text></g><g><title>ASN1_item_d2i (3 samples, 0.20%)</title><rect x="1.1155%" y="485" width="0.1969%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="3"/><text x="1.3655%" y="495.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.20%)</title><rect x="1.1155%" y="469" width="0.1969%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="3"/><text x="1.3655%" y="479.50"></text></g><g><title>asn1_template_noexp_d2i (3 samples, 0.20%)</title><rect x="1.1155%" y="453" width="0.1969%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="3"/><text x="1.3655%" y="463.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.20%)</title><rect x="1.1155%" y="437" width="0.1969%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="3"/><text x="1.3655%" y="447.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.13%)</title><rect x="1.1811%" y="421" width="0.1312%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="2"/><text x="1.4311%" y="431.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.13%)</title><rect x="1.1811%" y="405" width="0.1312%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="2"/><text x="1.4311%" y="415.50"></text></g><g><title>pubkey_cb (2 samples, 0.13%)</title><rect x="1.1811%" y="389" width="0.1312%" height="15" fill="rgb(254,191,54)" fg:x="18" fg:w="2"/><text x="1.4311%" y="399.50"></text></g><g><title>x509_pubkey_decode (2 samples, 0.13%)</title><rect x="1.1811%" y="373" width="0.1312%" height="15" fill="rgb(241,83,37)" fg:x="18" fg:w="2"/><text x="1.4311%" y="383.50"></text></g><g><title>rsa_pub_decode (1 samples, 0.07%)</title><rect x="1.2467%" y="357" width="0.0656%" height="15" fill="rgb(233,36,39)" fg:x="19" fg:w="1"/><text x="1.4967%" y="367.50"></text></g><g><title>ASN1_item_d2i (1 samples, 0.07%)</title><rect x="1.2467%" y="341" width="0.0656%" height="15" fill="rgb(226,3,54)" fg:x="19" fg:w="1"/><text x="1.4967%" y="351.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.07%)</title><rect x="1.2467%" y="325" width="0.0656%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="1"/><text x="1.4967%" y="335.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.07%)</title><rect x="1.2467%" y="309" width="0.0656%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="1"/><text x="1.4967%" y="319.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.07%)</title><rect x="1.2467%" y="293" width="0.0656%" height="15" fill="rgb(232,182,51)" fg:x="19" fg:w="1"/><text x="1.4967%" y="303.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.07%)</title><rect x="1.2467%" y="277" width="0.0656%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="1"/><text x="1.4967%" y="287.50"></text></g><g><title>bn_c2i (1 samples, 0.07%)</title><rect x="1.2467%" y="261" width="0.0656%" height="15" fill="rgb(208,69,12)" fg:x="19" fg:w="1"/><text x="1.4967%" y="271.50"></text></g><g><title>BN_bin2bn (1 samples, 0.07%)</title><rect x="1.2467%" y="245" width="0.0656%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="1"/><text x="1.4967%" y="255.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.39%)</title><rect x="1.0499%" y="853" width="0.3937%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="6"/><text x="1.2999%" y="863.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.39%)</title><rect x="1.0499%" y="837" width="0.3937%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="6"/><text x="1.2999%" y="847.50"></text></g><g><title>std::panicking::try (6 samples, 0.39%)</title><rect x="1.0499%" y="821" width="0.3937%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="6"/><text x="1.2999%" y="831.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.39%)</title><rect x="1.0499%" y="805" width="0.3937%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="6"/><text x="1.2999%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (6 samples, 0.39%)</title><rect x="1.0499%" y="789" width="0.3937%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="6"/><text x="1.2999%" y="799.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.39%)</title><rect x="1.0499%" y="773" width="0.3937%" height="15" fill="rgb(239,60,40)" fg:x="16" fg:w="6"/><text x="1.2999%" y="783.50"></text></g><g><title>std::panicking::try (6 samples, 0.39%)</title><rect x="1.0499%" y="757" width="0.3937%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="6"/><text x="1.2999%" y="767.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.39%)</title><rect x="1.0499%" y="741" width="0.3937%" height="15" fill="rgb(225,35,8)" fg:x="16" fg:w="6"/><text x="1.2999%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.39%)</title><rect x="1.0499%" y="725" width="0.3937%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="6"/><text x="1.2999%" y="735.50"></text></g><g><title>std::rt::lang_start::&lt;()&gt;::{closure#0} (6 samples, 0.39%)</title><rect x="1.0499%" y="709" width="0.3937%" height="15" fill="rgb(247,123,22)" fg:x="16" fg:w="6"/><text x="1.2999%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;fn(), ()&gt; (6 samples, 0.39%)</title><rect x="1.0499%" y="693" width="0.3937%" height="15" fill="rgb(231,138,38)" fg:x="16" fg:w="6"/><text x="1.2999%" y="703.50"></text></g><g><title>cargo::main (6 samples, 0.39%)</title><rect x="1.0499%" y="677" width="0.3937%" height="15" fill="rgb(231,145,46)" fg:x="16" fg:w="6"/><text x="1.2999%" y="687.50"></text></g><g><title>cargo::cli::main (6 samples, 0.39%)</title><rect x="1.0499%" y="661" width="0.3937%" height="15" fill="rgb(251,118,11)" fg:x="16" fg:w="6"/><text x="1.2999%" y="671.50"></text></g><g><title>cargo::init_git (5 samples, 0.33%)</title><rect x="1.1155%" y="645" width="0.3281%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="5"/><text x="1.3655%" y="655.50"></text></g><g><title>git2::opts::set_verify_owner_validation (5 samples, 0.33%)</title><rect x="1.1155%" y="629" width="0.3281%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="5"/><text x="1.3655%" y="639.50"></text></g><g><title>libgit2_sys::init (5 samples, 0.33%)</title><rect x="1.1155%" y="613" width="0.3281%" height="15" fill="rgb(209,12,38)" fg:x="17" fg:w="5"/><text x="1.3655%" y="623.50"></text></g><g><title>&lt;std::sys_common::once::futex::Once&gt;::call::&lt;&lt;std::sync::once::Once&gt;::call_once&lt;libgit2_sys::init::{closure#0}&gt;::{closure#0}&gt; (5 samples, 0.33%)</title><rect x="1.1155%" y="597" width="0.3281%" height="15" fill="rgb(227,1,9)" fg:x="17" fg:w="5"/><text x="1.3655%" y="607.50"></text></g><g><title>git_runtime_init (5 samples, 0.33%)</title><rect x="1.1155%" y="581" width="0.3281%" height="15" fill="rgb(248,47,43)" fg:x="17" fg:w="5"/><text x="1.3655%" y="591.50"></text></g><g><title>git_openssl_stream_global_init (5 samples, 0.33%)</title><rect x="1.1155%" y="565" width="0.3281%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="5"/><text x="1.3655%" y="575.50"></text></g><g><title>X509_STORE_set_default_paths (5 samples, 0.33%)</title><rect x="1.1155%" y="549" width="0.3281%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="5"/><text x="1.3655%" y="559.50"></text></g><g><title>by_file_ctrl (5 samples, 0.33%)</title><rect x="1.1155%" y="533" width="0.3281%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="5"/><text x="1.3655%" y="543.50"></text></g><g><title>X509_load_cert_crl_file (5 samples, 0.33%)</title><rect x="1.1155%" y="517" width="0.3281%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="5"/><text x="1.3655%" y="527.50"></text></g><g><title>PEM_X509_INFO_read_bio (5 samples, 0.33%)</title><rect x="1.1155%" y="501" width="0.3281%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="5"/><text x="1.3655%" y="511.50"></text></g><g><title>PEM_read_bio_ex (2 samples, 0.13%)</title><rect x="1.3123%" y="485" width="0.1312%" height="15" fill="rgb(247,138,52)" fg:x="20" fg:w="2"/><text x="1.5623%" y="495.50"></text></g><g><title>EVP_DecodeUpdate (2 samples, 0.13%)</title><rect x="1.3123%" y="469" width="0.1312%" height="15" fill="rgb(213,79,30)" fg:x="20" fg:w="2"/><text x="1.5623%" y="479.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::from_toml (1 samples, 0.07%)</title><rect x="1.4436%" y="741" width="0.0656%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="1.6936%" y="751.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::toml_to_components (1 samples, 0.07%)</title><rect x="1.4436%" y="725" width="0.0656%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="1.6936%" y="735.50"></text></g><g><title>rustup::dist::manifest::Component::from_toml (1 samples, 0.07%)</title><rect x="1.4436%" y="709" width="0.0656%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="1.6936%" y="719.50"></text></g><g><title>rustup::utils::toml_utils::get_string (1 samples, 0.07%)</title><rect x="1.4436%" y="693" width="0.0656%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="1.6936%" y="703.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="1.5092%" y="725" width="0.0656%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="1"/><text x="1.7592%" y="735.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="1.5092%" y="709" width="0.0656%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="1"/><text x="1.7592%" y="719.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="1.5092%" y="693" width="0.0656%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="1"/><text x="1.7592%" y="703.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="1.5092%" y="677" width="0.0656%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="1"/><text x="1.7592%" y="687.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="1.5092%" y="661" width="0.0656%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="1"/><text x="1.7592%" y="671.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="1.5092%" y="645" width="0.0656%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="1"/><text x="1.7592%" y="655.50"></text></g><g><title>toml::map::Map&lt;alloc::string::String,toml::value::Value&gt;::entry (1 samples, 0.07%)</title><rect x="1.5092%" y="629" width="0.0656%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="1.7592%" y="639.50"></text></g><g><title>toml::de::Deserializer::eat_comment (1 samples, 0.07%)</title><rect x="1.6404%" y="709" width="0.0656%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="1"/><text x="1.8904%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::eat_comment (1 samples, 0.07%)</title><rect x="1.6404%" y="693" width="0.0656%" height="15" fill="rgb(211,96,35)" fg:x="25" fg:w="1"/><text x="1.8904%" y="703.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="1.8373%" y="661" width="0.0656%" height="15" fill="rgb(253,215,40)" fg:x="28" fg:w="1"/><text x="2.0873%" y="671.50"></text></g><g><title>toml::de::Deserializer::value (4 samples, 0.26%)</title><rect x="1.7060%" y="709" width="0.2625%" height="15" fill="rgb(211,81,21)" fg:x="26" fg:w="4"/><text x="1.9560%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (4 samples, 0.26%)</title><rect x="1.7060%" y="693" width="0.2625%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="4"/><text x="1.9560%" y="703.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (4 samples, 0.26%)</title><rect x="1.7060%" y="677" width="0.2625%" height="15" fill="rgb(235,213,38)" fg:x="26" fg:w="4"/><text x="1.9560%" y="687.50"></text></g><g><title>toml::tokens::Tokenizer::basic_string::{{closure}} (1 samples, 0.07%)</title><rect x="1.9029%" y="661" width="0.0656%" height="15" fill="rgb(237,122,38)" fg:x="29" fg:w="1"/><text x="2.1529%" y="671.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (4 samples, 0.26%)</title><rect x="1.9685%" y="709" width="0.2625%" height="15" fill="rgb(244,218,35)" fg:x="30" fg:w="4"/><text x="2.2185%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (3 samples, 0.20%)</title><rect x="2.0341%" y="693" width="0.1969%" height="15" fill="rgb(240,68,47)" fg:x="31" fg:w="3"/><text x="2.2841%" y="703.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="2.1654%" y="677" width="0.0656%" height="15" fill="rgb(210,16,53)" fg:x="33" fg:w="1"/><text x="2.4154%" y="687.50"></text></g><g><title>toml::tokens::Tokenizer::eat_whitespace (1 samples, 0.07%)</title><rect x="2.2310%" y="709" width="0.0656%" height="15" fill="rgb(235,124,12)" fg:x="34" fg:w="1"/><text x="2.4810%" y="719.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="2.2310%" y="693" width="0.0656%" height="15" fill="rgb(224,169,11)" fg:x="34" fg:w="1"/><text x="2.4810%" y="703.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="2.2966%" y="693" width="0.0656%" height="15" fill="rgb(250,166,2)" fg:x="35" fg:w="1"/><text x="2.5466%" y="703.50"></text></g><g><title>toml::de::Deserializer::tables (15 samples, 0.98%)</title><rect x="1.5748%" y="725" width="0.9843%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="15"/><text x="1.8248%" y="735.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (4 samples, 0.26%)</title><rect x="2.2966%" y="709" width="0.2625%" height="15" fill="rgb(230,116,27)" fg:x="35" fg:w="4"/><text x="2.5466%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (3 samples, 0.20%)</title><rect x="2.3622%" y="693" width="0.1969%" height="15" fill="rgb(228,99,48)" fg:x="36" fg:w="3"/><text x="2.6122%" y="703.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="2.4934%" y="677" width="0.0656%" height="15" fill="rgb(253,11,6)" fg:x="38" fg:w="1"/><text x="2.7434%" y="687.50"></text></g><g><title>toml::de::build_table_indices (1 samples, 0.07%)</title><rect x="2.5591%" y="725" width="0.0656%" height="15" fill="rgb(247,143,39)" fg:x="39" fg:w="1"/><text x="2.8091%" y="735.50"></text></g><g><title>main (27 samples, 1.77%)</title><rect x="1.0499%" y="869" width="1.7717%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="27"/><text x="1.2999%" y="879.50">m..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 1.38%)</title><rect x="1.4436%" y="853" width="1.3780%" height="15" fill="rgb(233,208,19)" fg:x="22" fg:w="21"/><text x="1.6936%" y="863.50"></text></g><g><title>rustup_init::main (21 samples, 1.38%)</title><rect x="1.4436%" y="837" width="1.3780%" height="15" fill="rgb(216,164,2)" fg:x="22" fg:w="21"/><text x="1.6936%" y="847.50"></text></g><g><title>rustup::cli::proxy_mode::main (21 samples, 1.38%)</title><rect x="1.4436%" y="821" width="1.3780%" height="15" fill="rgb(220,129,5)" fg:x="22" fg:w="21"/><text x="1.6936%" y="831.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (21 samples, 1.38%)</title><rect x="1.4436%" y="805" width="1.3780%" height="15" fill="rgb(242,17,10)" fg:x="22" fg:w="21"/><text x="1.6936%" y="815.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (21 samples, 1.38%)</title><rect x="1.4436%" y="789" width="1.3780%" height="15" fill="rgb(242,107,0)" fg:x="22" fg:w="21"/><text x="1.6936%" y="799.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (21 samples, 1.38%)</title><rect x="1.4436%" y="773" width="1.3780%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="21"/><text x="1.6936%" y="783.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (21 samples, 1.38%)</title><rect x="1.4436%" y="757" width="1.3780%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="21"/><text x="1.6936%" y="767.50"></text></g><g><title>toml::de::from_str (20 samples, 1.31%)</title><rect x="1.5092%" y="741" width="1.3123%" height="15" fill="rgb(215,21,27)" fg:x="23" fg:w="20"/><text x="1.7592%" y="751.50"></text></g><g><title>toml::de::build_table_pindices (3 samples, 0.20%)</title><rect x="2.6247%" y="725" width="0.1969%" height="15" fill="rgb(232,23,21)" fg:x="40" fg:w="3"/><text x="2.8747%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="2.7559%" y="709" width="0.0656%" height="15" fill="rgb(244,5,23)" fg:x="42" fg:w="1"/><text x="3.0059%" y="719.50"></text></g><g><title>ossl_init_add_all_digests_ossl_ (1 samples, 0.07%)</title><rect x="2.8215%" y="869" width="0.0656%" height="15" fill="rgb(226,81,46)" fg:x="43" fg:w="1"/><text x="3.0715%" y="879.50"></text></g><g><title>openssl_add_all_digests_int (1 samples, 0.07%)</title><rect x="2.8215%" y="853" width="0.0656%" height="15" fill="rgb(247,70,30)" fg:x="43" fg:w="1"/><text x="3.0715%" y="863.50"></text></g><g><title>EVP_add_digest (1 samples, 0.07%)</title><rect x="2.8215%" y="837" width="0.0656%" height="15" fill="rgb(212,68,19)" fg:x="43" fg:w="1"/><text x="3.0715%" y="847.50"></text></g><g><title>OBJ_NAME_add (1 samples, 0.07%)</title><rect x="2.8215%" y="821" width="0.0656%" height="15" fill="rgb(240,187,13)" fg:x="43" fg:w="1"/><text x="3.0715%" y="831.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.07%)</title><rect x="2.8215%" y="805" width="0.0656%" height="15" fill="rgb(223,113,26)" fg:x="43" fg:w="1"/><text x="3.0715%" y="815.50"></text></g><g><title>[libc.so.6] (40 samples, 2.62%)</title><rect x="0.3281%" y="885" width="2.6247%" height="15" fill="rgb(206,192,2)" fg:x="5" fg:w="40"/><text x="0.5781%" y="895.50">[l..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="2.8871%" y="869" width="0.0656%" height="15" fill="rgb(241,108,4)" fg:x="44" fg:w="1"/><text x="3.1371%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="2.8871%" y="853" width="0.0656%" height="15" fill="rgb(247,173,49)" fg:x="44" fg:w="1"/><text x="3.1371%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="2.8871%" y="837" width="0.0656%" height="15" fill="rgb(224,114,35)" fg:x="44" fg:w="1"/><text x="3.1371%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;cargo::core::compiler::job_queue::DrainState&gt;::run::{closure#1}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="2.8871%" y="821" width="0.0656%" height="15" fill="rgb(245,159,27)" fg:x="44" fg:w="1"/><text x="3.1371%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;cargo::core::compiler::job_queue::DrainState&gt;::run::{closure#1}, ()&gt; (1 samples, 0.07%)</title><rect x="2.8871%" y="805" width="0.0656%" height="15" fill="rgb(245,172,44)" fg:x="44" fg:w="1"/><text x="3.1371%" y="815.50"></text></g><g><title>&lt;cargo::core::compiler::job_queue::job_state::JobState&gt;::run_to_finish (1 samples, 0.07%)</title><rect x="2.8871%" y="789" width="0.0656%" height="15" fill="rgb(236,23,11)" fg:x="44" fg:w="1"/><text x="3.1371%" y="799.50"></text></g><g><title>&lt;&lt;cargo::core::compiler::job_queue::job::Work&gt;::then::{closure#0} as core::ops::function::FnOnce&lt;(&amp;cargo::core::compiler::job_queue::job_state::JobState,)&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="2.8871%" y="773" width="0.0656%" height="15" fill="rgb(205,117,38)" fg:x="44" fg:w="1"/><text x="3.1371%" y="783.50"></text></g><g><title>&lt;&lt;cargo::core::compiler::job_queue::job::Work&gt;::then::{closure#0} as core::ops::function::FnOnce&lt;(&amp;cargo::core::compiler::job_queue::job_state::JobState,)&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="2.8871%" y="757" width="0.0656%" height="15" fill="rgb(237,72,25)" fg:x="44" fg:w="1"/><text x="3.1371%" y="767.50"></text></g><g><title>&lt;cargo::core::compiler::rustc::{closure#3} as core::ops::function::FnOnce&lt;(&amp;cargo::core::compiler::job_queue::job_state::JobState,)&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="2.8871%" y="741" width="0.0656%" height="15" fill="rgb(244,70,9)" fg:x="44" fg:w="1"/><text x="3.1371%" y="751.50"></text></g><g><title>&lt;cargo::core::compiler::DefaultExecutor as cargo::core::compiler::Executor&gt;::exec (1 samples, 0.07%)</title><rect x="2.8871%" y="725" width="0.0656%" height="15" fill="rgb(217,125,39)" fg:x="44" fg:w="1"/><text x="3.1371%" y="735.50"></text></g><g><title>&lt;cargo_util::process_builder::ProcessBuilder&gt;::exec_with_streaming (1 samples, 0.07%)</title><rect x="2.8871%" y="709" width="0.0656%" height="15" fill="rgb(235,36,10)" fg:x="44" fg:w="1"/><text x="3.1371%" y="719.50"></text></g><g><title>cargo_util::read2::imp::read2 (1 samples, 0.07%)</title><rect x="2.8871%" y="693" width="0.0656%" height="15" fill="rgb(251,123,47)" fg:x="44" fg:w="1"/><text x="3.1371%" y="703.50"></text></g><g><title>&lt;cargo_util::process_builder::ProcessBuilder&gt;::exec_with_streaming::{closure#1}::{closure#0} (1 samples, 0.07%)</title><rect x="2.8871%" y="677" width="0.0656%" height="15" fill="rgb(221,13,13)" fg:x="44" fg:w="1"/><text x="3.1371%" y="687.50"></text></g><g><title>cargo::core::compiler::rustc::{closure#3}::{closure#2} (1 samples, 0.07%)</title><rect x="2.8871%" y="661" width="0.0656%" height="15" fill="rgb(238,131,9)" fg:x="44" fg:w="1"/><text x="3.1371%" y="671.50"></text></g><g><title>cargo::core::compiler::on_stderr_line (1 samples, 0.07%)</title><rect x="2.8871%" y="645" width="0.0656%" height="15" fill="rgb(211,50,8)" fg:x="44" fg:w="1"/><text x="3.1371%" y="655.50"></text></g><g><title>serde_json::de::from_str::&lt;cargo::core::compiler::on_stderr_line_inner::CompilerMessage&gt; (1 samples, 0.07%)</title><rect x="2.8871%" y="629" width="0.0656%" height="15" fill="rgb(245,182,24)" fg:x="44" fg:w="1"/><text x="3.1371%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; as serde::de::Deserializer&gt;::deserialize_struct::&lt;&lt;cargo::core::compiler::on_stderr_line_inner::CompilerMessage as serde::de::Deserialize&gt;::deserialize::__Visitor&gt; (1 samples, 0.07%)</title><rect x="2.8871%" y="613" width="0.0656%" height="15" fill="rgb(242,14,37)" fg:x="44" fg:w="1"/><text x="3.1371%" y="623.50"></text></g><g><title>&lt;rustup::dist::dist::PartialToolchainDesc as core::str::traits::FromStr&gt;::from_str (1 samples, 0.07%)</title><rect x="2.9528%" y="869" width="0.0656%" height="15" fill="rgb(246,228,12)" fg:x="45" fg:w="1"/><text x="3.2028%" y="879.50"></text></g><g><title>&lt;rustup::dist::dist::ParsedToolchainDesc as core::str::traits::FromStr&gt;::from_str (1 samples, 0.07%)</title><rect x="2.9528%" y="853" width="0.0656%" height="15" fill="rgb(213,55,15)" fg:x="45" fg:w="1"/><text x="3.2028%" y="863.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.07%)</title><rect x="2.9528%" y="837" width="0.0656%" height="15" fill="rgb(209,9,3)" fg:x="45" fg:w="1"/><text x="3.2028%" y="847.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.07%)</title><rect x="2.9528%" y="821" width="0.0656%" height="15" fill="rgb(230,59,30)" fg:x="45" fg:w="1"/><text x="3.2028%" y="831.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.07%)</title><rect x="2.9528%" y="805" width="0.0656%" height="15" fill="rgb(209,121,21)" fg:x="45" fg:w="1"/><text x="3.2028%" y="815.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.07%)</title><rect x="2.9528%" y="789" width="0.0656%" height="15" fill="rgb(220,109,13)" fg:x="45" fg:w="1"/><text x="3.2028%" y="799.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.07%)</title><rect x="2.9528%" y="773" width="0.0656%" height="15" fill="rgb(232,18,1)" fg:x="45" fg:w="1"/><text x="3.2028%" y="783.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="3.0184%" y="869" width="0.0656%" height="15" fill="rgb(215,41,42)" fg:x="46" fg:w="1"/><text x="3.2684%" y="879.50"></text></g><g><title>main (1 samples, 0.07%)</title><rect x="3.0840%" y="869" width="0.0656%" height="15" fill="rgb(224,123,36)" fg:x="47" fg:w="1"/><text x="3.3340%" y="879.50"></text></g><g><title>rustup::cli::proxy_mode::main (1 samples, 0.07%)</title><rect x="3.1496%" y="869" width="0.0656%" height="15" fill="rgb(240,125,3)" fg:x="48" fg:w="1"/><text x="3.3996%" y="879.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (1 samples, 0.07%)</title><rect x="3.1496%" y="853" width="0.0656%" height="15" fill="rgb(205,98,50)" fg:x="48" fg:w="1"/><text x="3.3996%" y="863.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (1 samples, 0.07%)</title><rect x="3.1496%" y="837" width="0.0656%" height="15" fill="rgb(205,185,37)" fg:x="48" fg:w="1"/><text x="3.3996%" y="847.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (1 samples, 0.07%)</title><rect x="3.1496%" y="821" width="0.0656%" height="15" fill="rgb(238,207,15)" fg:x="48" fg:w="1"/><text x="3.3996%" y="831.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (1 samples, 0.07%)</title><rect x="3.1496%" y="805" width="0.0656%" height="15" fill="rgb(213,199,42)" fg:x="48" fg:w="1"/><text x="3.3996%" y="815.50"></text></g><g><title>toml::de::from_str (1 samples, 0.07%)</title><rect x="3.1496%" y="789" width="0.0656%" height="15" fill="rgb(235,201,11)" fg:x="48" fg:w="1"/><text x="3.3996%" y="799.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="3.1496%" y="773" width="0.0656%" height="15" fill="rgb(207,46,11)" fg:x="48" fg:w="1"/><text x="3.3996%" y="783.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="3.1496%" y="757" width="0.0656%" height="15" fill="rgb(241,35,35)" fg:x="48" fg:w="1"/><text x="3.3996%" y="767.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="3.1496%" y="741" width="0.0656%" height="15" fill="rgb(243,32,47)" fg:x="48" fg:w="1"/><text x="3.3996%" y="751.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="3.1496%" y="725" width="0.0656%" height="15" fill="rgb(247,202,23)" fg:x="48" fg:w="1"/><text x="3.3996%" y="735.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="3.1496%" y="709" width="0.0656%" height="15" fill="rgb(219,102,11)" fg:x="48" fg:w="1"/><text x="3.3996%" y="719.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="3.1496%" y="693" width="0.0656%" height="15" fill="rgb(243,110,44)" fg:x="48" fg:w="1"/><text x="3.3996%" y="703.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="3.1496%" y="677" width="0.0656%" height="15" fill="rgb(222,74,54)" fg:x="48" fg:w="1"/><text x="3.3996%" y="687.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="3.1496%" y="661" width="0.0656%" height="15" fill="rgb(216,99,12)" fg:x="48" fg:w="1"/><text x="3.3996%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.07%)</title><rect x="3.1496%" y="645" width="0.0656%" height="15" fill="rgb(226,22,26)" fg:x="48" fg:w="1"/><text x="3.3996%" y="655.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="3.2152%" y="645" width="0.0656%" height="15" fill="rgb(217,163,10)" fg:x="49" fg:w="1"/><text x="3.4652%" y="655.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="3.2152%" y="629" width="0.0656%" height="15" fill="rgb(213,25,53)" fg:x="49" fg:w="1"/><text x="3.4652%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.39%)</title><rect x="2.9528%" y="885" width="0.3937%" height="15" fill="rgb(252,105,26)" fg:x="45" fg:w="6"/><text x="3.2028%" y="895.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (2 samples, 0.13%)</title><rect x="3.2152%" y="869" width="0.1312%" height="15" fill="rgb(220,39,43)" fg:x="49" fg:w="2"/><text x="3.4652%" y="879.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (2 samples, 0.13%)</title><rect x="3.2152%" y="853" width="0.1312%" height="15" fill="rgb(229,68,48)" fg:x="49" fg:w="2"/><text x="3.4652%" y="863.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (2 samples, 0.13%)</title><rect x="3.2152%" y="837" width="0.1312%" height="15" fill="rgb(252,8,32)" fg:x="49" fg:w="2"/><text x="3.4652%" y="847.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (2 samples, 0.13%)</title><rect x="3.2152%" y="821" width="0.1312%" height="15" fill="rgb(223,20,43)" fg:x="49" fg:w="2"/><text x="3.4652%" y="831.50"></text></g><g><title>toml::de::from_str (2 samples, 0.13%)</title><rect x="3.2152%" y="805" width="0.1312%" height="15" fill="rgb(229,81,49)" fg:x="49" fg:w="2"/><text x="3.4652%" y="815.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.13%)</title><rect x="3.2152%" y="789" width="0.1312%" height="15" fill="rgb(236,28,36)" fg:x="49" fg:w="2"/><text x="3.4652%" y="799.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.13%)</title><rect x="3.2152%" y="773" width="0.1312%" height="15" fill="rgb(249,185,26)" fg:x="49" fg:w="2"/><text x="3.4652%" y="783.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.13%)</title><rect x="3.2152%" y="757" width="0.1312%" height="15" fill="rgb(249,174,33)" fg:x="49" fg:w="2"/><text x="3.4652%" y="767.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.13%)</title><rect x="3.2152%" y="741" width="0.1312%" height="15" fill="rgb(233,201,37)" fg:x="49" fg:w="2"/><text x="3.4652%" y="751.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.13%)</title><rect x="3.2152%" y="725" width="0.1312%" height="15" fill="rgb(221,78,26)" fg:x="49" fg:w="2"/><text x="3.4652%" y="735.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.13%)</title><rect x="3.2152%" y="709" width="0.1312%" height="15" fill="rgb(250,127,30)" fg:x="49" fg:w="2"/><text x="3.4652%" y="719.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.13%)</title><rect x="3.2152%" y="693" width="0.1312%" height="15" fill="rgb(230,49,44)" fg:x="49" fg:w="2"/><text x="3.4652%" y="703.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.13%)</title><rect x="3.2152%" y="677" width="0.1312%" height="15" fill="rgb(229,67,23)" fg:x="49" fg:w="2"/><text x="3.4652%" y="687.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.13%)</title><rect x="3.2152%" y="661" width="0.1312%" height="15" fill="rgb(249,83,47)" fg:x="49" fg:w="2"/><text x="3.4652%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.07%)</title><rect x="3.2808%" y="645" width="0.0656%" height="15" fill="rgb(215,43,3)" fg:x="50" fg:w="1"/><text x="3.5308%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="3.2808%" y="629" width="0.0656%" height="15" fill="rgb(238,154,13)" fg:x="50" fg:w="1"/><text x="3.5308%" y="639.50"></text></g><g><title>_Fork (5 samples, 0.33%)</title><rect x="3.3465%" y="885" width="0.3281%" height="15" fill="rgb(219,56,2)" fg:x="51" fg:w="5"/><text x="3.5965%" y="895.50"></text></g><g><title>__libc_fork (1 samples, 0.07%)</title><rect x="3.6745%" y="885" width="0.0656%" height="15" fill="rgb(233,0,4)" fg:x="56" fg:w="1"/><text x="3.9245%" y="895.50"></text></g><g><title>__sigsetjmp (1 samples, 0.07%)</title><rect x="3.7402%" y="885" width="0.0656%" height="15" fill="rgb(235,30,7)" fg:x="57" fg:w="1"/><text x="3.9902%" y="895.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="3.8058%" y="885" width="0.0656%" height="15" fill="rgb(250,79,13)" fg:x="58" fg:w="1"/><text x="4.0558%" y="895.50"></text></g><g><title>malloc (2 samples, 0.13%)</title><rect x="3.8714%" y="885" width="0.1312%" height="15" fill="rgb(211,146,34)" fg:x="59" fg:w="2"/><text x="4.1214%" y="895.50"></text></g><g><title>read (5 samples, 0.33%)</title><rect x="4.0026%" y="885" width="0.3281%" height="15" fill="rgb(228,22,38)" fg:x="61" fg:w="5"/><text x="4.2526%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="4.3307%" y="885" width="0.0656%" height="15" fill="rgb(235,168,5)" fg:x="66" fg:w="1"/><text x="4.5807%" y="895.50"></text></g><g><title>cargo (68 samples, 4.46%)</title><rect x="0.0000%" y="901" width="4.4619%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="68"/><text x="0.2500%" y="911.50">cargo</text></g><g><title>toml::tokens::Tokenizer::expect_spanned (1 samples, 0.07%)</title><rect x="4.3963%" y="885" width="0.0656%" height="15" fill="rgb(215,215,53)" fg:x="67" fg:w="1"/><text x="4.6463%" y="895.50"></text></g><g><title>__vfork (5 samples, 0.33%)</title><rect x="4.4619%" y="885" width="0.3281%" height="15" fill="rgb(223,4,10)" fg:x="68" fg:w="5"/><text x="4.7119%" y="895.50"></text></g><g><title>cc (6 samples, 0.39%)</title><rect x="4.4619%" y="901" width="0.3937%" height="15" fill="rgb(234,103,6)" fg:x="68" fg:w="6"/><text x="4.7119%" y="911.50"></text></g><g><title>readlink (1 samples, 0.07%)</title><rect x="4.7900%" y="885" width="0.0656%" height="15" fill="rgb(227,97,0)" fg:x="73" fg:w="1"/><text x="5.0400%" y="895.50"></text></g><g><title>collect2 (1 samples, 0.07%)</title><rect x="4.8556%" y="901" width="0.0656%" height="15" fill="rgb(234,150,53)" fg:x="74" fg:w="1"/><text x="5.1056%" y="911.50"></text></g><g><title>[[stack]] (1 samples, 0.07%)</title><rect x="4.8556%" y="885" width="0.0656%" height="15" fill="rgb(228,201,54)" fg:x="74" fg:w="1"/><text x="5.1056%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="4.8556%" y="869" width="0.0656%" height="15" fill="rgb(222,22,37)" fg:x="74" fg:w="1"/><text x="5.1056%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="4.9213%" y="869" width="0.0656%" height="15" fill="rgb(237,53,32)" fg:x="75" fg:w="1"/><text x="5.1713%" y="879.50"></text></g><g><title>bfd_bread (1 samples, 0.07%)</title><rect x="4.9869%" y="869" width="0.0656%" height="15" fill="rgb(233,25,53)" fg:x="76" fg:w="1"/><text x="5.2369%" y="879.50"></text></g><g><title>[[heap]] (3 samples, 0.20%)</title><rect x="4.9213%" y="885" width="0.1969%" height="15" fill="rgb(210,40,34)" fg:x="75" fg:w="3"/><text x="5.1713%" y="895.50"></text></g><g><title>bfd_bwrite (1 samples, 0.07%)</title><rect x="5.0525%" y="869" width="0.0656%" height="15" fill="rgb(241,220,44)" fg:x="77" fg:w="1"/><text x="5.3025%" y="879.50"></text></g><g><title>[[stack]] (1 samples, 0.07%)</title><rect x="5.1181%" y="885" width="0.0656%" height="15" fill="rgb(235,28,35)" fg:x="78" fg:w="1"/><text x="5.3681%" y="895.50"></text></g><g><title>bfd_link_hash_traverse (1 samples, 0.07%)</title><rect x="5.1181%" y="869" width="0.0656%" height="15" fill="rgb(210,56,17)" fg:x="78" fg:w="1"/><text x="5.3681%" y="879.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="5.1837%" y="885" width="0.0656%" height="15" fill="rgb(224,130,29)" fg:x="79" fg:w="1"/><text x="5.4337%" y="895.50"></text></g><g><title>bfd_hash_lookup (1 samples, 0.07%)</title><rect x="5.1837%" y="869" width="0.0656%" height="15" fill="rgb(235,212,8)" fg:x="79" fg:w="1"/><text x="5.4337%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.33%)</title><rect x="5.2493%" y="885" width="0.3281%" height="15" fill="rgb(223,33,50)" fg:x="80" fg:w="5"/><text x="5.4993%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="5.5118%" y="869" width="0.0656%" height="15" fill="rgb(219,149,13)" fg:x="84" fg:w="1"/><text x="5.7618%" y="879.50"></text></g><g><title>bfd_section_from_shdr (1 samples, 0.07%)</title><rect x="6.8898%" y="741" width="0.0656%" height="15" fill="rgb(250,156,29)" fg:x="105" fg:w="1"/><text x="7.1398%" y="751.50"></text></g><g><title>_bfd_elf_make_section_from_shdr (1 samples, 0.07%)</title><rect x="6.8898%" y="725" width="0.0656%" height="15" fill="rgb(216,193,19)" fg:x="105" fg:w="1"/><text x="7.1398%" y="735.50"></text></g><g><title>bfd_make_section_anyway_with_flags (1 samples, 0.07%)</title><rect x="6.8898%" y="709" width="0.0656%" height="15" fill="rgb(216,135,14)" fg:x="105" fg:w="1"/><text x="7.1398%" y="719.50"></text></g><g><title>bfd_hash_insert (1 samples, 0.07%)</title><rect x="6.8898%" y="693" width="0.0656%" height="15" fill="rgb(241,47,5)" fg:x="105" fg:w="1"/><text x="7.1398%" y="703.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="6.8898%" y="677" width="0.0656%" height="15" fill="rgb(233,42,35)" fg:x="105" fg:w="1"/><text x="7.1398%" y="687.50"></text></g><g><title>bfd_hash_newfunc (1 samples, 0.07%)</title><rect x="6.8898%" y="661" width="0.0656%" height="15" fill="rgb(231,13,6)" fg:x="105" fg:w="1"/><text x="7.1398%" y="671.50"></text></g><g><title>[ld] (4 samples, 0.26%)</title><rect x="6.7585%" y="789" width="0.2625%" height="15" fill="rgb(207,181,40)" fg:x="103" fg:w="4"/><text x="7.0085%" y="799.50"></text></g><g><title>bfd_check_format_matches (4 samples, 0.26%)</title><rect x="6.7585%" y="773" width="0.2625%" height="15" fill="rgb(254,173,49)" fg:x="103" fg:w="4"/><text x="7.0085%" y="783.50"></text></g><g><title>bfd_elf64_object_p (3 samples, 0.20%)</title><rect x="6.8241%" y="757" width="0.1969%" height="15" fill="rgb(221,1,38)" fg:x="104" fg:w="3"/><text x="7.0741%" y="767.50"></text></g><g><title>bfd_seek (1 samples, 0.07%)</title><rect x="6.9554%" y="741" width="0.0656%" height="15" fill="rgb(206,124,46)" fg:x="106" fg:w="1"/><text x="7.2054%" y="751.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="6.9554%" y="725" width="0.0656%" height="15" fill="rgb(249,21,11)" fg:x="106" fg:w="1"/><text x="7.2054%" y="735.50"></text></g><g><title>[ld] (7 samples, 0.46%)</title><rect x="6.6929%" y="805" width="0.4593%" height="15" fill="rgb(222,201,40)" fg:x="102" fg:w="7"/><text x="6.9429%" y="815.50"></text></g><g><title>bfd_elf_link_add_symbols (2 samples, 0.13%)</title><rect x="7.0210%" y="789" width="0.1312%" height="15" fill="rgb(235,61,29)" fg:x="107" fg:w="2"/><text x="7.2710%" y="799.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="7.0866%" y="773" width="0.0656%" height="15" fill="rgb(219,207,3)" fg:x="108" fg:w="1"/><text x="7.3366%" y="783.50"></text></g><g><title>bfd_link_hash_lookup (1 samples, 0.07%)</title><rect x="7.0866%" y="757" width="0.0656%" height="15" fill="rgb(222,56,46)" fg:x="108" fg:w="1"/><text x="7.3366%" y="767.50"></text></g><g><title>bfd_hash_insert (1 samples, 0.07%)</title><rect x="7.0866%" y="741" width="0.0656%" height="15" fill="rgb(239,76,54)" fg:x="108" fg:w="1"/><text x="7.3366%" y="751.50"></text></g><g><title>[ld] (1 samples, 0.07%)</title><rect x="7.1522%" y="789" width="0.0656%" height="15" fill="rgb(231,124,27)" fg:x="109" fg:w="1"/><text x="7.4022%" y="799.50"></text></g><g><title>[ld] (1 samples, 0.07%)</title><rect x="7.1522%" y="773" width="0.0656%" height="15" fill="rgb(249,195,6)" fg:x="109" fg:w="1"/><text x="7.4022%" y="783.50"></text></g><g><title>[ld] (1 samples, 0.07%)</title><rect x="7.1522%" y="757" width="0.0656%" height="15" fill="rgb(237,174,47)" fg:x="109" fg:w="1"/><text x="7.4022%" y="767.50"></text></g><g><title>bfd_create (1 samples, 0.07%)</title><rect x="7.1522%" y="741" width="0.0656%" height="15" fill="rgb(206,201,31)" fg:x="109" fg:w="1"/><text x="7.4022%" y="751.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="7.1522%" y="725" width="0.0656%" height="15" fill="rgb(231,57,52)" fg:x="109" fg:w="1"/><text x="7.4022%" y="735.50"></text></g><g><title>_bfd_elf_archive_symbol_lookup (1 samples, 0.07%)</title><rect x="7.2178%" y="789" width="0.0656%" height="15" fill="rgb(248,177,22)" fg:x="110" fg:w="1"/><text x="7.4678%" y="799.50"></text></g><g><title>bfd_link_hash_lookup (1 samples, 0.07%)</title><rect x="7.2178%" y="773" width="0.0656%" height="15" fill="rgb(215,211,37)" fg:x="110" fg:w="1"/><text x="7.4678%" y="783.50"></text></g><g><title>bfd_hash_lookup (1 samples, 0.07%)</title><rect x="7.2178%" y="757" width="0.0656%" height="15" fill="rgb(241,128,51)" fg:x="110" fg:w="1"/><text x="7.4678%" y="767.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="7.2835%" y="757" width="0.0656%" height="15" fill="rgb(227,165,31)" fg:x="111" fg:w="1"/><text x="7.5335%" y="767.50"></text></g><g><title>bfd_get_file_size (1 samples, 0.07%)</title><rect x="7.2835%" y="741" width="0.0656%" height="15" fill="rgb(228,167,24)" fg:x="111" fg:w="1"/><text x="7.5335%" y="751.50"></text></g><g><title>_bfd_elf_setup_sections (1 samples, 0.07%)</title><rect x="7.3491%" y="757" width="0.0656%" height="15" fill="rgb(228,143,12)" fg:x="112" fg:w="1"/><text x="7.5991%" y="767.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="7.6115%" y="725" width="0.0656%" height="15" fill="rgb(249,149,8)" fg:x="116" fg:w="1"/><text x="7.8615%" y="735.50"></text></g><g><title>_bfd_elf_new_section_hook (1 samples, 0.07%)</title><rect x="7.6115%" y="709" width="0.0656%" height="15" fill="rgb(243,35,44)" fg:x="116" fg:w="1"/><text x="7.8615%" y="719.50"></text></g><g><title>bfd_hash_insert (1 samples, 0.07%)</title><rect x="7.6772%" y="709" width="0.0656%" height="15" fill="rgb(246,89,9)" fg:x="117" fg:w="1"/><text x="7.9272%" y="719.50"></text></g><g><title>bfd_make_section_anyway_with_flags (2 samples, 0.13%)</title><rect x="7.6772%" y="725" width="0.1312%" height="15" fill="rgb(233,213,13)" fg:x="117" fg:w="2"/><text x="7.9272%" y="735.50"></text></g><g><title>bfd_hash_lookup (1 samples, 0.07%)</title><rect x="7.7428%" y="709" width="0.0656%" height="15" fill="rgb(233,141,41)" fg:x="118" fg:w="1"/><text x="7.9928%" y="719.50"></text></g><g><title>bfd_check_format_matches (9 samples, 0.59%)</title><rect x="7.2835%" y="789" width="0.5906%" height="15" fill="rgb(239,167,4)" fg:x="111" fg:w="9"/><text x="7.5335%" y="799.50"></text></g><g><title>bfd_elf64_object_p (9 samples, 0.59%)</title><rect x="7.2835%" y="773" width="0.5906%" height="15" fill="rgb(209,217,16)" fg:x="111" fg:w="9"/><text x="7.5335%" y="783.50"></text></g><g><title>bfd_section_from_shdr (7 samples, 0.46%)</title><rect x="7.4147%" y="757" width="0.4593%" height="15" fill="rgb(219,88,35)" fg:x="113" fg:w="7"/><text x="7.6647%" y="767.50"></text></g><g><title>_bfd_elf_make_section_from_shdr (7 samples, 0.46%)</title><rect x="7.4147%" y="741" width="0.4593%" height="15" fill="rgb(220,193,23)" fg:x="113" fg:w="7"/><text x="7.6647%" y="751.50"></text></g><g><title>bfd_octets_per_byte (1 samples, 0.07%)</title><rect x="7.8084%" y="725" width="0.0656%" height="15" fill="rgb(230,90,52)" fg:x="119" fg:w="1"/><text x="8.0584%" y="735.50"></text></g><g><title>[libbfd-2.40.0.so] (2 samples, 0.13%)</title><rect x="8.0052%" y="773" width="0.1312%" height="15" fill="rgb(252,106,19)" fg:x="122" fg:w="2"/><text x="8.2552%" y="783.50"></text></g><g><title>bfd_link_hash_lookup (2 samples, 0.13%)</title><rect x="8.0052%" y="757" width="0.1312%" height="15" fill="rgb(206,74,20)" fg:x="122" fg:w="2"/><text x="8.2552%" y="767.50"></text></g><g><title>bfd_hash_lookup (2 samples, 0.13%)</title><rect x="8.0052%" y="741" width="0.1312%" height="15" fill="rgb(230,138,44)" fg:x="122" fg:w="2"/><text x="8.2552%" y="751.50"></text></g><g><title>[ld] (25 samples, 1.64%)</title><rect x="6.6929%" y="821" width="1.6404%" height="15" fill="rgb(235,182,43)" fg:x="102" fg:w="25"/><text x="6.9429%" y="831.50"></text></g><g><title>[libbfd-2.40.0.so] (18 samples, 1.18%)</title><rect x="7.1522%" y="805" width="1.1811%" height="15" fill="rgb(242,16,51)" fg:x="109" fg:w="18"/><text x="7.4022%" y="815.50"></text></g><g><title>bfd_elf_link_add_symbols (7 samples, 0.46%)</title><rect x="7.8740%" y="789" width="0.4593%" height="15" fill="rgb(248,9,4)" fg:x="120" fg:w="7"/><text x="8.1240%" y="799.50"></text></g><g><title>_bfd_elf_link_info_read_relocs (3 samples, 0.20%)</title><rect x="8.1365%" y="773" width="0.1969%" height="15" fill="rgb(210,31,22)" fg:x="124" fg:w="3"/><text x="8.3865%" y="783.50"></text></g><g><title>[libbfd-2.40.0.so] (3 samples, 0.20%)</title><rect x="8.1365%" y="757" width="0.1969%" height="15" fill="rgb(239,54,39)" fg:x="124" fg:w="3"/><text x="8.3865%" y="767.50"></text></g><g><title>bfd_elf64_swap_reloca_in (2 samples, 0.13%)</title><rect x="8.2021%" y="741" width="0.1312%" height="15" fill="rgb(230,99,41)" fg:x="125" fg:w="2"/><text x="8.4521%" y="751.50"></text></g><g><title>bfd_getl64 (1 samples, 0.07%)</title><rect x="8.2677%" y="725" width="0.0656%" height="15" fill="rgb(253,106,12)" fg:x="126" fg:w="1"/><text x="8.5177%" y="735.50"></text></g><g><title>bfd_elf_discard_info (1 samples, 0.07%)</title><rect x="8.3333%" y="821" width="0.0656%" height="15" fill="rgb(213,46,41)" fg:x="127" fg:w="1"/><text x="8.5833%" y="831.50"></text></g><g><title>_bfd_elf_discard_section_eh_frame (1 samples, 0.07%)</title><rect x="8.3333%" y="805" width="0.0656%" height="15" fill="rgb(215,133,35)" fg:x="127" fg:w="1"/><text x="8.5833%" y="815.50"></text></g><g><title>iterative_hash (1 samples, 0.07%)</title><rect x="8.3333%" y="789" width="0.0656%" height="15" fill="rgb(213,28,5)" fg:x="127" fg:w="1"/><text x="8.5833%" y="799.50"></text></g><g><title>_bfd_elf_link_iterate_on_relocs (2 samples, 0.13%)</title><rect x="8.3990%" y="789" width="0.1312%" height="15" fill="rgb(215,77,49)" fg:x="128" fg:w="2"/><text x="8.6490%" y="799.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="8.4646%" y="773" width="0.0656%" height="15" fill="rgb(248,100,22)" fg:x="129" fg:w="1"/><text x="8.7146%" y="783.50"></text></g><g><title>[libbfd-2.40.0.so] (3 samples, 0.20%)</title><rect x="8.3990%" y="805" width="0.1969%" height="15" fill="rgb(208,67,9)" fg:x="128" fg:w="3"/><text x="8.6490%" y="815.50"></text></g><g><title>bfd_link_hash_traverse (1 samples, 0.07%)</title><rect x="8.5302%" y="789" width="0.0656%" height="15" fill="rgb(219,133,21)" fg:x="130" fg:w="1"/><text x="8.7802%" y="799.50"></text></g><g><title>_bfd_x86_elf_size_dynamic_sections (1 samples, 0.07%)</title><rect x="8.5958%" y="805" width="0.0656%" height="15" fill="rgb(246,46,29)" fg:x="131" fg:w="1"/><text x="8.8458%" y="815.50"></text></g><g><title>bfd_link_hash_traverse (1 samples, 0.07%)</title><rect x="8.5958%" y="789" width="0.0656%" height="15" fill="rgb(246,185,52)" fg:x="131" fg:w="1"/><text x="8.8458%" y="799.50"></text></g><g><title>[ld] (34 samples, 2.23%)</title><rect x="6.5617%" y="837" width="2.2310%" height="15" fill="rgb(252,136,11)" fg:x="100" fg:w="34"/><text x="6.8117%" y="847.50">[..</text></g><g><title>bfd_elf_size_dynamic_sections (6 samples, 0.39%)</title><rect x="8.3990%" y="821" width="0.3937%" height="15" fill="rgb(219,138,53)" fg:x="128" fg:w="6"/><text x="8.6490%" y="831.50"></text></g><g><title>bfd_link_hash_traverse (2 samples, 0.13%)</title><rect x="8.6614%" y="805" width="0.1312%" height="15" fill="rgb(211,51,23)" fg:x="132" fg:w="2"/><text x="8.9114%" y="815.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="8.7270%" y="789" width="0.0656%" height="15" fill="rgb(247,221,28)" fg:x="133" fg:w="1"/><text x="8.9770%" y="799.50"></text></g><g><title>_bfd_elf_link_iterate_on_relocs (1 samples, 0.07%)</title><rect x="8.7927%" y="837" width="0.0656%" height="15" fill="rgb(251,222,45)" fg:x="134" fg:w="1"/><text x="9.0427%" y="847.50"></text></g><g><title>_bfd_elf_merge_sections (3 samples, 0.20%)</title><rect x="8.8583%" y="837" width="0.1969%" height="15" fill="rgb(217,162,53)" fg:x="135" fg:w="3"/><text x="9.1083%" y="847.50"></text></g><g><title>[libbfd-2.40.0.so] (3 samples, 0.20%)</title><rect x="8.8583%" y="821" width="0.1969%" height="15" fill="rgb(229,93,14)" fg:x="135" fg:w="3"/><text x="9.1083%" y="831.50"></text></g><g><title>bfd_hash_insert (1 samples, 0.07%)</title><rect x="8.9895%" y="805" width="0.0656%" height="15" fill="rgb(209,67,49)" fg:x="137" fg:w="1"/><text x="9.2395%" y="815.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="9.1207%" y="821" width="0.0656%" height="15" fill="rgb(213,87,29)" fg:x="139" fg:w="1"/><text x="9.3707%" y="831.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="9.1207%" y="805" width="0.0656%" height="15" fill="rgb(205,151,52)" fg:x="139" fg:w="1"/><text x="9.3707%" y="815.50"></text></g><g><title>bfd_elf_get_elf_syms (1 samples, 0.07%)</title><rect x="9.1207%" y="789" width="0.0656%" height="15" fill="rgb(253,215,39)" fg:x="139" fg:w="1"/><text x="9.3707%" y="799.50"></text></g><g><title>bfd_elf64_swap_symbol_in (1 samples, 0.07%)</title><rect x="9.1207%" y="773" width="0.0656%" height="15" fill="rgb(221,220,41)" fg:x="139" fg:w="1"/><text x="9.3707%" y="783.50"></text></g><g><title>bfd_getl64 (1 samples, 0.07%)</title><rect x="9.1207%" y="757" width="0.0656%" height="15" fill="rgb(218,133,21)" fg:x="139" fg:w="1"/><text x="9.3707%" y="767.50"></text></g><g><title>_bfd_elf_gc_mark_extra_sections (2 samples, 0.13%)</title><rect x="9.1864%" y="821" width="0.1312%" height="15" fill="rgb(221,193,43)" fg:x="140" fg:w="2"/><text x="9.4364%" y="831.50"></text></g><g><title>_bfd_elf_gc_mark (1 samples, 0.07%)</title><rect x="9.2520%" y="805" width="0.0656%" height="15" fill="rgb(240,128,52)" fg:x="141" fg:w="1"/><text x="9.5020%" y="815.50"></text></g><g><title>bfd_elf_gc_sections (5 samples, 0.33%)</title><rect x="9.0551%" y="837" width="0.3281%" height="15" fill="rgb(253,114,12)" fg:x="138" fg:w="5"/><text x="9.3051%" y="847.50"></text></g><g><title>bfd_link_hash_traverse (1 samples, 0.07%)</title><rect x="9.3176%" y="821" width="0.0656%" height="15" fill="rgb(215,223,47)" fg:x="142" fg:w="1"/><text x="9.5676%" y="831.50"></text></g><g><title>bfd_elf_gc_mark_dynamic_ref_symbol (1 samples, 0.07%)</title><rect x="9.3176%" y="805" width="0.0656%" height="15" fill="rgb(248,225,23)" fg:x="142" fg:w="1"/><text x="9.5676%" y="815.50"></text></g><g><title>[ld] (45 samples, 2.95%)</title><rect x="6.4961%" y="853" width="2.9528%" height="15" fill="rgb(250,108,0)" fg:x="99" fg:w="45"/><text x="6.7461%" y="863.50">[ld]</text></g><g><title>bfd_link_hash_traverse (1 samples, 0.07%)</title><rect x="9.3832%" y="837" width="0.0656%" height="15" fill="rgb(228,208,7)" fg:x="143" fg:w="1"/><text x="9.6332%" y="847.50"></text></g><g><title>bfd_close (10 samples, 0.66%)</title><rect x="9.4488%" y="853" width="0.6562%" height="15" fill="rgb(244,45,10)" fg:x="144" fg:w="10"/><text x="9.6988%" y="863.50"></text></g><g><title>_bfd_elf_write_object_contents (10 samples, 0.66%)</title><rect x="9.4488%" y="837" width="0.6562%" height="15" fill="rgb(207,125,25)" fg:x="144" fg:w="10"/><text x="9.6988%" y="847.50"></text></g><g><title>[ld] (10 samples, 0.66%)</title><rect x="9.4488%" y="821" width="0.6562%" height="15" fill="rgb(210,195,18)" fg:x="144" fg:w="10"/><text x="9.6988%" y="831.50"></text></g><g><title>[ld] (10 samples, 0.66%)</title><rect x="9.4488%" y="805" width="0.6562%" height="15" fill="rgb(249,80,12)" fg:x="144" fg:w="10"/><text x="9.6988%" y="815.50"></text></g><g><title>bfd_elf64_checksum_contents (10 samples, 0.66%)</title><rect x="9.4488%" y="789" width="0.6562%" height="15" fill="rgb(221,65,9)" fg:x="144" fg:w="10"/><text x="9.6988%" y="799.50"></text></g><g><title>[ld] (10 samples, 0.66%)</title><rect x="9.4488%" y="773" width="0.6562%" height="15" fill="rgb(235,49,36)" fg:x="144" fg:w="10"/><text x="9.6988%" y="783.50"></text></g><g><title>[ld] (10 samples, 0.66%)</title><rect x="9.4488%" y="757" width="0.6562%" height="15" fill="rgb(225,32,20)" fg:x="144" fg:w="10"/><text x="9.6988%" y="767.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="10.5643%" y="821" width="0.0656%" height="15" fill="rgb(215,141,46)" fg:x="161" fg:w="1"/><text x="10.8143%" y="831.50"></text></g><g><title>bfd_octets_per_byte (1 samples, 0.07%)</title><rect x="10.5643%" y="805" width="0.0656%" height="15" fill="rgb(250,160,47)" fg:x="161" fg:w="1"/><text x="10.8143%" y="815.50"></text></g><g><title>[libbfd-2.40.0.so] (10 samples, 0.66%)</title><rect x="10.3018%" y="837" width="0.6562%" height="15" fill="rgb(216,222,40)" fg:x="157" fg:w="10"/><text x="10.5518%" y="847.50"></text></g><g><title>_bfd_elf_rela_local_sym (5 samples, 0.33%)</title><rect x="10.6299%" y="821" width="0.3281%" height="15" fill="rgb(234,217,39)" fg:x="162" fg:w="5"/><text x="10.8799%" y="831.50"></text></g><g><title>[libbfd-2.40.0.so] (5 samples, 0.33%)</title><rect x="10.6299%" y="805" width="0.3281%" height="15" fill="rgb(207,178,40)" fg:x="162" fg:w="5"/><text x="10.8799%" y="815.50"></text></g><g><title>[libbfd-2.40.0.so] (5 samples, 0.33%)</title><rect x="10.6299%" y="789" width="0.3281%" height="15" fill="rgb(221,136,13)" fg:x="162" fg:w="5"/><text x="10.8799%" y="799.50"></text></g><g><title>bfd_elf_sym_name (2 samples, 0.13%)</title><rect x="10.9580%" y="837" width="0.1312%" height="15" fill="rgb(249,199,10)" fg:x="167" fg:w="2"/><text x="11.2080%" y="847.50"></text></g><g><title>[ld] (72 samples, 4.72%)</title><rect x="6.4961%" y="869" width="4.7244%" height="15" fill="rgb(249,222,13)" fg:x="99" fg:w="72"/><text x="6.7461%" y="879.50">[ld]</text></g><g><title>bfd_elf_final_link (17 samples, 1.12%)</title><rect x="10.1050%" y="853" width="1.1155%" height="15" fill="rgb(244,185,38)" fg:x="154" fg:w="17"/><text x="10.3550%" y="863.50"></text></g><g><title>bfd_hash_traverse (2 samples, 0.13%)</title><rect x="11.0892%" y="837" width="0.1312%" height="15" fill="rgb(236,202,9)" fg:x="169" fg:w="2"/><text x="11.3392%" y="847.50"></text></g><g><title>[libbfd-2.40.0.so] (2 samples, 0.13%)</title><rect x="11.0892%" y="821" width="0.1312%" height="15" fill="rgb(250,229,37)" fg:x="169" fg:w="2"/><text x="11.3392%" y="831.50"></text></g><g><title>[libc.so.6] (89 samples, 5.84%)</title><rect x="5.5774%" y="885" width="5.8399%" height="15" fill="rgb(206,174,23)" fg:x="85" fg:w="89"/><text x="5.8274%" y="895.50">[libc.s..</text></g><g><title>[libbfd-2.40.0.so] (3 samples, 0.20%)</title><rect x="11.2205%" y="869" width="0.1969%" height="15" fill="rgb(211,33,43)" fg:x="171" fg:w="3"/><text x="11.4705%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.4173%" y="885" width="0.0656%" height="15" fill="rgb(245,58,50)" fg:x="174" fg:w="1"/><text x="11.6673%" y="895.50"></text></g><g><title>[libbfd-2.40.0.so] (1 samples, 0.07%)</title><rect x="11.4173%" y="869" width="0.0656%" height="15" fill="rgb(244,68,36)" fg:x="174" fg:w="1"/><text x="11.6673%" y="879.50"></text></g><g><title>_IO_file_seekoff (1 samples, 0.07%)</title><rect x="11.4829%" y="885" width="0.0656%" height="15" fill="rgb(232,229,15)" fg:x="175" fg:w="1"/><text x="11.7329%" y="895.50"></text></g><g><title>__isoc99_sscanf (1 samples, 0.07%)</title><rect x="11.5486%" y="885" width="0.0656%" height="15" fill="rgb(254,30,23)" fg:x="176" fg:w="1"/><text x="11.7986%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="11.5486%" y="869" width="0.0656%" height="15" fill="rgb(235,160,14)" fg:x="176" fg:w="1"/><text x="11.7986%" y="879.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="11.6142%" y="885" width="0.0656%" height="15" fill="rgb(212,155,44)" fg:x="177" fg:w="1"/><text x="11.8642%" y="895.50"></text></g><g><title>ld (109 samples, 7.15%)</title><rect x="4.9213%" y="901" width="7.1522%" height="15" fill="rgb(226,2,50)" fg:x="75" fg:w="109"/><text x="5.1713%" y="911.50">ld</text></g><g><title>read (6 samples, 0.39%)</title><rect x="11.6798%" y="885" width="0.3937%" height="15" fill="rgb(234,177,6)" fg:x="178" fg:w="6"/><text x="11.9298%" y="895.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="12.0735%" y="885" width="0.0656%" height="15" fill="rgb(217,24,9)" fg:x="184" fg:w="1"/><text x="12.3235%" y="895.50"></text></g><g><title>llvm::Twine::str[abi:cxx11] (1 samples, 0.07%)</title><rect x="12.0735%" y="869" width="0.0656%" height="15" fill="rgb(220,13,46)" fg:x="184" fg:w="1"/><text x="12.3235%" y="879.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.07%)</title><rect x="12.1391%" y="869" width="0.0656%" height="15" fill="rgb(239,221,27)" fg:x="185" fg:w="1"/><text x="12.3891%" y="879.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.07%)</title><rect x="12.1391%" y="853" width="0.0656%" height="15" fill="rgb(222,198,25)" fg:x="185" fg:w="1"/><text x="12.3891%" y="863.50"></text></g><g><title>tcache_destroy (1 samples, 0.07%)</title><rect x="12.1391%" y="837" width="0.0656%" height="15" fill="rgb(211,99,13)" fg:x="185" fg:w="1"/><text x="12.3891%" y="847.50"></text></g><g><title>tcache_flush_cache (1 samples, 0.07%)</title><rect x="12.1391%" y="821" width="0.0656%" height="15" fill="rgb(232,111,31)" fg:x="185" fg:w="1"/><text x="12.3891%" y="831.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.07%)</title><rect x="12.1391%" y="805" width="0.0656%" height="15" fill="rgb(245,82,37)" fg:x="185" fg:w="1"/><text x="12.3891%" y="815.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.07%)</title><rect x="12.1391%" y="789" width="0.0656%" height="15" fill="rgb(227,149,46)" fg:x="185" fg:w="1"/><text x="12.3891%" y="799.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.07%)</title><rect x="12.1391%" y="773" width="0.0656%" height="15" fill="rgb(218,36,50)" fg:x="185" fg:w="1"/><text x="12.3891%" y="783.50"></text></g><g><title>llvm::AsmPrinter::emitGlobalVariable (9 samples, 0.59%)</title><rect x="12.2047%" y="661" width="0.5906%" height="15" fill="rgb(226,80,48)" fg:x="186" fg:w="9"/><text x="12.4547%" y="671.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::getExplicitSectionGlobal (9 samples, 0.59%)</title><rect x="12.2047%" y="645" width="0.5906%" height="15" fill="rgb(238,224,15)" fg:x="186" fg:w="9"/><text x="12.4547%" y="655.50"></text></g><g><title>selectExplicitSectionGlobal (9 samples, 0.59%)</title><rect x="12.2047%" y="629" width="0.5906%" height="15" fill="rgb(241,136,10)" fg:x="186" fg:w="9"/><text x="12.4547%" y="639.50"></text></g><g><title>llvm::MCContext::isELFGenericMergeableSection (5 samples, 0.33%)</title><rect x="12.4672%" y="613" width="0.3281%" height="15" fill="rgb(208,32,45)" fg:x="190" fg:w="5"/><text x="12.7172%" y="623.50"></text></g><g><title>llvm::FPPassManager::doFinalization (10 samples, 0.66%)</title><rect x="12.2047%" y="693" width="0.6562%" height="15" fill="rgb(207,135,9)" fg:x="186" fg:w="10"/><text x="12.4547%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (10 samples, 0.66%)</title><rect x="12.2047%" y="677" width="0.6562%" height="15" fill="rgb(206,86,44)" fg:x="186" fg:w="10"/><text x="12.4547%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="12.7953%" y="661" width="0.0656%" height="15" fill="rgb(245,177,15)" fg:x="195" fg:w="1"/><text x="13.0453%" y="671.50"></text></g><g><title>llvm::DwarfFile::emitUnits (1 samples, 0.07%)</title><rect x="12.7953%" y="645" width="0.0656%" height="15" fill="rgb(206,64,50)" fg:x="195" fg:w="1"/><text x="13.0453%" y="655.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="629" width="0.0656%" height="15" fill="rgb(234,36,40)" fg:x="195" fg:w="1"/><text x="13.0453%" y="639.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="613" width="0.0656%" height="15" fill="rgb(213,64,8)" fg:x="195" fg:w="1"/><text x="13.0453%" y="623.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="597" width="0.0656%" height="15" fill="rgb(210,75,36)" fg:x="195" fg:w="1"/><text x="13.0453%" y="607.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="581" width="0.0656%" height="15" fill="rgb(229,88,21)" fg:x="195" fg:w="1"/><text x="13.0453%" y="591.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="565" width="0.0656%" height="15" fill="rgb(252,204,47)" fg:x="195" fg:w="1"/><text x="13.0453%" y="575.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="12.7953%" y="549" width="0.0656%" height="15" fill="rgb(208,77,27)" fg:x="195" fg:w="1"/><text x="13.0453%" y="559.50"></text></g><g><title>llvm::MCStreamer::emitValue (1 samples, 0.07%)</title><rect x="12.7953%" y="533" width="0.0656%" height="15" fill="rgb(221,76,26)" fg:x="195" fg:w="1"/><text x="13.0453%" y="543.50"></text></g><g><title>llvm::SmallVectorBase&lt;unsigned int&gt;::grow_pod (1 samples, 0.07%)</title><rect x="12.7953%" y="517" width="0.0656%" height="15" fill="rgb(225,139,18)" fg:x="195" fg:w="1"/><text x="13.0453%" y="527.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="12.7953%" y="501" width="0.0656%" height="15" fill="rgb(230,137,11)" fg:x="195" fg:w="1"/><text x="13.0453%" y="511.50"></text></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.07%)</title><rect x="12.7953%" y="485" width="0.0656%" height="15" fill="rgb(212,28,1)" fg:x="195" fg:w="1"/><text x="13.0453%" y="495.50"></text></g><g><title>rtree_metadata_read (1 samples, 0.07%)</title><rect x="12.7953%" y="469" width="0.0656%" height="15" fill="rgb(248,164,17)" fg:x="195" fg:w="1"/><text x="13.0453%" y="479.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.07%)</title><rect x="12.7953%" y="453" width="0.0656%" height="15" fill="rgb(222,171,42)" fg:x="195" fg:w="1"/><text x="13.0453%" y="463.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.07%)</title><rect x="12.7953%" y="437" width="0.0656%" height="15" fill="rgb(243,84,45)" fg:x="195" fg:w="1"/><text x="13.0453%" y="447.50"></text></g><g><title>atomic_load_p (1 samples, 0.07%)</title><rect x="12.7953%" y="421" width="0.0656%" height="15" fill="rgb(252,49,23)" fg:x="195" fg:w="1"/><text x="13.0453%" y="431.50"></text></g><g><title>llvm::X86Subtarget::enableIndirectBrExpand (1 samples, 0.07%)</title><rect x="12.8609%" y="677" width="0.0656%" height="15" fill="rgb(215,19,7)" fg:x="196" fg:w="1"/><text x="13.1109%" y="687.50"></text></g><g><title>[libc.so.6] (13 samples, 0.85%)</title><rect x="12.1391%" y="885" width="0.8530%" height="15" fill="rgb(238,81,41)" fg:x="185" fg:w="13"/><text x="12.3891%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.79%)</title><rect x="12.2047%" y="869" width="0.7874%" height="15" fill="rgb(210,199,37)" fg:x="186" fg:w="12"/><text x="12.4547%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="12.2047%" y="853" width="0.7874%" height="15" fill="rgb(244,192,49)" fg:x="186" fg:w="12"/><text x="12.4547%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="12.2047%" y="837" width="0.7874%" height="15" fill="rgb(226,211,11)" fg:x="186" fg:w="12"/><text x="12.4547%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (12 samples, 0.79%)</title><rect x="12.2047%" y="821" width="0.7874%" height="15" fill="rgb(236,162,54)" fg:x="186" fg:w="12"/><text x="12.4547%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (12 samples, 0.79%)</title><rect x="12.2047%" y="805" width="0.7874%" height="15" fill="rgb(220,229,9)" fg:x="186" fg:w="12"/><text x="12.4547%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="12.2047%" y="789" width="0.7874%" height="15" fill="rgb(250,87,22)" fg:x="186" fg:w="12"/><text x="12.4547%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="12.2047%" y="773" width="0.7874%" height="15" fill="rgb(239,43,17)" fg:x="186" fg:w="12"/><text x="12.4547%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (12 samples, 0.79%)</title><rect x="12.2047%" y="757" width="0.7874%" height="15" fill="rgb(231,177,25)" fg:x="186" fg:w="12"/><text x="12.4547%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (12 samples, 0.79%)</title><rect x="12.2047%" y="741" width="0.7874%" height="15" fill="rgb(219,179,1)" fg:x="186" fg:w="12"/><text x="12.4547%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (12 samples, 0.79%)</title><rect x="12.2047%" y="725" width="0.7874%" height="15" fill="rgb(238,219,53)" fg:x="186" fg:w="12"/><text x="12.4547%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (12 samples, 0.79%)</title><rect x="12.2047%" y="709" width="0.7874%" height="15" fill="rgb(232,167,36)" fg:x="186" fg:w="12"/><text x="12.4547%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.13%)</title><rect x="12.8609%" y="693" width="0.1312%" height="15" fill="rgb(244,19,51)" fg:x="196" fg:w="2"/><text x="13.1109%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="12.9265%" y="677" width="0.0656%" height="15" fill="rgb(224,6,22)" fg:x="197" fg:w="1"/><text x="13.1765%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="12.9265%" y="661" width="0.0656%" height="15" fill="rgb(224,145,5)" fg:x="197" fg:w="1"/><text x="13.1765%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="12.9265%" y="645" width="0.0656%" height="15" fill="rgb(234,130,49)" fg:x="197" fg:w="1"/><text x="13.1765%" y="655.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="12.9921%" y="869" width="0.0656%" height="15" fill="rgb(254,6,2)" fg:x="198" fg:w="1"/><text x="13.2421%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.13%)</title><rect x="12.9921%" y="885" width="0.1312%" height="15" fill="rgb(208,96,46)" fg:x="198" fg:w="2"/><text x="13.2421%" y="895.50"></text></g><g><title>selectExplicitSectionGlobal (1 samples, 0.07%)</title><rect x="13.0577%" y="869" width="0.0656%" height="15" fill="rgb(239,3,39)" fg:x="199" fg:w="1"/><text x="13.3077%" y="879.50"></text></g><g><title>opt_1dv8q8jsvoa (17 samples, 1.12%)</title><rect x="12.0735%" y="901" width="1.1155%" height="15" fill="rgb(233,210,1)" fg:x="184" fg:w="17"/><text x="12.3235%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="13.1234%" y="885" width="0.0656%" height="15" fill="rgb(244,137,37)" fg:x="200" fg:w="1"/><text x="13.3734%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="13.1234%" y="869" width="0.0656%" height="15" fill="rgb(240,136,2)" fg:x="200" fg:w="1"/><text x="13.3734%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="13.1234%" y="853" width="0.0656%" height="15" fill="rgb(239,18,37)" fg:x="200" fg:w="1"/><text x="13.3734%" y="863.50"></text></g><g><title>_rjem_je_tsd_te_init (1 samples, 0.07%)</title><rect x="13.1234%" y="837" width="0.0656%" height="15" fill="rgb(218,185,22)" fg:x="200" fg:w="1"/><text x="13.3734%" y="847.50"></text></g><g><title>te_init (1 samples, 0.07%)</title><rect x="13.1234%" y="821" width="0.0656%" height="15" fill="rgb(225,218,4)" fg:x="200" fg:w="1"/><text x="13.3734%" y="831.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (1 samples, 0.07%)</title><rect x="13.1234%" y="805" width="0.0656%" height="15" fill="rgb(230,182,32)" fg:x="200" fg:w="1"/><text x="13.3734%" y="815.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="13.1890%" y="885" width="0.0656%" height="15" fill="rgb(242,56,43)" fg:x="201" fg:w="1"/><text x="13.4390%" y="895.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.07%)</title><rect x="13.1890%" y="869" width="0.0656%" height="15" fill="rgb(233,99,24)" fg:x="201" fg:w="1"/><text x="13.4390%" y="879.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.07%)</title><rect x="13.2546%" y="869" width="0.0656%" height="15" fill="rgb(234,209,42)" fg:x="202" fg:w="1"/><text x="13.5046%" y="879.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.07%)</title><rect x="13.2546%" y="853" width="0.0656%" height="15" fill="rgb(227,7,12)" fg:x="202" fg:w="1"/><text x="13.5046%" y="863.50"></text></g><g><title>tcache_destroy (1 samples, 0.07%)</title><rect x="13.2546%" y="837" width="0.0656%" height="15" fill="rgb(245,203,43)" fg:x="202" fg:w="1"/><text x="13.5046%" y="847.50"></text></g><g><title>tcache_flush_cache (1 samples, 0.07%)</title><rect x="13.2546%" y="821" width="0.0656%" height="15" fill="rgb(238,205,33)" fg:x="202" fg:w="1"/><text x="13.5046%" y="831.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.07%)</title><rect x="13.2546%" y="805" width="0.0656%" height="15" fill="rgb(231,56,7)" fg:x="202" fg:w="1"/><text x="13.5046%" y="815.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.07%)</title><rect x="13.2546%" y="789" width="0.0656%" height="15" fill="rgb(244,186,29)" fg:x="202" fg:w="1"/><text x="13.5046%" y="799.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.07%)</title><rect x="13.2546%" y="773" width="0.0656%" height="15" fill="rgb(234,111,31)" fg:x="202" fg:w="1"/><text x="13.5046%" y="783.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.07%)</title><rect x="13.2546%" y="757" width="0.0656%" height="15" fill="rgb(241,149,10)" fg:x="202" fg:w="1"/><text x="13.5046%" y="767.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.07%)</title><rect x="13.2546%" y="741" width="0.0656%" height="15" fill="rgb(249,206,44)" fg:x="202" fg:w="1"/><text x="13.5046%" y="751.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.07%)</title><rect x="13.2546%" y="725" width="0.0656%" height="15" fill="rgb(251,153,30)" fg:x="202" fg:w="1"/><text x="13.5046%" y="735.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.07%)</title><rect x="13.2546%" y="709" width="0.0656%" height="15" fill="rgb(239,152,38)" fg:x="202" fg:w="1"/><text x="13.5046%" y="719.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.07%)</title><rect x="13.2546%" y="693" width="0.0656%" height="15" fill="rgb(249,139,47)" fg:x="202" fg:w="1"/><text x="13.5046%" y="703.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.07%)</title><rect x="13.2546%" y="677" width="0.0656%" height="15" fill="rgb(244,64,35)" fg:x="202" fg:w="1"/><text x="13.5046%" y="687.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (1 samples, 0.07%)</title><rect x="13.2546%" y="661" width="0.0656%" height="15" fill="rgb(216,46,15)" fg:x="202" fg:w="1"/><text x="13.5046%" y="671.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.07%)</title><rect x="13.2546%" y="645" width="0.0656%" height="15" fill="rgb(250,74,19)" fg:x="202" fg:w="1"/><text x="13.5046%" y="655.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.07%)</title><rect x="13.2546%" y="629" width="0.0656%" height="15" fill="rgb(249,42,33)" fg:x="202" fg:w="1"/><text x="13.5046%" y="639.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="13.3202%" y="709" width="0.0656%" height="15" fill="rgb(242,149,17)" fg:x="203" fg:w="1"/><text x="13.5702%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="13.3202%" y="693" width="0.0656%" height="15" fill="rgb(244,29,21)" fg:x="203" fg:w="1"/><text x="13.5702%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="13.3202%" y="677" width="0.0656%" height="15" fill="rgb(220,130,37)" fg:x="203" fg:w="1"/><text x="13.5702%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="13.3202%" y="661" width="0.0656%" height="15" fill="rgb(211,67,2)" fg:x="203" fg:w="1"/><text x="13.5702%" y="671.50"></text></g><g><title>llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="13.3202%" y="645" width="0.0656%" height="15" fill="rgb(235,68,52)" fg:x="203" fg:w="1"/><text x="13.5702%" y="655.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="13.3202%" y="629" width="0.0656%" height="15" fill="rgb(246,142,3)" fg:x="203" fg:w="1"/><text x="13.5702%" y="639.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.07%)</title><rect x="13.3202%" y="613" width="0.0656%" height="15" fill="rgb(241,25,7)" fg:x="203" fg:w="1"/><text x="13.5702%" y="623.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.07%)</title><rect x="13.5827%" y="677" width="0.0656%" height="15" fill="rgb(242,119,39)" fg:x="207" fg:w="1"/><text x="13.8327%" y="687.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="13.5827%" y="661" width="0.0656%" height="15" fill="rgb(241,98,45)" fg:x="207" fg:w="1"/><text x="13.8327%" y="671.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="13.5827%" y="645" width="0.0656%" height="15" fill="rgb(254,28,30)" fg:x="207" fg:w="1"/><text x="13.8327%" y="655.50"></text></g><g><title>llvm::MachineDominatorTree::releaseMemory (1 samples, 0.07%)</title><rect x="13.6483%" y="677" width="0.0656%" height="15" fill="rgb(241,142,54)" fg:x="208" fg:w="1"/><text x="13.8983%" y="687.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="13.6483%" y="661" width="0.0656%" height="15" fill="rgb(222,85,15)" fg:x="208" fg:w="1"/><text x="13.8983%" y="671.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="13.6483%" y="645" width="0.0656%" height="15" fill="rgb(210,85,47)" fg:x="208" fg:w="1"/><text x="13.8983%" y="655.50"></text></g><g><title>llvm::SelectionDAG::Combine (1 samples, 0.07%)</title><rect x="13.7139%" y="629" width="0.0656%" height="15" fill="rgb(224,206,25)" fg:x="209" fg:w="1"/><text x="13.9639%" y="639.50"></text></g><g><title>llvm::SelectionDAG::RemoveDeadNodes (1 samples, 0.07%)</title><rect x="13.7139%" y="613" width="0.0656%" height="15" fill="rgb(243,201,19)" fg:x="209" fg:w="1"/><text x="13.9639%" y="623.50"></text></g><g><title>llvm::HandleSDNode::~HandleSDNode (1 samples, 0.07%)</title><rect x="13.7139%" y="597" width="0.0656%" height="15" fill="rgb(236,59,4)" fg:x="209" fg:w="1"/><text x="13.9639%" y="607.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.13%)</title><rect x="13.7139%" y="677" width="0.1312%" height="15" fill="rgb(254,179,45)" fg:x="209" fg:w="2"/><text x="13.9639%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.13%)</title><rect x="13.7139%" y="661" width="0.1312%" height="15" fill="rgb(226,14,10)" fg:x="209" fg:w="2"/><text x="13.9639%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.13%)</title><rect x="13.7139%" y="645" width="0.1312%" height="15" fill="rgb(244,27,41)" fg:x="209" fg:w="2"/><text x="13.9639%" y="655.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitStore (1 samples, 0.07%)</title><rect x="13.7795%" y="629" width="0.0656%" height="15" fill="rgb(235,35,32)" fg:x="210" fg:w="1"/><text x="14.0295%" y="639.50"></text></g><g><title>llvm::SelectionDAG::getStore (1 samples, 0.07%)</title><rect x="13.7795%" y="613" width="0.0656%" height="15" fill="rgb(218,68,31)" fg:x="210" fg:w="1"/><text x="14.0295%" y="623.50"></text></g><g><title>llvm::MetadataTracking::track (1 samples, 0.07%)</title><rect x="13.7795%" y="597" width="0.0656%" height="15" fill="rgb(207,120,37)" fg:x="210" fg:w="1"/><text x="14.0295%" y="607.50"></text></g><g><title>[libc.so.6] (10 samples, 0.66%)</title><rect x="13.2546%" y="885" width="0.6562%" height="15" fill="rgb(227,98,0)" fg:x="202" fg:w="10"/><text x="13.5046%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.59%)</title><rect x="13.3202%" y="869" width="0.5906%" height="15" fill="rgb(207,7,3)" fg:x="203" fg:w="9"/><text x="13.5702%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.59%)</title><rect x="13.3202%" y="853" width="0.5906%" height="15" fill="rgb(206,98,19)" fg:x="203" fg:w="9"/><text x="13.5702%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.59%)</title><rect x="13.3202%" y="837" width="0.5906%" height="15" fill="rgb(217,5,26)" fg:x="203" fg:w="9"/><text x="13.5702%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (9 samples, 0.59%)</title><rect x="13.3202%" y="821" width="0.5906%" height="15" fill="rgb(235,190,38)" fg:x="203" fg:w="9"/><text x="13.5702%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (9 samples, 0.59%)</title><rect x="13.3202%" y="805" width="0.5906%" height="15" fill="rgb(247,86,24)" fg:x="203" fg:w="9"/><text x="13.5702%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (9 samples, 0.59%)</title><rect x="13.3202%" y="789" width="0.5906%" height="15" fill="rgb(205,101,16)" fg:x="203" fg:w="9"/><text x="13.5702%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (9 samples, 0.59%)</title><rect x="13.3202%" y="773" width="0.5906%" height="15" fill="rgb(246,168,33)" fg:x="203" fg:w="9"/><text x="13.5702%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (9 samples, 0.59%)</title><rect x="13.3202%" y="757" width="0.5906%" height="15" fill="rgb(231,114,1)" fg:x="203" fg:w="9"/><text x="13.5702%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (9 samples, 0.59%)</title><rect x="13.3202%" y="741" width="0.5906%" height="15" fill="rgb(207,184,53)" fg:x="203" fg:w="9"/><text x="13.5702%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (9 samples, 0.59%)</title><rect x="13.3202%" y="725" width="0.5906%" height="15" fill="rgb(224,95,51)" fg:x="203" fg:w="9"/><text x="13.5702%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (8 samples, 0.52%)</title><rect x="13.3858%" y="709" width="0.5249%" height="15" fill="rgb(212,188,45)" fg:x="204" fg:w="8"/><text x="13.6358%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (8 samples, 0.52%)</title><rect x="13.3858%" y="693" width="0.5249%" height="15" fill="rgb(223,154,38)" fg:x="204" fg:w="8"/><text x="13.6358%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="13.8451%" y="677" width="0.0656%" height="15" fill="rgb(251,22,52)" fg:x="211" fg:w="1"/><text x="14.0951%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="13.8451%" y="661" width="0.0656%" height="15" fill="rgb(229,209,22)" fg:x="211" fg:w="1"/><text x="14.0951%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="13.8451%" y="645" width="0.0656%" height="15" fill="rgb(234,138,34)" fg:x="211" fg:w="1"/><text x="14.0951%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="13.9108%" y="885" width="0.0656%" height="15" fill="rgb(212,95,11)" fg:x="212" fg:w="1"/><text x="14.1608%" y="895.50"></text></g><g><title>_rjem_je_tsd_te_init (1 samples, 0.07%)</title><rect x="13.9108%" y="869" width="0.0656%" height="15" fill="rgb(240,179,47)" fg:x="212" fg:w="1"/><text x="14.1608%" y="879.50"></text></g><g><title>opt_1pv7h31dtf0 (13 samples, 0.85%)</title><rect x="13.1890%" y="901" width="0.8530%" height="15" fill="rgb(240,163,11)" fg:x="201" fg:w="13"/><text x="13.4390%" y="911.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.07%)</title><rect x="13.9764%" y="885" width="0.0656%" height="15" fill="rgb(236,37,12)" fg:x="213" fg:w="1"/><text x="14.2264%" y="895.50"></text></g><g><title>[libc.so.6] (3 samples, 0.20%)</title><rect x="14.0420%" y="885" width="0.1969%" height="15" fill="rgb(232,164,16)" fg:x="214" fg:w="3"/><text x="14.2920%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="14.1732%" y="869" width="0.0656%" height="15" fill="rgb(244,205,15)" fg:x="216" fg:w="1"/><text x="14.4232%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="14.1732%" y="853" width="0.0656%" height="15" fill="rgb(223,117,47)" fg:x="216" fg:w="1"/><text x="14.4232%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="14.1732%" y="837" width="0.0656%" height="15" fill="rgb(244,107,35)" fg:x="216" fg:w="1"/><text x="14.4232%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="14.1732%" y="821" width="0.0656%" height="15" fill="rgb(205,140,8)" fg:x="216" fg:w="1"/><text x="14.4232%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (1 samples, 0.07%)</title><rect x="14.1732%" y="805" width="0.0656%" height="15" fill="rgb(228,84,46)" fg:x="216" fg:w="1"/><text x="14.4232%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="14.1732%" y="789" width="0.0656%" height="15" fill="rgb(254,188,9)" fg:x="216" fg:w="1"/><text x="14.4232%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="14.1732%" y="773" width="0.0656%" height="15" fill="rgb(206,112,54)" fg:x="216" fg:w="1"/><text x="14.4232%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (1 samples, 0.07%)</title><rect x="14.1732%" y="757" width="0.0656%" height="15" fill="rgb(216,84,49)" fg:x="216" fg:w="1"/><text x="14.4232%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (1 samples, 0.07%)</title><rect x="14.1732%" y="741" width="0.0656%" height="15" fill="rgb(214,194,35)" fg:x="216" fg:w="1"/><text x="14.4232%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (1 samples, 0.07%)</title><rect x="14.1732%" y="725" width="0.0656%" height="15" fill="rgb(249,28,3)" fg:x="216" fg:w="1"/><text x="14.4232%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.07%)</title><rect x="14.1732%" y="709" width="0.0656%" height="15" fill="rgb(222,56,52)" fg:x="216" fg:w="1"/><text x="14.4232%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="14.1732%" y="693" width="0.0656%" height="15" fill="rgb(245,217,50)" fg:x="216" fg:w="1"/><text x="14.4232%" y="703.50"></text></g><g><title>llvm::X86RegisterInfo::eliminateFrameIndex (1 samples, 0.07%)</title><rect x="14.1732%" y="677" width="0.0656%" height="15" fill="rgb(213,201,24)" fg:x="216" fg:w="1"/><text x="14.4232%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="14.2388%" y="885" width="0.0656%" height="15" fill="rgb(248,116,28)" fg:x="217" fg:w="1"/><text x="14.4888%" y="895.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="14.2388%" y="869" width="0.0656%" height="15" fill="rgb(219,72,43)" fg:x="217" fg:w="1"/><text x="14.4888%" y="879.50"></text></g><g><title>opt_1vgt3jj6oyl (5 samples, 0.33%)</title><rect x="14.0420%" y="901" width="0.3281%" height="15" fill="rgb(209,138,14)" fg:x="214" fg:w="5"/><text x="14.2920%" y="911.50"></text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="14.3045%" y="885" width="0.0656%" height="15" fill="rgb(222,18,33)" fg:x="218" fg:w="1"/><text x="14.5545%" y="895.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.07%)</title><rect x="14.3701%" y="869" width="0.0656%" height="15" fill="rgb(213,199,7)" fg:x="219" fg:w="1"/><text x="14.6201%" y="879.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.07%)</title><rect x="14.3701%" y="853" width="0.0656%" height="15" fill="rgb(250,110,10)" fg:x="219" fg:w="1"/><text x="14.6201%" y="863.50"></text></g><g><title>tcache_destroy (1 samples, 0.07%)</title><rect x="14.3701%" y="837" width="0.0656%" height="15" fill="rgb(248,123,6)" fg:x="219" fg:w="1"/><text x="14.6201%" y="847.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.07%)</title><rect x="14.3701%" y="821" width="0.0656%" height="15" fill="rgb(206,91,31)" fg:x="219" fg:w="1"/><text x="14.6201%" y="831.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.07%)</title><rect x="14.3701%" y="805" width="0.0656%" height="15" fill="rgb(211,154,13)" fg:x="219" fg:w="1"/><text x="14.6201%" y="815.50"></text></g><g><title>arena_decay_impl (1 samples, 0.07%)</title><rect x="14.3701%" y="789" width="0.0656%" height="15" fill="rgb(225,148,7)" fg:x="219" fg:w="1"/><text x="14.6201%" y="799.50"></text></g><g><title>_rjem_je_pac_decay_all (1 samples, 0.07%)</title><rect x="14.3701%" y="773" width="0.0656%" height="15" fill="rgb(220,160,43)" fg:x="219" fg:w="1"/><text x="14.6201%" y="783.50"></text></g><g><title>pac_decay_to_limit (1 samples, 0.07%)</title><rect x="14.3701%" y="757" width="0.0656%" height="15" fill="rgb(213,52,39)" fg:x="219" fg:w="1"/><text x="14.6201%" y="767.50"></text></g><g><title>pac_stash_decayed (1 samples, 0.07%)</title><rect x="14.3701%" y="741" width="0.0656%" height="15" fill="rgb(243,137,7)" fg:x="219" fg:w="1"/><text x="14.6201%" y="751.50"></text></g><g><title>_rjem_je_ecache_evict (1 samples, 0.07%)</title><rect x="14.3701%" y="725" width="0.0656%" height="15" fill="rgb(230,79,13)" fg:x="219" fg:w="1"/><text x="14.6201%" y="735.50"></text></g><g><title>LLVMAddAnalysisPasses (1 samples, 0.07%)</title><rect x="14.4357%" y="741" width="0.0656%" height="15" fill="rgb(247,105,23)" fg:x="220" fg:w="1"/><text x="14.6857%" y="751.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="14.4357%" y="725" width="0.0656%" height="15" fill="rgb(223,179,41)" fg:x="220" fg:w="1"/><text x="14.6857%" y="735.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="14.4357%" y="709" width="0.0656%" height="15" fill="rgb(218,9,34)" fg:x="220" fg:w="1"/><text x="14.6857%" y="719.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="14.4357%" y="693" width="0.0656%" height="15" fill="rgb(222,106,8)" fg:x="220" fg:w="1"/><text x="14.6857%" y="703.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="14.4357%" y="677" width="0.0656%" height="15" fill="rgb(211,220,0)" fg:x="220" fg:w="1"/><text x="14.6857%" y="687.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="14.4357%" y="661" width="0.0656%" height="15" fill="rgb(229,52,16)" fg:x="220" fg:w="1"/><text x="14.6857%" y="671.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="14.4357%" y="645" width="0.0656%" height="15" fill="rgb(212,155,18)" fg:x="220" fg:w="1"/><text x="14.6857%" y="655.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="14.4357%" y="629" width="0.0656%" height="15" fill="rgb(242,21,14)" fg:x="220" fg:w="1"/><text x="14.6857%" y="639.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="14.4357%" y="613" width="0.0656%" height="15" fill="rgb(222,19,48)" fg:x="220" fg:w="1"/><text x="14.6857%" y="623.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="14.4357%" y="597" width="0.0656%" height="15" fill="rgb(232,45,27)" fg:x="220" fg:w="1"/><text x="14.6857%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="14.4357%" y="581" width="0.0656%" height="15" fill="rgb(249,103,42)" fg:x="220" fg:w="1"/><text x="14.6857%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="14.4357%" y="565" width="0.0656%" height="15" fill="rgb(246,81,33)" fg:x="220" fg:w="1"/><text x="14.6857%" y="575.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="14.4357%" y="549" width="0.0656%" height="15" fill="rgb(252,33,42)" fg:x="220" fg:w="1"/><text x="14.6857%" y="559.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="14.4357%" y="533" width="0.0656%" height="15" fill="rgb(209,212,41)" fg:x="220" fg:w="1"/><text x="14.6857%" y="543.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="14.4357%" y="517" width="0.0656%" height="15" fill="rgb(207,154,6)" fg:x="220" fg:w="1"/><text x="14.6857%" y="527.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="14.4357%" y="501" width="0.0656%" height="15" fill="rgb(223,64,47)" fg:x="220" fg:w="1"/><text x="14.6857%" y="511.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="14.4357%" y="485" width="0.0656%" height="15" fill="rgb(211,161,38)" fg:x="220" fg:w="1"/><text x="14.6857%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="14.4357%" y="469" width="0.0656%" height="15" fill="rgb(219,138,40)" fg:x="220" fg:w="1"/><text x="14.6857%" y="479.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="14.4357%" y="453" width="0.0656%" height="15" fill="rgb(241,228,46)" fg:x="220" fg:w="1"/><text x="14.6857%" y="463.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="14.5013%" y="709" width="0.0656%" height="15" fill="rgb(223,209,38)" fg:x="221" fg:w="1"/><text x="14.7513%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="14.5013%" y="693" width="0.0656%" height="15" fill="rgb(236,164,45)" fg:x="221" fg:w="1"/><text x="14.7513%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="14.5013%" y="677" width="0.0656%" height="15" fill="rgb(231,15,5)" fg:x="221" fg:w="1"/><text x="14.7513%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="14.5013%" y="661" width="0.0656%" height="15" fill="rgb(252,35,15)" fg:x="221" fg:w="1"/><text x="14.7513%" y="671.50"></text></g><g><title>llvm::MachineFunctionPass::getAnalysisUsage (1 samples, 0.07%)</title><rect x="14.5013%" y="645" width="0.0656%" height="15" fill="rgb(248,181,18)" fg:x="221" fg:w="1"/><text x="14.7513%" y="655.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="14.5669%" y="677" width="0.0656%" height="15" fill="rgb(233,39,42)" fg:x="222" fg:w="1"/><text x="14.8169%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="14.5669%" y="661" width="0.0656%" height="15" fill="rgb(238,110,33)" fg:x="222" fg:w="1"/><text x="14.8169%" y="671.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="14.6325%" y="645" width="0.0656%" height="15" fill="rgb(233,195,10)" fg:x="223" fg:w="1"/><text x="14.8825%" y="655.50"></text></g><g><title>llvm::LegacyLegalizerInfo::LegacyLegalizerInfo (1 samples, 0.07%)</title><rect x="14.6325%" y="629" width="0.0656%" height="15" fill="rgb(254,105,3)" fg:x="223" fg:w="1"/><text x="14.8825%" y="639.50"></text></g><g><title>[libc.so.6] (6 samples, 0.39%)</title><rect x="14.3701%" y="885" width="0.3937%" height="15" fill="rgb(221,225,9)" fg:x="219" fg:w="6"/><text x="14.6201%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.33%)</title><rect x="14.4357%" y="869" width="0.3281%" height="15" fill="rgb(224,227,45)" fg:x="220" fg:w="5"/><text x="14.6857%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="14.4357%" y="853" width="0.3281%" height="15" fill="rgb(229,198,43)" fg:x="220" fg:w="5"/><text x="14.6857%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="14.4357%" y="837" width="0.3281%" height="15" fill="rgb(206,209,35)" fg:x="220" fg:w="5"/><text x="14.6857%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (5 samples, 0.33%)</title><rect x="14.4357%" y="821" width="0.3281%" height="15" fill="rgb(245,195,53)" fg:x="220" fg:w="5"/><text x="14.6857%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="14.4357%" y="805" width="0.3281%" height="15" fill="rgb(240,92,26)" fg:x="220" fg:w="5"/><text x="14.6857%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="14.4357%" y="789" width="0.3281%" height="15" fill="rgb(207,40,23)" fg:x="220" fg:w="5"/><text x="14.6857%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="14.4357%" y="773" width="0.3281%" height="15" fill="rgb(223,111,35)" fg:x="220" fg:w="5"/><text x="14.6857%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (5 samples, 0.33%)</title><rect x="14.4357%" y="757" width="0.3281%" height="15" fill="rgb(229,147,28)" fg:x="220" fg:w="5"/><text x="14.6857%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (4 samples, 0.26%)</title><rect x="14.5013%" y="741" width="0.2625%" height="15" fill="rgb(211,29,28)" fg:x="221" fg:w="4"/><text x="14.7513%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.26%)</title><rect x="14.5013%" y="725" width="0.2625%" height="15" fill="rgb(228,72,33)" fg:x="221" fg:w="4"/><text x="14.7513%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (3 samples, 0.20%)</title><rect x="14.5669%" y="709" width="0.1969%" height="15" fill="rgb(205,214,31)" fg:x="222" fg:w="3"/><text x="14.8169%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (3 samples, 0.20%)</title><rect x="14.5669%" y="693" width="0.1969%" height="15" fill="rgb(224,111,15)" fg:x="222" fg:w="3"/><text x="14.8169%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.13%)</title><rect x="14.6325%" y="677" width="0.1312%" height="15" fill="rgb(253,21,26)" fg:x="223" fg:w="2"/><text x="14.8825%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.13%)</title><rect x="14.6325%" y="661" width="0.1312%" height="15" fill="rgb(245,139,43)" fg:x="223" fg:w="2"/><text x="14.8825%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="14.6982%" y="645" width="0.0656%" height="15" fill="rgb(252,170,7)" fg:x="224" fg:w="1"/><text x="14.9482%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="14.7638%" y="885" width="0.0656%" height="15" fill="rgb(231,118,14)" fg:x="225" fg:w="1"/><text x="15.0138%" y="895.50"></text></g><g><title>calloc (1 samples, 0.07%)</title><rect x="14.7638%" y="869" width="0.0656%" height="15" fill="rgb(238,83,0)" fg:x="225" fg:w="1"/><text x="15.0138%" y="879.50"></text></g><g><title>opt_23nvh03dmwc (8 samples, 0.52%)</title><rect x="14.3701%" y="901" width="0.5249%" height="15" fill="rgb(221,39,39)" fg:x="219" fg:w="8"/><text x="14.6201%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="14.8294%" y="885" width="0.0656%" height="15" fill="rgb(222,119,46)" fg:x="226" fg:w="1"/><text x="15.0794%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="14.8294%" y="869" width="0.0656%" height="15" fill="rgb(222,165,49)" fg:x="226" fg:w="1"/><text x="15.0794%" y="879.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="14.8950%" y="885" width="0.0656%" height="15" fill="rgb(219,113,52)" fg:x="227" fg:w="1"/><text x="15.1450%" y="895.50"></text></g><g><title>llvm::FastISel::selectBinaryOp (1 samples, 0.07%)</title><rect x="14.8950%" y="869" width="0.0656%" height="15" fill="rgb(214,7,15)" fg:x="227" fg:w="1"/><text x="15.1450%" y="879.50"></text></g><g><title>llvm::FPPassManager::doInitialization (6 samples, 0.39%)</title><rect x="15.2887%" y="693" width="0.3937%" height="15" fill="rgb(235,32,4)" fg:x="233" fg:w="6"/><text x="15.5387%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (6 samples, 0.39%)</title><rect x="15.2887%" y="677" width="0.3937%" height="15" fill="rgb(238,90,54)" fg:x="233" fg:w="6"/><text x="15.5387%" y="687.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::Initialize (6 samples, 0.39%)</title><rect x="15.2887%" y="661" width="0.3937%" height="15" fill="rgb(213,208,19)" fg:x="233" fg:w="6"/><text x="15.5387%" y="671.50"></text></g><g><title>llvm::MCObjectFileInfo::initMCObjectFileInfo (6 samples, 0.39%)</title><rect x="15.2887%" y="645" width="0.3937%" height="15" fill="rgb(233,156,4)" fg:x="233" fg:w="6"/><text x="15.5387%" y="655.50"></text></g><g><title>llvm::MCObjectFileInfo::initELFMCObjectFileInfo (6 samples, 0.39%)</title><rect x="15.2887%" y="629" width="0.3937%" height="15" fill="rgb(207,194,5)" fg:x="233" fg:w="6"/><text x="15.5387%" y="639.50"></text></g><g><title>llvm::MCContext::getELFSection (6 samples, 0.39%)</title><rect x="15.2887%" y="613" width="0.3937%" height="15" fill="rgb(206,111,30)" fg:x="233" fg:w="6"/><text x="15.5387%" y="623.50"></text></g><g><title>llvm::MCContext::createELFSectionImpl (6 samples, 0.39%)</title><rect x="15.2887%" y="597" width="0.3937%" height="15" fill="rgb(243,70,54)" fg:x="233" fg:w="6"/><text x="15.5387%" y="607.50"></text></g><g><title>llvm::MCSubtargetInfo::InitMCProcessorInfo (1 samples, 0.07%)</title><rect x="15.6824%" y="645" width="0.0656%" height="15" fill="rgb(242,28,8)" fg:x="239" fg:w="1"/><text x="15.9324%" y="655.50"></text></g><g><title>getFeatures (1 samples, 0.07%)</title><rect x="15.6824%" y="629" width="0.0656%" height="15" fill="rgb(219,106,18)" fg:x="239" fg:w="1"/><text x="15.9324%" y="639.50"></text></g><g><title>Find&lt;llvm::SubtargetSubTypeKV&gt; (1 samples, 0.07%)</title><rect x="15.6824%" y="613" width="0.0656%" height="15" fill="rgb(244,222,10)" fg:x="239" fg:w="1"/><text x="15.9324%" y="623.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (7 samples, 0.46%)</title><rect x="15.7480%" y="645" width="0.4593%" height="15" fill="rgb(236,179,52)" fg:x="240" fg:w="7"/><text x="15.9980%" y="655.50"></text></g><g><title>llvm::LegacyLegalizerInfo::setAction (1 samples, 0.07%)</title><rect x="16.1417%" y="629" width="0.0656%" height="15" fill="rgb(213,23,39)" fg:x="246" fg:w="1"/><text x="16.3917%" y="639.50"></text></g><g><title>llvm::DenseMap&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction, llvm::DenseMapInfo&lt;llvm::LLT, void&gt;, llvm::detail::DenseMapPair&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="16.1417%" y="613" width="0.0656%" height="15" fill="rgb(238,48,10)" fg:x="246" fg:w="1"/><text x="16.3917%" y="623.50"></text></g><g><title>[libc.so.6] (20 samples, 1.31%)</title><rect x="14.9606%" y="885" width="1.3123%" height="15" fill="rgb(251,196,23)" fg:x="228" fg:w="20"/><text x="15.2106%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.98%)</title><rect x="15.2887%" y="869" width="0.9843%" height="15" fill="rgb(250,152,24)" fg:x="233" fg:w="15"/><text x="15.5387%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="15.2887%" y="853" width="0.9843%" height="15" fill="rgb(209,150,17)" fg:x="233" fg:w="15"/><text x="15.5387%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="15.2887%" y="837" width="0.9843%" height="15" fill="rgb(234,202,34)" fg:x="233" fg:w="15"/><text x="15.5387%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (15 samples, 0.98%)</title><rect x="15.2887%" y="821" width="0.9843%" height="15" fill="rgb(253,148,53)" fg:x="233" fg:w="15"/><text x="15.5387%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (15 samples, 0.98%)</title><rect x="15.2887%" y="805" width="0.9843%" height="15" fill="rgb(218,129,16)" fg:x="233" fg:w="15"/><text x="15.5387%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (15 samples, 0.98%)</title><rect x="15.2887%" y="789" width="0.9843%" height="15" fill="rgb(216,85,19)" fg:x="233" fg:w="15"/><text x="15.5387%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (15 samples, 0.98%)</title><rect x="15.2887%" y="773" width="0.9843%" height="15" fill="rgb(235,228,7)" fg:x="233" fg:w="15"/><text x="15.5387%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (15 samples, 0.98%)</title><rect x="15.2887%" y="757" width="0.9843%" height="15" fill="rgb(245,175,0)" fg:x="233" fg:w="15"/><text x="15.5387%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (15 samples, 0.98%)</title><rect x="15.2887%" y="741" width="0.9843%" height="15" fill="rgb(208,168,36)" fg:x="233" fg:w="15"/><text x="15.5387%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (15 samples, 0.98%)</title><rect x="15.2887%" y="725" width="0.9843%" height="15" fill="rgb(246,171,24)" fg:x="233" fg:w="15"/><text x="15.5387%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (15 samples, 0.98%)</title><rect x="15.2887%" y="709" width="0.9843%" height="15" fill="rgb(215,142,24)" fg:x="233" fg:w="15"/><text x="15.5387%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (9 samples, 0.59%)</title><rect x="15.6824%" y="693" width="0.5906%" height="15" fill="rgb(250,187,7)" fg:x="239" fg:w="9"/><text x="15.9324%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (9 samples, 0.59%)</title><rect x="15.6824%" y="677" width="0.5906%" height="15" fill="rgb(228,66,33)" fg:x="239" fg:w="9"/><text x="15.9324%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (9 samples, 0.59%)</title><rect x="15.6824%" y="661" width="0.5906%" height="15" fill="rgb(234,215,21)" fg:x="239" fg:w="9"/><text x="15.9324%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="16.2073%" y="645" width="0.0656%" height="15" fill="rgb(222,191,20)" fg:x="247" fg:w="1"/><text x="16.4573%" y="655.50"></text></g><g><title>opt_29uxeprgmbg (22 samples, 1.44%)</title><rect x="14.8950%" y="901" width="1.4436%" height="15" fill="rgb(245,79,54)" fg:x="227" fg:w="22"/><text x="15.1450%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.2730%" y="885" width="0.0656%" height="15" fill="rgb(240,10,37)" fg:x="248" fg:w="1"/><text x="16.5230%" y="895.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="16.2730%" y="869" width="0.0656%" height="15" fill="rgb(214,192,32)" fg:x="248" fg:w="1"/><text x="16.5230%" y="879.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="16.2730%" y="853" width="0.0656%" height="15" fill="rgb(209,36,54)" fg:x="248" fg:w="1"/><text x="16.5230%" y="863.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (2 samples, 0.13%)</title><rect x="16.4698%" y="773" width="0.1312%" height="15" fill="rgb(220,10,11)" fg:x="251" fg:w="2"/><text x="16.7198%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (2 samples, 0.13%)</title><rect x="16.4698%" y="757" width="0.1312%" height="15" fill="rgb(221,106,17)" fg:x="251" fg:w="2"/><text x="16.7198%" y="767.50"></text></g><g><title>LLVMRustOptimize (2 samples, 0.13%)</title><rect x="16.4698%" y="741" width="0.1312%" height="15" fill="rgb(251,142,44)" fg:x="251" fg:w="2"/><text x="16.7198%" y="751.50"></text></g><g><title>llvm::StandardInstrumentations::StandardInstrumentations (1 samples, 0.07%)</title><rect x="16.5354%" y="725" width="0.0656%" height="15" fill="rgb(238,13,15)" fg:x="252" fg:w="1"/><text x="16.7854%" y="735.50"></text></g><g><title>llvm::TimerGroup::TimerGroup (1 samples, 0.07%)</title><rect x="16.5354%" y="709" width="0.0656%" height="15" fill="rgb(208,107,27)" fg:x="252" fg:w="1"/><text x="16.7854%" y="719.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="16.5354%" y="693" width="0.0656%" height="15" fill="rgb(205,136,37)" fg:x="252" fg:w="1"/><text x="16.7854%" y="703.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="16.5354%" y="677" width="0.0656%" height="15" fill="rgb(250,205,27)" fg:x="252" fg:w="1"/><text x="16.7854%" y="687.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="16.5354%" y="661" width="0.0656%" height="15" fill="rgb(210,80,43)" fg:x="252" fg:w="1"/><text x="16.7854%" y="671.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="16.5354%" y="645" width="0.0656%" height="15" fill="rgb(247,160,36)" fg:x="252" fg:w="1"/><text x="16.7854%" y="655.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.07%)</title><rect x="16.5354%" y="629" width="0.0656%" height="15" fill="rgb(234,13,49)" fg:x="252" fg:w="1"/><text x="16.7854%" y="639.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.07%)</title><rect x="16.5354%" y="613" width="0.0656%" height="15" fill="rgb(234,122,0)" fg:x="252" fg:w="1"/><text x="16.7854%" y="623.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.07%)</title><rect x="16.5354%" y="597" width="0.0656%" height="15" fill="rgb(207,146,38)" fg:x="252" fg:w="1"/><text x="16.7854%" y="607.50"></text></g><g><title>LLVMRustAddLibraryInfo (1 samples, 0.07%)</title><rect x="16.6010%" y="741" width="0.0656%" height="15" fill="rgb(207,177,25)" fg:x="253" fg:w="1"/><text x="16.8510%" y="751.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="16.6010%" y="725" width="0.0656%" height="15" fill="rgb(211,178,42)" fg:x="253" fg:w="1"/><text x="16.8510%" y="735.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="16.6010%" y="709" width="0.0656%" height="15" fill="rgb(230,69,54)" fg:x="253" fg:w="1"/><text x="16.8510%" y="719.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="16.6010%" y="693" width="0.0656%" height="15" fill="rgb(214,135,41)" fg:x="253" fg:w="1"/><text x="16.8510%" y="703.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="16.6010%" y="677" width="0.0656%" height="15" fill="rgb(237,67,25)" fg:x="253" fg:w="1"/><text x="16.8510%" y="687.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="16.6010%" y="661" width="0.0656%" height="15" fill="rgb(222,189,50)" fg:x="253" fg:w="1"/><text x="16.8510%" y="671.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="16.6010%" y="645" width="0.0656%" height="15" fill="rgb(245,148,34)" fg:x="253" fg:w="1"/><text x="16.8510%" y="655.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="16.6010%" y="629" width="0.0656%" height="15" fill="rgb(222,29,6)" fg:x="253" fg:w="1"/><text x="16.8510%" y="639.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="16.6010%" y="613" width="0.0656%" height="15" fill="rgb(221,189,43)" fg:x="253" fg:w="1"/><text x="16.8510%" y="623.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="16.6010%" y="597" width="0.0656%" height="15" fill="rgb(207,36,27)" fg:x="253" fg:w="1"/><text x="16.8510%" y="607.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="16.6010%" y="581" width="0.0656%" height="15" fill="rgb(217,90,24)" fg:x="253" fg:w="1"/><text x="16.8510%" y="591.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="16.6010%" y="565" width="0.0656%" height="15" fill="rgb(224,66,35)" fg:x="253" fg:w="1"/><text x="16.8510%" y="575.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.07%)</title><rect x="16.6010%" y="549" width="0.0656%" height="15" fill="rgb(221,13,50)" fg:x="253" fg:w="1"/><text x="16.8510%" y="559.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.07%)</title><rect x="16.6010%" y="533" width="0.0656%" height="15" fill="rgb(236,68,49)" fg:x="253" fg:w="1"/><text x="16.8510%" y="543.50"></text></g><g><title>eset_first_fit (1 samples, 0.07%)</title><rect x="16.6010%" y="517" width="0.0656%" height="15" fill="rgb(229,146,28)" fg:x="253" fg:w="1"/><text x="16.8510%" y="527.50"></text></g><g><title>fb_ffs (1 samples, 0.07%)</title><rect x="16.6010%" y="501" width="0.0656%" height="15" fill="rgb(225,31,38)" fg:x="253" fg:w="1"/><text x="16.8510%" y="511.50"></text></g><g><title>fb_find_impl (1 samples, 0.07%)</title><rect x="16.6010%" y="485" width="0.0656%" height="15" fill="rgb(250,208,3)" fg:x="253" fg:w="1"/><text x="16.8510%" y="495.50"></text></g><g><title>opt_2bykt3c770n (6 samples, 0.39%)</title><rect x="16.3386%" y="901" width="0.3937%" height="15" fill="rgb(246,54,23)" fg:x="249" fg:w="6"/><text x="16.5886%" y="911.50"></text></g><g><title>[libc.so.6] (6 samples, 0.39%)</title><rect x="16.3386%" y="885" width="0.3937%" height="15" fill="rgb(243,76,11)" fg:x="249" fg:w="6"/><text x="16.5886%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.26%)</title><rect x="16.4698%" y="869" width="0.2625%" height="15" fill="rgb(245,21,50)" fg:x="251" fg:w="4"/><text x="16.7198%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="16.4698%" y="853" width="0.2625%" height="15" fill="rgb(228,9,43)" fg:x="251" fg:w="4"/><text x="16.7198%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="16.4698%" y="837" width="0.2625%" height="15" fill="rgb(208,100,47)" fg:x="251" fg:w="4"/><text x="16.7198%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (4 samples, 0.26%)</title><rect x="16.4698%" y="821" width="0.2625%" height="15" fill="rgb(232,26,8)" fg:x="251" fg:w="4"/><text x="16.7198%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (4 samples, 0.26%)</title><rect x="16.4698%" y="805" width="0.2625%" height="15" fill="rgb(216,166,38)" fg:x="251" fg:w="4"/><text x="16.7198%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="16.4698%" y="789" width="0.2625%" height="15" fill="rgb(251,202,51)" fg:x="251" fg:w="4"/><text x="16.7198%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (2 samples, 0.13%)</title><rect x="16.6010%" y="773" width="0.1312%" height="15" fill="rgb(254,216,34)" fg:x="253" fg:w="2"/><text x="16.8510%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (2 samples, 0.13%)</title><rect x="16.6010%" y="757" width="0.1312%" height="15" fill="rgb(251,32,27)" fg:x="253" fg:w="2"/><text x="16.8510%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (1 samples, 0.07%)</title><rect x="16.6667%" y="741" width="0.0656%" height="15" fill="rgb(208,127,28)" fg:x="254" fg:w="1"/><text x="16.9167%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (1 samples, 0.07%)</title><rect x="16.6667%" y="725" width="0.0656%" height="15" fill="rgb(224,137,22)" fg:x="254" fg:w="1"/><text x="16.9167%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.07%)</title><rect x="16.6667%" y="709" width="0.0656%" height="15" fill="rgb(254,70,32)" fg:x="254" fg:w="1"/><text x="16.9167%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="16.6667%" y="693" width="0.0656%" height="15" fill="rgb(229,75,37)" fg:x="254" fg:w="1"/><text x="16.9167%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="16.6667%" y="677" width="0.0656%" height="15" fill="rgb(252,64,23)" fg:x="254" fg:w="1"/><text x="16.9167%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="16.6667%" y="661" width="0.0656%" height="15" fill="rgb(232,162,48)" fg:x="254" fg:w="1"/><text x="16.9167%" y="671.50"></text></g><g><title>llvm::X86RegisterInfo::X86RegisterInfo (1 samples, 0.07%)</title><rect x="16.6667%" y="645" width="0.0656%" height="15" fill="rgb(246,160,12)" fg:x="254" fg:w="1"/><text x="16.9167%" y="655.50"></text></g><g><title>llvm::X86_MC::initLLVMToSEHAndCVRegMapping (1 samples, 0.07%)</title><rect x="16.6667%" y="629" width="0.0656%" height="15" fill="rgb(247,166,0)" fg:x="254" fg:w="1"/><text x="16.9167%" y="639.50"></text></g><g><title>llvm::DenseMap&lt;llvm::MCRegister, int, llvm::DenseMapInfo&lt;llvm::MCRegister, void&gt;, llvm::detail::DenseMapPair&lt;llvm::MCRegister, int&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="16.6667%" y="613" width="0.0656%" height="15" fill="rgb(249,219,21)" fg:x="254" fg:w="1"/><text x="16.9167%" y="623.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="16.7323%" y="885" width="0.0656%" height="15" fill="rgb(205,209,3)" fg:x="255" fg:w="1"/><text x="16.9823%" y="895.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::InsertIntoBucket&lt;llvm::AnalysisKey*&gt; (1 samples, 0.07%)</title><rect x="16.7323%" y="869" width="0.0656%" height="15" fill="rgb(243,44,1)" fg:x="255" fg:w="1"/><text x="16.9823%" y="879.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="17.1916%" y="709" width="0.0656%" height="15" fill="rgb(206,159,16)" fg:x="262" fg:w="1"/><text x="17.4416%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="17.1916%" y="693" width="0.0656%" height="15" fill="rgb(244,77,30)" fg:x="262" fg:w="1"/><text x="17.4416%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addCoreISelPasses (1 samples, 0.07%)</title><rect x="17.1916%" y="677" width="0.0656%" height="15" fill="rgb(218,69,12)" fg:x="262" fg:w="1"/><text x="17.4416%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectionDAGISel (1 samples, 0.07%)</title><rect x="17.1916%" y="661" width="0.0656%" height="15" fill="rgb(212,87,7)" fg:x="262" fg:w="1"/><text x="17.4416%" y="671.50"></text></g><g><title>llvm::SelectionDAG::SelectionDAG (1 samples, 0.07%)</title><rect x="17.1916%" y="645" width="0.0656%" height="15" fill="rgb(245,114,25)" fg:x="262" fg:w="1"/><text x="17.4416%" y="655.50"></text></g><g><title>calloc@plt (1 samples, 0.07%)</title><rect x="17.1916%" y="629" width="0.0656%" height="15" fill="rgb(210,61,42)" fg:x="262" fg:w="1"/><text x="17.4416%" y="639.50"></text></g><g><title>llvm::FPPassManager::doFinalization (2 samples, 0.13%)</title><rect x="17.2572%" y="693" width="0.1312%" height="15" fill="rgb(211,52,33)" fg:x="263" fg:w="2"/><text x="17.5072%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (2 samples, 0.13%)</title><rect x="17.2572%" y="677" width="0.1312%" height="15" fill="rgb(234,58,33)" fg:x="263" fg:w="2"/><text x="17.5072%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (2 samples, 0.13%)</title><rect x="17.2572%" y="661" width="0.1312%" height="15" fill="rgb(220,115,36)" fg:x="263" fg:w="2"/><text x="17.5072%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (2 samples, 0.13%)</title><rect x="17.2572%" y="645" width="0.1312%" height="15" fill="rgb(243,153,54)" fg:x="263" fg:w="2"/><text x="17.5072%" y="655.50"></text></g><g><title>llvm::StringTableBuilder::finalizeStringTable (1 samples, 0.07%)</title><rect x="17.3228%" y="629" width="0.0656%" height="15" fill="rgb(251,47,18)" fg:x="264" fg:w="1"/><text x="17.5728%" y="639.50"></text></g><g><title>multikeySort (1 samples, 0.07%)</title><rect x="17.3228%" y="613" width="0.0656%" height="15" fill="rgb(242,102,42)" fg:x="264" fg:w="1"/><text x="17.5728%" y="623.50"></text></g><g><title>multikeySort (1 samples, 0.07%)</title><rect x="17.3228%" y="597" width="0.0656%" height="15" fill="rgb(234,31,38)" fg:x="264" fg:w="1"/><text x="17.5728%" y="607.50"></text></g><g><title>multikeySort (1 samples, 0.07%)</title><rect x="17.3228%" y="581" width="0.0656%" height="15" fill="rgb(221,117,51)" fg:x="264" fg:w="1"/><text x="17.5728%" y="591.50"></text></g><g><title>multikeySort (1 samples, 0.07%)</title><rect x="17.3228%" y="565" width="0.0656%" height="15" fill="rgb(212,20,18)" fg:x="264" fg:w="1"/><text x="17.5728%" y="575.50"></text></g><g><title>multikeySort (1 samples, 0.07%)</title><rect x="17.3228%" y="549" width="0.0656%" height="15" fill="rgb(245,133,36)" fg:x="264" fg:w="1"/><text x="17.5728%" y="559.50"></text></g><g><title>llvm::FPPassManager::doInitialization (1 samples, 0.07%)</title><rect x="17.3885%" y="693" width="0.0656%" height="15" fill="rgb(212,6,19)" fg:x="265" fg:w="1"/><text x="17.6385%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (1 samples, 0.07%)</title><rect x="17.3885%" y="677" width="0.0656%" height="15" fill="rgb(218,1,36)" fg:x="265" fg:w="1"/><text x="17.6385%" y="687.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::Initialize (1 samples, 0.07%)</title><rect x="17.3885%" y="661" width="0.0656%" height="15" fill="rgb(246,84,54)" fg:x="265" fg:w="1"/><text x="17.6385%" y="671.50"></text></g><g><title>llvm::MCObjectFileInfo::initMCObjectFileInfo (1 samples, 0.07%)</title><rect x="17.3885%" y="645" width="0.0656%" height="15" fill="rgb(242,110,6)" fg:x="265" fg:w="1"/><text x="17.6385%" y="655.50"></text></g><g><title>llvm::MCObjectFileInfo::initELFMCObjectFileInfo (1 samples, 0.07%)</title><rect x="17.3885%" y="629" width="0.0656%" height="15" fill="rgb(214,47,5)" fg:x="265" fg:w="1"/><text x="17.6385%" y="639.50"></text></g><g><title>llvm::MCContext::getELFSection (1 samples, 0.07%)</title><rect x="17.3885%" y="613" width="0.0656%" height="15" fill="rgb(218,159,25)" fg:x="265" fg:w="1"/><text x="17.6385%" y="623.50"></text></g><g><title>llvm::MCContext::createELFSectionImpl (1 samples, 0.07%)</title><rect x="17.3885%" y="597" width="0.0656%" height="15" fill="rgb(215,211,28)" fg:x="265" fg:w="1"/><text x="17.6385%" y="607.50"></text></g><g><title>[libc.so.6] (15 samples, 0.98%)</title><rect x="16.7979%" y="885" width="0.9843%" height="15" fill="rgb(238,59,32)" fg:x="256" fg:w="15"/><text x="17.0479%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.59%)</title><rect x="17.1916%" y="869" width="0.5906%" height="15" fill="rgb(226,82,3)" fg:x="262" fg:w="9"/><text x="17.4416%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.59%)</title><rect x="17.1916%" y="853" width="0.5906%" height="15" fill="rgb(240,164,32)" fg:x="262" fg:w="9"/><text x="17.4416%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.59%)</title><rect x="17.1916%" y="837" width="0.5906%" height="15" fill="rgb(232,46,7)" fg:x="262" fg:w="9"/><text x="17.4416%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (9 samples, 0.59%)</title><rect x="17.1916%" y="821" width="0.5906%" height="15" fill="rgb(229,129,53)" fg:x="262" fg:w="9"/><text x="17.4416%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (9 samples, 0.59%)</title><rect x="17.1916%" y="805" width="0.5906%" height="15" fill="rgb(234,188,29)" fg:x="262" fg:w="9"/><text x="17.4416%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (9 samples, 0.59%)</title><rect x="17.1916%" y="789" width="0.5906%" height="15" fill="rgb(246,141,4)" fg:x="262" fg:w="9"/><text x="17.4416%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (9 samples, 0.59%)</title><rect x="17.1916%" y="773" width="0.5906%" height="15" fill="rgb(229,23,39)" fg:x="262" fg:w="9"/><text x="17.4416%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (9 samples, 0.59%)</title><rect x="17.1916%" y="757" width="0.5906%" height="15" fill="rgb(206,12,3)" fg:x="262" fg:w="9"/><text x="17.4416%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (9 samples, 0.59%)</title><rect x="17.1916%" y="741" width="0.5906%" height="15" fill="rgb(252,226,20)" fg:x="262" fg:w="9"/><text x="17.4416%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (9 samples, 0.59%)</title><rect x="17.1916%" y="725" width="0.5906%" height="15" fill="rgb(216,123,35)" fg:x="262" fg:w="9"/><text x="17.4416%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (8 samples, 0.52%)</title><rect x="17.2572%" y="709" width="0.5249%" height="15" fill="rgb(212,68,40)" fg:x="263" fg:w="8"/><text x="17.5072%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (5 samples, 0.33%)</title><rect x="17.4541%" y="693" width="0.3281%" height="15" fill="rgb(254,125,32)" fg:x="266" fg:w="5"/><text x="17.7041%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="17.7165%" y="677" width="0.0656%" height="15" fill="rgb(253,97,22)" fg:x="270" fg:w="1"/><text x="17.9665%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="17.7165%" y="661" width="0.0656%" height="15" fill="rgb(241,101,14)" fg:x="270" fg:w="1"/><text x="17.9665%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="17.7165%" y="645" width="0.0656%" height="15" fill="rgb(238,103,29)" fg:x="270" fg:w="1"/><text x="17.9665%" y="655.50"></text></g><g><title>opt_2e72mm1bw7t (21 samples, 1.38%)</title><rect x="16.7323%" y="901" width="1.3780%" height="15" fill="rgb(233,195,47)" fg:x="255" fg:w="21"/><text x="16.9823%" y="911.50"></text></g><g><title>__madvise (5 samples, 0.33%)</title><rect x="17.7822%" y="885" width="0.3281%" height="15" fill="rgb(246,218,30)" fg:x="271" fg:w="5"/><text x="18.0322%" y="895.50"></text></g><g><title>.LC72 (1 samples, 0.07%)</title><rect x="18.1102%" y="885" width="0.0656%" height="15" fill="rgb(219,145,47)" fg:x="276" fg:w="1"/><text x="18.3602%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="18.1102%" y="869" width="0.0656%" height="15" fill="rgb(243,12,26)" fg:x="276" fg:w="1"/><text x="18.3602%" y="879.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="18.1759%" y="885" width="0.0656%" height="15" fill="rgb(214,87,16)" fg:x="277" fg:w="1"/><text x="18.4259%" y="895.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.07%)</title><rect x="18.2415%" y="805" width="0.0656%" height="15" fill="rgb(208,99,42)" fg:x="278" fg:w="1"/><text x="18.4915%" y="815.50"></text></g><g><title>arena_decay_impl (1 samples, 0.07%)</title><rect x="18.2415%" y="789" width="0.0656%" height="15" fill="rgb(253,99,2)" fg:x="278" fg:w="1"/><text x="18.4915%" y="799.50"></text></g><g><title>_rjem_je_pac_decay_all (1 samples, 0.07%)</title><rect x="18.2415%" y="773" width="0.0656%" height="15" fill="rgb(220,168,23)" fg:x="278" fg:w="1"/><text x="18.4915%" y="783.50"></text></g><g><title>pac_decay_to_limit (1 samples, 0.07%)</title><rect x="18.2415%" y="757" width="0.0656%" height="15" fill="rgb(242,38,24)" fg:x="278" fg:w="1"/><text x="18.4915%" y="767.50"></text></g><g><title>pac_decay_stashed (1 samples, 0.07%)</title><rect x="18.2415%" y="741" width="0.0656%" height="15" fill="rgb(225,182,9)" fg:x="278" fg:w="1"/><text x="18.4915%" y="751.50"></text></g><g><title>_rjem_je_extent_dalloc_wrapper (1 samples, 0.07%)</title><rect x="18.2415%" y="725" width="0.0656%" height="15" fill="rgb(243,178,37)" fg:x="278" fg:w="1"/><text x="18.4915%" y="735.50"></text></g><g><title>_rjem_je_pages_purge_forced (1 samples, 0.07%)</title><rect x="18.2415%" y="709" width="0.0656%" height="15" fill="rgb(232,139,19)" fg:x="278" fg:w="1"/><text x="18.4915%" y="719.50"></text></g><g><title>_rjem_je_tsd_cleanup (2 samples, 0.13%)</title><rect x="18.2415%" y="869" width="0.1312%" height="15" fill="rgb(225,201,24)" fg:x="278" fg:w="2"/><text x="18.4915%" y="879.50"></text></g><g><title>tsd_do_data_cleanup (2 samples, 0.13%)</title><rect x="18.2415%" y="853" width="0.1312%" height="15" fill="rgb(221,47,46)" fg:x="278" fg:w="2"/><text x="18.4915%" y="863.50"></text></g><g><title>tcache_destroy (2 samples, 0.13%)</title><rect x="18.2415%" y="837" width="0.1312%" height="15" fill="rgb(249,23,13)" fg:x="278" fg:w="2"/><text x="18.4915%" y="847.50"></text></g><g><title>_rjem_je_arena_decay (2 samples, 0.13%)</title><rect x="18.2415%" y="821" width="0.1312%" height="15" fill="rgb(219,9,5)" fg:x="278" fg:w="2"/><text x="18.4915%" y="831.50"></text></g><g><title>arena_decay_muzzy (1 samples, 0.07%)</title><rect x="18.3071%" y="805" width="0.0656%" height="15" fill="rgb(254,171,16)" fg:x="279" fg:w="1"/><text x="18.5571%" y="815.50"></text></g><g><title>pa_shard_dont_decay_muzzy (1 samples, 0.07%)</title><rect x="18.3071%" y="789" width="0.0656%" height="15" fill="rgb(230,171,20)" fg:x="279" fg:w="1"/><text x="18.5571%" y="799.50"></text></g><g><title>ecache_npages_get (1 samples, 0.07%)</title><rect x="18.3071%" y="773" width="0.0656%" height="15" fill="rgb(210,71,41)" fg:x="279" fg:w="1"/><text x="18.5571%" y="783.50"></text></g><g><title>_rjem_je_eset_npages_get (1 samples, 0.07%)</title><rect x="18.3071%" y="757" width="0.0656%" height="15" fill="rgb(206,173,20)" fg:x="279" fg:w="1"/><text x="18.5571%" y="767.50"></text></g><g><title>atomic_load_zu (1 samples, 0.07%)</title><rect x="18.3071%" y="741" width="0.0656%" height="15" fill="rgb(233,88,34)" fg:x="279" fg:w="1"/><text x="18.5571%" y="751.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="18.3727%" y="773" width="0.0656%" height="15" fill="rgb(223,209,46)" fg:x="280" fg:w="1"/><text x="18.6227%" y="783.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="18.3727%" y="757" width="0.0656%" height="15" fill="rgb(250,43,18)" fg:x="280" fg:w="1"/><text x="18.6227%" y="767.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="18.3727%" y="741" width="0.0656%" height="15" fill="rgb(208,13,10)" fg:x="280" fg:w="1"/><text x="18.6227%" y="751.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (1 samples, 0.07%)</title><rect x="18.4383%" y="773" width="0.0656%" height="15" fill="rgb(212,200,36)" fg:x="281" fg:w="1"/><text x="18.6883%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (1 samples, 0.07%)</title><rect x="18.4383%" y="757" width="0.0656%" height="15" fill="rgb(225,90,30)" fg:x="281" fg:w="1"/><text x="18.6883%" y="767.50"></text></g><g><title>LLVMRustOptimize (1 samples, 0.07%)</title><rect x="18.4383%" y="741" width="0.0656%" height="15" fill="rgb(236,182,39)" fg:x="281" fg:w="1"/><text x="18.6883%" y="751.50"></text></g><g><title>llvm::TargetLibraryInfoImpl::TargetLibraryInfoImpl (1 samples, 0.07%)</title><rect x="18.4383%" y="725" width="0.0656%" height="15" fill="rgb(212,144,35)" fg:x="281" fg:w="1"/><text x="18.6883%" y="735.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="18.5039%" y="709" width="0.0656%" height="15" fill="rgb(228,63,44)" fg:x="282" fg:w="1"/><text x="18.7539%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="18.5039%" y="693" width="0.0656%" height="15" fill="rgb(228,109,6)" fg:x="282" fg:w="1"/><text x="18.7539%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="18.5039%" y="677" width="0.0656%" height="15" fill="rgb(238,117,24)" fg:x="282" fg:w="1"/><text x="18.7539%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="18.5039%" y="661" width="0.0656%" height="15" fill="rgb(242,26,26)" fg:x="282" fg:w="1"/><text x="18.7539%" y="671.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="18.5039%" y="645" width="0.0656%" height="15" fill="rgb(221,92,48)" fg:x="282" fg:w="1"/><text x="18.7539%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="18.5039%" y="629" width="0.0656%" height="15" fill="rgb(209,209,32)" fg:x="282" fg:w="1"/><text x="18.7539%" y="639.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt;, llvm::DenseMapInfo&lt;llvm::Pass*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt; &gt; &gt;::grow (1 samples, 0.07%)</title><rect x="18.5039%" y="613" width="0.0656%" height="15" fill="rgb(221,70,22)" fg:x="282" fg:w="1"/><text x="18.7539%" y="623.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="18.5696%" y="693" width="0.0656%" height="15" fill="rgb(248,145,5)" fg:x="283" fg:w="1"/><text x="18.8196%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="18.5696%" y="677" width="0.0656%" height="15" fill="rgb(226,116,26)" fg:x="283" fg:w="1"/><text x="18.8196%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="18.5696%" y="661" width="0.0656%" height="15" fill="rgb(244,5,17)" fg:x="283" fg:w="1"/><text x="18.8196%" y="671.50"></text></g><g><title>llvm::DIEAbbrevSet::Emit (1 samples, 0.07%)</title><rect x="18.5696%" y="645" width="0.0656%" height="15" fill="rgb(252,159,33)" fg:x="283" fg:w="1"/><text x="18.8196%" y="655.50"></text></g><g><title>llvm::DIEAbbrev::Emit (1 samples, 0.07%)</title><rect x="18.5696%" y="629" width="0.0656%" height="15" fill="rgb(206,71,0)" fg:x="283" fg:w="1"/><text x="18.8196%" y="639.50"></text></g><g><title>llvm::dwarf::TagString (1 samples, 0.07%)</title><rect x="18.5696%" y="613" width="0.0656%" height="15" fill="rgb(233,118,54)" fg:x="283" fg:w="1"/><text x="18.8196%" y="623.50"></text></g><g><title>[libc.so.6] (10 samples, 0.66%)</title><rect x="18.2415%" y="885" width="0.6562%" height="15" fill="rgb(234,83,48)" fg:x="278" fg:w="10"/><text x="18.4915%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.52%)</title><rect x="18.3727%" y="869" width="0.5249%" height="15" fill="rgb(228,3,54)" fg:x="280" fg:w="8"/><text x="18.6227%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="18.3727%" y="853" width="0.5249%" height="15" fill="rgb(226,155,13)" fg:x="280" fg:w="8"/><text x="18.6227%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="18.3727%" y="837" width="0.5249%" height="15" fill="rgb(241,28,37)" fg:x="280" fg:w="8"/><text x="18.6227%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (8 samples, 0.52%)</title><rect x="18.3727%" y="821" width="0.5249%" height="15" fill="rgb(233,93,10)" fg:x="280" fg:w="8"/><text x="18.6227%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (8 samples, 0.52%)</title><rect x="18.3727%" y="805" width="0.5249%" height="15" fill="rgb(225,113,19)" fg:x="280" fg:w="8"/><text x="18.6227%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (8 samples, 0.52%)</title><rect x="18.3727%" y="789" width="0.5249%" height="15" fill="rgb(241,2,18)" fg:x="280" fg:w="8"/><text x="18.6227%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (6 samples, 0.39%)</title><rect x="18.5039%" y="773" width="0.3937%" height="15" fill="rgb(228,207,21)" fg:x="282" fg:w="6"/><text x="18.7539%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (6 samples, 0.39%)</title><rect x="18.5039%" y="757" width="0.3937%" height="15" fill="rgb(213,211,35)" fg:x="282" fg:w="6"/><text x="18.7539%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (6 samples, 0.39%)</title><rect x="18.5039%" y="741" width="0.3937%" height="15" fill="rgb(209,83,10)" fg:x="282" fg:w="6"/><text x="18.7539%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (6 samples, 0.39%)</title><rect x="18.5039%" y="725" width="0.3937%" height="15" fill="rgb(209,164,1)" fg:x="282" fg:w="6"/><text x="18.7539%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (5 samples, 0.33%)</title><rect x="18.5696%" y="709" width="0.3281%" height="15" fill="rgb(213,184,43)" fg:x="283" fg:w="5"/><text x="18.8196%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (4 samples, 0.26%)</title><rect x="18.6352%" y="693" width="0.2625%" height="15" fill="rgb(231,61,34)" fg:x="284" fg:w="4"/><text x="18.8852%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.13%)</title><rect x="18.7664%" y="677" width="0.1312%" height="15" fill="rgb(235,75,3)" fg:x="286" fg:w="2"/><text x="19.0164%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.13%)</title><rect x="18.7664%" y="661" width="0.1312%" height="15" fill="rgb(220,106,47)" fg:x="286" fg:w="2"/><text x="19.0164%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (2 samples, 0.13%)</title><rect x="18.7664%" y="645" width="0.1312%" height="15" fill="rgb(210,196,33)" fg:x="286" fg:w="2"/><text x="19.0164%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="18.8320%" y="629" width="0.0656%" height="15" fill="rgb(229,154,42)" fg:x="287" fg:w="1"/><text x="19.0820%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="18.8976%" y="885" width="0.0656%" height="15" fill="rgb(228,114,26)" fg:x="288" fg:w="1"/><text x="19.1476%" y="895.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.07%)</title><rect x="18.8976%" y="869" width="0.0656%" height="15" fill="rgb(208,144,1)" fg:x="288" fg:w="1"/><text x="19.1476%" y="879.50"></text></g><g><title>__madvise (4 samples, 0.26%)</title><rect x="18.9633%" y="885" width="0.2625%" height="15" fill="rgb(239,112,37)" fg:x="289" fg:w="4"/><text x="19.2133%" y="895.50"></text></g><g><title>opt_2hbywfzbdgn (18 samples, 1.18%)</title><rect x="18.1102%" y="901" width="1.1811%" height="15" fill="rgb(210,96,50)" fg:x="276" fg:w="18"/><text x="18.3602%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="19.2257%" y="885" width="0.0656%" height="15" fill="rgb(222,178,2)" fg:x="293" fg:w="1"/><text x="19.4757%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="19.2257%" y="869" width="0.0656%" height="15" fill="rgb(226,74,18)" fg:x="293" fg:w="1"/><text x="19.4757%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="19.2257%" y="853" width="0.0656%" height="15" fill="rgb(225,67,54)" fg:x="293" fg:w="1"/><text x="19.4757%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="19.2257%" y="837" width="0.0656%" height="15" fill="rgb(251,92,32)" fg:x="293" fg:w="1"/><text x="19.4757%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="19.2257%" y="821" width="0.0656%" height="15" fill="rgb(228,149,22)" fg:x="293" fg:w="1"/><text x="19.4757%" y="831.50"></text></g><g><title>arena_choose (1 samples, 0.07%)</title><rect x="19.2257%" y="805" width="0.0656%" height="15" fill="rgb(243,54,13)" fg:x="293" fg:w="1"/><text x="19.4757%" y="815.50"></text></g><g><title>arena_choose_impl (1 samples, 0.07%)</title><rect x="19.2257%" y="789" width="0.0656%" height="15" fill="rgb(243,180,28)" fg:x="293" fg:w="1"/><text x="19.4757%" y="799.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.07%)</title><rect x="19.2257%" y="773" width="0.0656%" height="15" fill="rgb(208,167,24)" fg:x="293" fg:w="1"/><text x="19.4757%" y="783.50"></text></g><g><title>_rjem_je_arena_nthreads_get (1 samples, 0.07%)</title><rect x="19.2257%" y="757" width="0.0656%" height="15" fill="rgb(245,73,45)" fg:x="293" fg:w="1"/><text x="19.4757%" y="767.50"></text></g><g><title>atomic_load_u (1 samples, 0.07%)</title><rect x="19.2257%" y="741" width="0.0656%" height="15" fill="rgb(237,203,48)" fg:x="293" fg:w="1"/><text x="19.4757%" y="751.50"></text></g><g><title>llvm::Function::getSubprogram (1 samples, 0.07%)</title><rect x="19.2913%" y="869" width="0.0656%" height="15" fill="rgb(211,197,16)" fg:x="294" fg:w="1"/><text x="19.5413%" y="879.50"></text></g><g><title>[anon] (2 samples, 0.13%)</title><rect x="19.2913%" y="885" width="0.1312%" height="15" fill="rgb(243,99,51)" fg:x="294" fg:w="2"/><text x="19.5413%" y="895.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="19.3570%" y="869" width="0.0656%" height="15" fill="rgb(215,123,29)" fg:x="295" fg:w="1"/><text x="19.6070%" y="879.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="20.1444%" y="709" width="0.0656%" height="15" fill="rgb(239,186,37)" fg:x="307" fg:w="1"/><text x="20.3944%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="20.1444%" y="693" width="0.0656%" height="15" fill="rgb(252,136,39)" fg:x="307" fg:w="1"/><text x="20.3944%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addCoreISelPasses (1 samples, 0.07%)</title><rect x="20.1444%" y="677" width="0.0656%" height="15" fill="rgb(223,213,32)" fg:x="307" fg:w="1"/><text x="20.3944%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="20.1444%" y="661" width="0.0656%" height="15" fill="rgb(233,115,5)" fg:x="307" fg:w="1"/><text x="20.3944%" y="671.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="20.1444%" y="645" width="0.0656%" height="15" fill="rgb(207,226,44)" fg:x="307" fg:w="1"/><text x="20.3944%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="20.1444%" y="629" width="0.0656%" height="15" fill="rgb(208,126,0)" fg:x="307" fg:w="1"/><text x="20.3944%" y="639.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="20.1444%" y="613" width="0.0656%" height="15" fill="rgb(244,66,21)" fg:x="307" fg:w="1"/><text x="20.3944%" y="623.50"></text></g><g><title>llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.07%)</title><rect x="20.1444%" y="597" width="0.0656%" height="15" fill="rgb(222,97,12)" fg:x="307" fg:w="1"/><text x="20.3944%" y="607.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="20.5381%" y="597" width="0.0656%" height="15" fill="rgb(219,213,19)" fg:x="313" fg:w="1"/><text x="20.7881%" y="607.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="20.5381%" y="581" width="0.0656%" height="15" fill="rgb(252,169,30)" fg:x="313" fg:w="1"/><text x="20.7881%" y="591.50"></text></g><g><title>tsd_get (1 samples, 0.07%)</title><rect x="20.5381%" y="565" width="0.0656%" height="15" fill="rgb(206,32,51)" fg:x="313" fg:w="1"/><text x="20.7881%" y="575.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (2 samples, 0.13%)</title><rect x="20.5381%" y="677" width="0.1312%" height="15" fill="rgb(250,172,42)" fg:x="313" fg:w="2"/><text x="20.7881%" y="687.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::Initialize (2 samples, 0.13%)</title><rect x="20.5381%" y="661" width="0.1312%" height="15" fill="rgb(209,34,43)" fg:x="313" fg:w="2"/><text x="20.7881%" y="671.50"></text></g><g><title>llvm::MCObjectFileInfo::initMCObjectFileInfo (2 samples, 0.13%)</title><rect x="20.5381%" y="645" width="0.1312%" height="15" fill="rgb(223,11,35)" fg:x="313" fg:w="2"/><text x="20.7881%" y="655.50"></text></g><g><title>llvm::MCObjectFileInfo::initELFMCObjectFileInfo (2 samples, 0.13%)</title><rect x="20.5381%" y="629" width="0.1312%" height="15" fill="rgb(251,219,26)" fg:x="313" fg:w="2"/><text x="20.7881%" y="639.50"></text></g><g><title>llvm::MCContext::getELFSection (2 samples, 0.13%)</title><rect x="20.5381%" y="613" width="0.1312%" height="15" fill="rgb(231,119,3)" fg:x="313" fg:w="2"/><text x="20.7881%" y="623.50"></text></g><g><title>llvm::MCContext::recordELFMergeableSectionInfo (1 samples, 0.07%)</title><rect x="20.6037%" y="597" width="0.0656%" height="15" fill="rgb(216,97,11)" fg:x="314" fg:w="1"/><text x="20.8537%" y="607.50"></text></g><g><title>llvm::FPPassManager::doInitialization (8 samples, 0.52%)</title><rect x="20.2100%" y="693" width="0.5249%" height="15" fill="rgb(223,59,9)" fg:x="308" fg:w="8"/><text x="20.4600%" y="703.50"></text></g><g><title>llvm::MachineFunctionPass::doInitialization (1 samples, 0.07%)</title><rect x="20.6693%" y="677" width="0.0656%" height="15" fill="rgb(233,93,31)" fg:x="315" fg:w="1"/><text x="20.9193%" y="687.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="20.8661%" y="677" width="0.0656%" height="15" fill="rgb(239,81,33)" fg:x="318" fg:w="1"/><text x="21.1161%" y="687.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="20.8661%" y="661" width="0.0656%" height="15" fill="rgb(213,120,34)" fg:x="318" fg:w="1"/><text x="21.1161%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="20.9318%" y="677" width="0.0656%" height="15" fill="rgb(243,49,53)" fg:x="319" fg:w="1"/><text x="21.1818%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="20.9318%" y="661" width="0.0656%" height="15" fill="rgb(247,216,33)" fg:x="319" fg:w="1"/><text x="21.1818%" y="671.50"></text></g><g><title>llvm::FastISel::selectInstruction (1 samples, 0.07%)</title><rect x="20.9318%" y="645" width="0.0656%" height="15" fill="rgb(226,26,14)" fg:x="319" fg:w="1"/><text x="21.1818%" y="655.50"></text></g><g><title>llvm::FastISel::selectOperator (1 samples, 0.07%)</title><rect x="20.9318%" y="629" width="0.0656%" height="15" fill="rgb(215,49,53)" fg:x="319" fg:w="1"/><text x="21.1818%" y="639.50"></text></g><g><title>llvm::FastISel::fastEmitBranch (1 samples, 0.07%)</title><rect x="20.9318%" y="613" width="0.0656%" height="15" fill="rgb(245,162,40)" fg:x="319" fg:w="1"/><text x="21.1818%" y="623.50"></text></g><g><title>llvm::X86InstrInfo::insertBranch (1 samples, 0.07%)</title><rect x="20.9318%" y="597" width="0.0656%" height="15" fill="rgb(229,68,17)" fg:x="319" fg:w="1"/><text x="21.1818%" y="607.50"></text></g><g><title>llvm::LegacyLegalizerInfo::LegacyLegalizerInfo (1 samples, 0.07%)</title><rect x="21.3255%" y="629" width="0.0656%" height="15" fill="rgb(213,182,10)" fg:x="325" fg:w="1"/><text x="21.5755%" y="639.50"></text></g><g><title>llvm::LegacyLegalizerInfo::computeTables (1 samples, 0.07%)</title><rect x="21.3911%" y="629" width="0.0656%" height="15" fill="rgb(245,125,30)" fg:x="326" fg:w="1"/><text x="21.6411%" y="639.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="21.3911%" y="613" width="0.0656%" height="15" fill="rgb(232,202,2)" fg:x="326" fg:w="1"/><text x="21.6411%" y="623.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="21.3911%" y="597" width="0.0656%" height="15" fill="rgb(237,140,51)" fg:x="326" fg:w="1"/><text x="21.6411%" y="607.50"></text></g><g><title>emap_alloc_ctx_try_lookup_fast (1 samples, 0.07%)</title><rect x="21.3911%" y="581" width="0.0656%" height="15" fill="rgb(236,157,25)" fg:x="326" fg:w="1"/><text x="21.6411%" y="591.50"></text></g><g><title>rtree_metadata_try_read_fast (1 samples, 0.07%)</title><rect x="21.3911%" y="565" width="0.0656%" height="15" fill="rgb(219,209,0)" fg:x="326" fg:w="1"/><text x="21.6411%" y="575.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.07%)</title><rect x="21.3911%" y="549" width="0.0656%" height="15" fill="rgb(240,116,54)" fg:x="326" fg:w="1"/><text x="21.6411%" y="559.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.07%)</title><rect x="21.3911%" y="533" width="0.0656%" height="15" fill="rgb(216,10,36)" fg:x="326" fg:w="1"/><text x="21.6411%" y="543.50"></text></g><g><title>atomic_load_p (1 samples, 0.07%)</title><rect x="21.3911%" y="517" width="0.0656%" height="15" fill="rgb(222,72,44)" fg:x="326" fg:w="1"/><text x="21.6411%" y="527.50"></text></g><g><title>llvm::LegacyLegalizerInfo::setAction (2 samples, 0.13%)</title><rect x="21.4567%" y="629" width="0.1312%" height="15" fill="rgb(232,159,9)" fg:x="327" fg:w="2"/><text x="21.7067%" y="639.50"></text></g><g><title>llvm::DenseMap&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction, llvm::DenseMapInfo&lt;llvm::LLT, void&gt;, llvm::detail::DenseMapPair&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::grow (2 samples, 0.13%)</title><rect x="21.4567%" y="613" width="0.1312%" height="15" fill="rgb(210,39,32)" fg:x="327" fg:w="2"/><text x="21.7067%" y="623.50"></text></g><g><title>[libc.so.6] (34 samples, 2.23%)</title><rect x="19.4226%" y="885" width="2.2310%" height="15" fill="rgb(216,194,45)" fg:x="296" fg:w="34"/><text x="19.6726%" y="895.50">[..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (23 samples, 1.51%)</title><rect x="20.1444%" y="869" width="1.5092%" height="15" fill="rgb(218,18,35)" fg:x="307" fg:w="23"/><text x="20.3944%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 1.51%)</title><rect x="20.1444%" y="853" width="1.5092%" height="15" fill="rgb(207,83,51)" fg:x="307" fg:w="23"/><text x="20.3944%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 1.51%)</title><rect x="20.1444%" y="837" width="1.5092%" height="15" fill="rgb(225,63,43)" fg:x="307" fg:w="23"/><text x="20.3944%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (23 samples, 1.51%)</title><rect x="20.1444%" y="821" width="1.5092%" height="15" fill="rgb(207,57,36)" fg:x="307" fg:w="23"/><text x="20.3944%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (23 samples, 1.51%)</title><rect x="20.1444%" y="805" width="1.5092%" height="15" fill="rgb(216,99,33)" fg:x="307" fg:w="23"/><text x="20.3944%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (23 samples, 1.51%)</title><rect x="20.1444%" y="789" width="1.5092%" height="15" fill="rgb(225,42,16)" fg:x="307" fg:w="23"/><text x="20.3944%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (23 samples, 1.51%)</title><rect x="20.1444%" y="773" width="1.5092%" height="15" fill="rgb(220,201,45)" fg:x="307" fg:w="23"/><text x="20.3944%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (23 samples, 1.51%)</title><rect x="20.1444%" y="757" width="1.5092%" height="15" fill="rgb(225,33,4)" fg:x="307" fg:w="23"/><text x="20.3944%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (23 samples, 1.51%)</title><rect x="20.1444%" y="741" width="1.5092%" height="15" fill="rgb(224,33,50)" fg:x="307" fg:w="23"/><text x="20.3944%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (23 samples, 1.51%)</title><rect x="20.1444%" y="725" width="1.5092%" height="15" fill="rgb(246,198,51)" fg:x="307" fg:w="23"/><text x="20.3944%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (22 samples, 1.44%)</title><rect x="20.2100%" y="709" width="1.4436%" height="15" fill="rgb(205,22,4)" fg:x="308" fg:w="22"/><text x="20.4600%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (14 samples, 0.92%)</title><rect x="20.7349%" y="693" width="0.9186%" height="15" fill="rgb(206,3,8)" fg:x="316" fg:w="14"/><text x="20.9849%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (10 samples, 0.66%)</title><rect x="20.9974%" y="677" width="0.6562%" height="15" fill="rgb(251,23,15)" fg:x="320" fg:w="10"/><text x="21.2474%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (10 samples, 0.66%)</title><rect x="20.9974%" y="661" width="0.6562%" height="15" fill="rgb(252,88,28)" fg:x="320" fg:w="10"/><text x="21.2474%" y="671.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (10 samples, 0.66%)</title><rect x="20.9974%" y="645" width="0.6562%" height="15" fill="rgb(212,127,14)" fg:x="320" fg:w="10"/><text x="21.2474%" y="655.50"></text></g><g><title>llvm::LegalizeRuleSet::actionIf (1 samples, 0.07%)</title><rect x="21.5879%" y="629" width="0.0656%" height="15" fill="rgb(247,145,37)" fg:x="329" fg:w="1"/><text x="21.8379%" y="639.50"></text></g><g><title>llvm::SmallVectorTemplateBase&lt;llvm::LegalizeRule, false&gt;::push_back (1 samples, 0.07%)</title><rect x="21.5879%" y="613" width="0.0656%" height="15" fill="rgb(209,117,53)" fg:x="329" fg:w="1"/><text x="21.8379%" y="623.50"></text></g><g><title>llvm::SmallVectorTemplateBase&lt;llvm::LegalizeRule, false&gt;::moveElementsForGrow (1 samples, 0.07%)</title><rect x="21.5879%" y="597" width="0.0656%" height="15" fill="rgb(212,90,42)" fg:x="329" fg:w="1"/><text x="21.8379%" y="607.50"></text></g><g><title>opt_2i33ub2iw6c (37 samples, 2.43%)</title><rect x="19.2913%" y="901" width="2.4278%" height="15" fill="rgb(218,164,37)" fg:x="294" fg:w="37"/><text x="19.5413%" y="911.50">op..</text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="21.6535%" y="885" width="0.0656%" height="15" fill="rgb(246,65,34)" fg:x="330" fg:w="1"/><text x="21.9035%" y="895.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="21.7192%" y="885" width="0.0656%" height="15" fill="rgb(231,100,33)" fg:x="331" fg:w="1"/><text x="21.9692%" y="895.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.07%)</title><rect x="21.9816%" y="677" width="0.0656%" height="15" fill="rgb(228,126,14)" fg:x="335" fg:w="1"/><text x="22.2316%" y="687.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="21.9816%" y="661" width="0.0656%" height="15" fill="rgb(215,173,21)" fg:x="335" fg:w="1"/><text x="22.2316%" y="671.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="21.9816%" y="645" width="0.0656%" height="15" fill="rgb(210,6,40)" fg:x="335" fg:w="1"/><text x="22.2316%" y="655.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="21.9816%" y="629" width="0.0656%" height="15" fill="rgb(212,48,18)" fg:x="335" fg:w="1"/><text x="22.2316%" y="639.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="21.9816%" y="613" width="0.0656%" height="15" fill="rgb(230,214,11)" fg:x="335" fg:w="1"/><text x="22.2316%" y="623.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="21.9816%" y="597" width="0.0656%" height="15" fill="rgb(254,105,39)" fg:x="335" fg:w="1"/><text x="22.2316%" y="607.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="21.9816%" y="581" width="0.0656%" height="15" fill="rgb(245,158,5)" fg:x="335" fg:w="1"/><text x="22.2316%" y="591.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="21.9816%" y="565" width="0.0656%" height="15" fill="rgb(249,208,11)" fg:x="335" fg:w="1"/><text x="22.2316%" y="575.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="21.9816%" y="549" width="0.0656%" height="15" fill="rgb(210,39,28)" fg:x="335" fg:w="1"/><text x="22.2316%" y="559.50"></text></g><g><title>[libc.so.6] (5 samples, 0.33%)</title><rect x="21.7848%" y="885" width="0.3281%" height="15" fill="rgb(211,56,53)" fg:x="332" fg:w="5"/><text x="22.0348%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.33%)</title><rect x="21.7848%" y="869" width="0.3281%" height="15" fill="rgb(226,201,30)" fg:x="332" fg:w="5"/><text x="22.0348%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="21.7848%" y="853" width="0.3281%" height="15" fill="rgb(239,101,34)" fg:x="332" fg:w="5"/><text x="22.0348%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="21.7848%" y="837" width="0.3281%" height="15" fill="rgb(226,209,5)" fg:x="332" fg:w="5"/><text x="22.0348%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (5 samples, 0.33%)</title><rect x="21.7848%" y="821" width="0.3281%" height="15" fill="rgb(250,105,47)" fg:x="332" fg:w="5"/><text x="22.0348%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="21.7848%" y="805" width="0.3281%" height="15" fill="rgb(230,72,3)" fg:x="332" fg:w="5"/><text x="22.0348%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="21.7848%" y="789" width="0.3281%" height="15" fill="rgb(232,218,39)" fg:x="332" fg:w="5"/><text x="22.0348%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="21.7848%" y="773" width="0.3281%" height="15" fill="rgb(248,166,6)" fg:x="332" fg:w="5"/><text x="22.0348%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (5 samples, 0.33%)</title><rect x="21.7848%" y="757" width="0.3281%" height="15" fill="rgb(247,89,20)" fg:x="332" fg:w="5"/><text x="22.0348%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (5 samples, 0.33%)</title><rect x="21.7848%" y="741" width="0.3281%" height="15" fill="rgb(248,130,54)" fg:x="332" fg:w="5"/><text x="22.0348%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (5 samples, 0.33%)</title><rect x="21.7848%" y="725" width="0.3281%" height="15" fill="rgb(234,196,4)" fg:x="332" fg:w="5"/><text x="22.0348%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (5 samples, 0.33%)</title><rect x="21.7848%" y="709" width="0.3281%" height="15" fill="rgb(250,143,31)" fg:x="332" fg:w="5"/><text x="22.0348%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (5 samples, 0.33%)</title><rect x="21.7848%" y="693" width="0.3281%" height="15" fill="rgb(211,110,34)" fg:x="332" fg:w="5"/><text x="22.0348%" y="703.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="22.0472%" y="677" width="0.0656%" height="15" fill="rgb(215,124,48)" fg:x="336" fg:w="1"/><text x="22.2972%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="22.0472%" y="661" width="0.0656%" height="15" fill="rgb(216,46,13)" fg:x="336" fg:w="1"/><text x="22.2972%" y="671.50"></text></g><g><title>opt_2ngb4q67yx0 (7 samples, 0.46%)</title><rect x="21.7192%" y="901" width="0.4593%" height="15" fill="rgb(205,184,25)" fg:x="331" fg:w="7"/><text x="21.9692%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="22.1129%" y="885" width="0.0656%" height="15" fill="rgb(228,1,10)" fg:x="337" fg:w="1"/><text x="22.3629%" y="895.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.07%)</title><rect x="22.1129%" y="869" width="0.0656%" height="15" fill="rgb(213,116,27)" fg:x="337" fg:w="1"/><text x="22.3629%" y="879.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.07%)</title><rect x="22.2441%" y="869" width="0.0656%" height="15" fill="rgb(241,95,50)" fg:x="339" fg:w="1"/><text x="22.4941%" y="879.50"></text></g><g><title>_rjem_je_tsd_state_set (1 samples, 0.07%)</title><rect x="22.2441%" y="853" width="0.0656%" height="15" fill="rgb(238,48,32)" fg:x="339" fg:w="1"/><text x="22.4941%" y="863.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="22.3097%" y="709" width="0.0656%" height="15" fill="rgb(235,113,49)" fg:x="340" fg:w="1"/><text x="22.5597%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="22.3097%" y="693" width="0.0656%" height="15" fill="rgb(205,127,43)" fg:x="340" fg:w="1"/><text x="22.5597%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="22.3097%" y="677" width="0.0656%" height="15" fill="rgb(250,162,2)" fg:x="340" fg:w="1"/><text x="22.5597%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="22.3097%" y="661" width="0.0656%" height="15" fill="rgb(220,13,41)" fg:x="340" fg:w="1"/><text x="22.5597%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="22.3097%" y="645" width="0.0656%" height="15" fill="rgb(249,221,25)" fg:x="340" fg:w="1"/><text x="22.5597%" y="655.50"></text></g><g><title>llvm::MachineFunctionPass::getAnalysisUsage (1 samples, 0.07%)</title><rect x="22.3097%" y="629" width="0.0656%" height="15" fill="rgb(215,208,19)" fg:x="340" fg:w="1"/><text x="22.5597%" y="639.50"></text></g><g><title>llvm::SmallVectorBase&lt;unsigned int&gt;::grow_pod (1 samples, 0.07%)</title><rect x="22.3097%" y="613" width="0.0656%" height="15" fill="rgb(236,175,2)" fg:x="340" fg:w="1"/><text x="22.5597%" y="623.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="22.3097%" y="597" width="0.0656%" height="15" fill="rgb(241,52,2)" fg:x="340" fg:w="1"/><text x="22.5597%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.07%)</title><rect x="22.3097%" y="581" width="0.0656%" height="15" fill="rgb(248,140,14)" fg:x="340" fg:w="1"/><text x="22.5597%" y="591.50"></text></g><g><title>llvm::legacy::PassManager::~PassManager (1 samples, 0.07%)</title><rect x="22.3753%" y="709" width="0.0656%" height="15" fill="rgb(253,22,42)" fg:x="341" fg:w="1"/><text x="22.6253%" y="719.50"></text></g><g><title>llvm::legacy::PassManagerImpl::~PassManagerImpl (1 samples, 0.07%)</title><rect x="22.3753%" y="693" width="0.0656%" height="15" fill="rgb(234,61,47)" fg:x="341" fg:w="1"/><text x="22.6253%" y="703.50"></text></g><g><title>llvm::PMTopLevelManager::~PMTopLevelManager (1 samples, 0.07%)</title><rect x="22.3753%" y="677" width="0.0656%" height="15" fill="rgb(208,226,15)" fg:x="341" fg:w="1"/><text x="22.6253%" y="687.50"></text></g><g><title>non-virtual thunk to (anonymous namespace)::MPPassManager::~MPPassManager (1 samples, 0.07%)</title><rect x="22.3753%" y="661" width="0.0656%" height="15" fill="rgb(217,221,4)" fg:x="341" fg:w="1"/><text x="22.6253%" y="671.50"></text></g><g><title>llvm::FPPassManager::~FPPassManager (1 samples, 0.07%)</title><rect x="22.3753%" y="645" width="0.0656%" height="15" fill="rgb(212,174,34)" fg:x="341" fg:w="1"/><text x="22.6253%" y="655.50"></text></g><g><title>llvm::SelectionDAGISel::~SelectionDAGISel (1 samples, 0.07%)</title><rect x="22.3753%" y="629" width="0.0656%" height="15" fill="rgb(253,83,4)" fg:x="341" fg:w="1"/><text x="22.6253%" y="639.50"></text></g><g><title>_rjem_je_free_default (1 samples, 0.07%)</title><rect x="22.3753%" y="613" width="0.0656%" height="15" fill="rgb(250,195,49)" fg:x="341" fg:w="1"/><text x="22.6253%" y="623.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.07%)</title><rect x="22.3753%" y="597" width="0.0656%" height="15" fill="rgb(241,192,25)" fg:x="341" fg:w="1"/><text x="22.6253%" y="607.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.07%)</title><rect x="22.3753%" y="581" width="0.0656%" height="15" fill="rgb(208,124,10)" fg:x="341" fg:w="1"/><text x="22.6253%" y="591.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.07%)</title><rect x="22.3753%" y="565" width="0.0656%" height="15" fill="rgb(222,33,0)" fg:x="341" fg:w="1"/><text x="22.6253%" y="575.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.07%)</title><rect x="22.3753%" y="549" width="0.0656%" height="15" fill="rgb(234,209,28)" fg:x="341" fg:w="1"/><text x="22.6253%" y="559.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.07%)</title><rect x="22.3753%" y="533" width="0.0656%" height="15" fill="rgb(224,11,23)" fg:x="341" fg:w="1"/><text x="22.6253%" y="543.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="22.4409%" y="677" width="0.0656%" height="15" fill="rgb(232,99,1)" fg:x="342" fg:w="1"/><text x="22.6909%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="22.4409%" y="661" width="0.0656%" height="15" fill="rgb(237,95,45)" fg:x="342" fg:w="1"/><text x="22.6909%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.07%)</title><rect x="22.4409%" y="645" width="0.0656%" height="15" fill="rgb(208,109,11)" fg:x="342" fg:w="1"/><text x="22.6909%" y="655.50"></text></g><g><title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.07%)</title><rect x="22.4409%" y="629" width="0.0656%" height="15" fill="rgb(216,190,48)" fg:x="342" fg:w="1"/><text x="22.6909%" y="639.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="22.5066%" y="645" width="0.0656%" height="15" fill="rgb(251,171,36)" fg:x="343" fg:w="1"/><text x="22.7566%" y="655.50"></text></g><g><title>llvm::LegacyLegalizerInfo::computeTables (1 samples, 0.07%)</title><rect x="22.5066%" y="629" width="0.0656%" height="15" fill="rgb(230,62,22)" fg:x="343" fg:w="1"/><text x="22.7566%" y="639.50"></text></g><g><title>std::vector&lt;std::pair&lt;unsigned short, llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;, std::allocator&lt;std::pair&lt;unsigned short, llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::operator= (1 samples, 0.07%)</title><rect x="22.5066%" y="613" width="0.0656%" height="15" fill="rgb(225,114,35)" fg:x="343" fg:w="1"/><text x="22.7566%" y="623.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="22.5066%" y="597" width="0.0656%" height="15" fill="rgb(215,118,42)" fg:x="343" fg:w="1"/><text x="22.7566%" y="607.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="22.5066%" y="581" width="0.0656%" height="15" fill="rgb(243,119,21)" fg:x="343" fg:w="1"/><text x="22.7566%" y="591.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="22.5066%" y="565" width="0.0656%" height="15" fill="rgb(252,177,53)" fg:x="343" fg:w="1"/><text x="22.7566%" y="575.50"></text></g><g><title>te_malloc_fastpath_ctx (1 samples, 0.07%)</title><rect x="22.5066%" y="549" width="0.0656%" height="15" fill="rgb(237,209,29)" fg:x="343" fg:w="1"/><text x="22.7566%" y="559.50"></text></g><g><title>[libc.so.6] (7 samples, 0.46%)</title><rect x="22.1785%" y="885" width="0.4593%" height="15" fill="rgb(212,65,23)" fg:x="338" fg:w="7"/><text x="22.4285%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.33%)</title><rect x="22.3097%" y="869" width="0.3281%" height="15" fill="rgb(230,222,46)" fg:x="340" fg:w="5"/><text x="22.5597%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="22.3097%" y="853" width="0.3281%" height="15" fill="rgb(215,135,32)" fg:x="340" fg:w="5"/><text x="22.5597%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="22.3097%" y="837" width="0.3281%" height="15" fill="rgb(246,101,22)" fg:x="340" fg:w="5"/><text x="22.5597%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (5 samples, 0.33%)</title><rect x="22.3097%" y="821" width="0.3281%" height="15" fill="rgb(206,107,13)" fg:x="340" fg:w="5"/><text x="22.5597%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="22.3097%" y="805" width="0.3281%" height="15" fill="rgb(250,100,44)" fg:x="340" fg:w="5"/><text x="22.5597%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="22.3097%" y="789" width="0.3281%" height="15" fill="rgb(231,147,38)" fg:x="340" fg:w="5"/><text x="22.5597%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="22.3097%" y="773" width="0.3281%" height="15" fill="rgb(229,8,40)" fg:x="340" fg:w="5"/><text x="22.5597%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (5 samples, 0.33%)</title><rect x="22.3097%" y="757" width="0.3281%" height="15" fill="rgb(221,135,30)" fg:x="340" fg:w="5"/><text x="22.5597%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (5 samples, 0.33%)</title><rect x="22.3097%" y="741" width="0.3281%" height="15" fill="rgb(249,193,18)" fg:x="340" fg:w="5"/><text x="22.5597%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (5 samples, 0.33%)</title><rect x="22.3097%" y="725" width="0.3281%" height="15" fill="rgb(209,133,39)" fg:x="340" fg:w="5"/><text x="22.5597%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (3 samples, 0.20%)</title><rect x="22.4409%" y="709" width="0.1969%" height="15" fill="rgb(232,100,14)" fg:x="342" fg:w="3"/><text x="22.6909%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (3 samples, 0.20%)</title><rect x="22.4409%" y="693" width="0.1969%" height="15" fill="rgb(224,185,1)" fg:x="342" fg:w="3"/><text x="22.6909%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.13%)</title><rect x="22.5066%" y="677" width="0.1312%" height="15" fill="rgb(223,139,8)" fg:x="343" fg:w="2"/><text x="22.7566%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.13%)</title><rect x="22.5066%" y="661" width="0.1312%" height="15" fill="rgb(232,213,38)" fg:x="343" fg:w="2"/><text x="22.7566%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="22.5722%" y="645" width="0.0656%" height="15" fill="rgb(207,94,22)" fg:x="344" fg:w="1"/><text x="22.8222%" y="655.50"></text></g><g><title>opt_2vs4w609mev (12 samples, 0.79%)</title><rect x="22.1785%" y="901" width="0.7874%" height="15" fill="rgb(219,183,54)" fg:x="338" fg:w="12"/><text x="22.4285%" y="911.50"></text></g><g><title>__madvise (5 samples, 0.33%)</title><rect x="22.6378%" y="885" width="0.3281%" height="15" fill="rgb(216,185,54)" fg:x="345" fg:w="5"/><text x="22.8878%" y="895.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="22.9659%" y="885" width="0.0656%" height="15" fill="rgb(254,217,39)" fg:x="350" fg:w="1"/><text x="23.2159%" y="895.50"></text></g><g><title>_rjem_je_free_default (1 samples, 0.07%)</title><rect x="22.9659%" y="869" width="0.0656%" height="15" fill="rgb(240,178,23)" fg:x="350" fg:w="1"/><text x="23.2159%" y="879.50"></text></g><g><title>LLVMAddAnalysisPasses (1 samples, 0.07%)</title><rect x="23.0971%" y="741" width="0.0656%" height="15" fill="rgb(218,11,47)" fg:x="352" fg:w="1"/><text x="23.3471%" y="751.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="23.0971%" y="725" width="0.0656%" height="15" fill="rgb(218,51,51)" fg:x="352" fg:w="1"/><text x="23.3471%" y="735.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="23.0971%" y="709" width="0.0656%" height="15" fill="rgb(238,126,27)" fg:x="352" fg:w="1"/><text x="23.3471%" y="719.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="23.0971%" y="693" width="0.0656%" height="15" fill="rgb(249,202,22)" fg:x="352" fg:w="1"/><text x="23.3471%" y="703.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="23.0971%" y="677" width="0.0656%" height="15" fill="rgb(254,195,49)" fg:x="352" fg:w="1"/><text x="23.3471%" y="687.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="23.0971%" y="661" width="0.0656%" height="15" fill="rgb(208,123,14)" fg:x="352" fg:w="1"/><text x="23.3471%" y="671.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="23.0971%" y="645" width="0.0656%" height="15" fill="rgb(224,200,8)" fg:x="352" fg:w="1"/><text x="23.3471%" y="655.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="23.0971%" y="629" width="0.0656%" height="15" fill="rgb(217,61,36)" fg:x="352" fg:w="1"/><text x="23.3471%" y="639.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="23.0971%" y="613" width="0.0656%" height="15" fill="rgb(206,35,45)" fg:x="352" fg:w="1"/><text x="23.3471%" y="623.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="23.0971%" y="597" width="0.0656%" height="15" fill="rgb(217,65,33)" fg:x="352" fg:w="1"/><text x="23.3471%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="23.0971%" y="581" width="0.0656%" height="15" fill="rgb(222,158,48)" fg:x="352" fg:w="1"/><text x="23.3471%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="23.0971%" y="565" width="0.0656%" height="15" fill="rgb(254,2,54)" fg:x="352" fg:w="1"/><text x="23.3471%" y="575.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="23.0971%" y="549" width="0.0656%" height="15" fill="rgb(250,143,38)" fg:x="352" fg:w="1"/><text x="23.3471%" y="559.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="23.0971%" y="533" width="0.0656%" height="15" fill="rgb(248,25,0)" fg:x="352" fg:w="1"/><text x="23.3471%" y="543.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="23.0971%" y="517" width="0.0656%" height="15" fill="rgb(206,152,27)" fg:x="352" fg:w="1"/><text x="23.3471%" y="527.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="23.0971%" y="501" width="0.0656%" height="15" fill="rgb(240,77,30)" fg:x="352" fg:w="1"/><text x="23.3471%" y="511.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="23.1627%" y="709" width="0.0656%" height="15" fill="rgb(231,5,3)" fg:x="353" fg:w="1"/><text x="23.4127%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="23.1627%" y="693" width="0.0656%" height="15" fill="rgb(207,226,32)" fg:x="353" fg:w="1"/><text x="23.4127%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="23.1627%" y="677" width="0.0656%" height="15" fill="rgb(222,207,47)" fg:x="353" fg:w="1"/><text x="23.4127%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="23.1627%" y="661" width="0.0656%" height="15" fill="rgb(229,115,45)" fg:x="353" fg:w="1"/><text x="23.4127%" y="671.50"></text></g><g><title>llvm::MachineFunction::init (1 samples, 0.07%)</title><rect x="23.2940%" y="677" width="0.0656%" height="15" fill="rgb(224,191,6)" fg:x="355" fg:w="1"/><text x="23.5440%" y="687.50"></text></g><g><title>llvm::MachineRegisterInfo::MachineRegisterInfo (1 samples, 0.07%)</title><rect x="23.2940%" y="661" width="0.0656%" height="15" fill="rgb(230,227,24)" fg:x="355" fg:w="1"/><text x="23.5440%" y="671.50"></text></g><g><title>llvm::SmallVectorTemplateBase&lt;std::pair&lt;llvm::Register, llvm::SmallVector&lt;llvm::Register, 4u&gt; &gt;, false&gt;::grow (1 samples, 0.07%)</title><rect x="23.2940%" y="645" width="0.0656%" height="15" fill="rgb(228,80,19)" fg:x="355" fg:w="1"/><text x="23.5440%" y="655.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="23.2940%" y="629" width="0.0656%" height="15" fill="rgb(247,229,0)" fg:x="355" fg:w="1"/><text x="23.5440%" y="639.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="23.2940%" y="613" width="0.0656%" height="15" fill="rgb(237,194,15)" fg:x="355" fg:w="1"/><text x="23.5440%" y="623.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="23.2940%" y="597" width="0.0656%" height="15" fill="rgb(219,203,20)" fg:x="355" fg:w="1"/><text x="23.5440%" y="607.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="23.2940%" y="581" width="0.0656%" height="15" fill="rgb(234,128,8)" fg:x="355" fg:w="1"/><text x="23.5440%" y="591.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="23.2940%" y="565" width="0.0656%" height="15" fill="rgb(248,202,8)" fg:x="355" fg:w="1"/><text x="23.5440%" y="575.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="23.2940%" y="549" width="0.0656%" height="15" fill="rgb(206,104,37)" fg:x="355" fg:w="1"/><text x="23.5440%" y="559.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="23.2940%" y="533" width="0.0656%" height="15" fill="rgb(223,8,27)" fg:x="355" fg:w="1"/><text x="23.5440%" y="543.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="23.2940%" y="517" width="0.0656%" height="15" fill="rgb(216,217,28)" fg:x="355" fg:w="1"/><text x="23.5440%" y="527.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="23.2940%" y="501" width="0.0656%" height="15" fill="rgb(249,199,1)" fg:x="355" fg:w="1"/><text x="23.5440%" y="511.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="23.2940%" y="485" width="0.0656%" height="15" fill="rgb(240,85,17)" fg:x="355" fg:w="1"/><text x="23.5440%" y="495.50"></text></g><g><title>extent_split_impl (1 samples, 0.07%)</title><rect x="23.2940%" y="469" width="0.0656%" height="15" fill="rgb(206,108,45)" fg:x="355" fg:w="1"/><text x="23.5440%" y="479.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.07%)</title><rect x="23.2940%" y="453" width="0.0656%" height="15" fill="rgb(245,210,41)" fg:x="355" fg:w="1"/><text x="23.5440%" y="463.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.07%)</title><rect x="23.2940%" y="437" width="0.0656%" height="15" fill="rgb(206,13,37)" fg:x="355" fg:w="1"/><text x="23.5440%" y="447.50"></text></g><g><title>ph_remove (1 samples, 0.07%)</title><rect x="23.2940%" y="421" width="0.0656%" height="15" fill="rgb(250,61,18)" fg:x="355" fg:w="1"/><text x="23.5440%" y="431.50"></text></g><g><title>ph_merge_children (1 samples, 0.07%)</title><rect x="23.2940%" y="405" width="0.0656%" height="15" fill="rgb(235,172,48)" fg:x="355" fg:w="1"/><text x="23.5440%" y="415.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.07%)</title><rect x="23.2940%" y="389" width="0.0656%" height="15" fill="rgb(249,201,17)" fg:x="355" fg:w="1"/><text x="23.5440%" y="399.50"></text></g><g><title>phn_next_get (1 samples, 0.07%)</title><rect x="23.2940%" y="373" width="0.0656%" height="15" fill="rgb(219,208,6)" fg:x="355" fg:w="1"/><text x="23.5440%" y="383.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (6 samples, 0.39%)</title><rect x="23.3596%" y="677" width="0.3937%" height="15" fill="rgb(248,31,23)" fg:x="356" fg:w="6"/><text x="23.6096%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (6 samples, 0.39%)</title><rect x="23.3596%" y="661" width="0.3937%" height="15" fill="rgb(245,15,42)" fg:x="356" fg:w="6"/><text x="23.6096%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (6 samples, 0.39%)</title><rect x="23.3596%" y="645" width="0.3937%" height="15" fill="rgb(222,217,39)" fg:x="356" fg:w="6"/><text x="23.6096%" y="655.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::EmitSchedule (6 samples, 0.39%)</title><rect x="23.3596%" y="629" width="0.3937%" height="15" fill="rgb(210,219,27)" fg:x="356" fg:w="6"/><text x="23.6096%" y="639.50"></text></g><g><title>llvm::InstrEmitter::EmitMachineNode (6 samples, 0.39%)</title><rect x="23.3596%" y="613" width="0.3937%" height="15" fill="rgb(252,166,36)" fg:x="356" fg:w="6"/><text x="23.6096%" y="623.50"></text></g><g><title>llvm::MachineInstr::addOperand (5 samples, 0.33%)</title><rect x="23.4252%" y="597" width="0.3281%" height="15" fill="rgb(245,132,34)" fg:x="357" fg:w="5"/><text x="23.6752%" y="607.50"></text></g><g><title>[libc.so.6] (13 samples, 0.85%)</title><rect x="23.0315%" y="885" width="0.8530%" height="15" fill="rgb(236,54,3)" fg:x="351" fg:w="13"/><text x="23.2815%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.79%)</title><rect x="23.0971%" y="869" width="0.7874%" height="15" fill="rgb(241,173,43)" fg:x="352" fg:w="12"/><text x="23.3471%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="23.0971%" y="853" width="0.7874%" height="15" fill="rgb(215,190,9)" fg:x="352" fg:w="12"/><text x="23.3471%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="23.0971%" y="837" width="0.7874%" height="15" fill="rgb(242,101,16)" fg:x="352" fg:w="12"/><text x="23.3471%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (12 samples, 0.79%)</title><rect x="23.0971%" y="821" width="0.7874%" height="15" fill="rgb(223,190,21)" fg:x="352" fg:w="12"/><text x="23.3471%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (12 samples, 0.79%)</title><rect x="23.0971%" y="805" width="0.7874%" height="15" fill="rgb(215,228,25)" fg:x="352" fg:w="12"/><text x="23.3471%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="23.0971%" y="789" width="0.7874%" height="15" fill="rgb(225,36,22)" fg:x="352" fg:w="12"/><text x="23.3471%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="23.0971%" y="773" width="0.7874%" height="15" fill="rgb(251,106,46)" fg:x="352" fg:w="12"/><text x="23.3471%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (12 samples, 0.79%)</title><rect x="23.0971%" y="757" width="0.7874%" height="15" fill="rgb(208,90,1)" fg:x="352" fg:w="12"/><text x="23.3471%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (11 samples, 0.72%)</title><rect x="23.1627%" y="741" width="0.7218%" height="15" fill="rgb(243,10,4)" fg:x="353" fg:w="11"/><text x="23.4127%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (11 samples, 0.72%)</title><rect x="23.1627%" y="725" width="0.7218%" height="15" fill="rgb(212,137,27)" fg:x="353" fg:w="11"/><text x="23.4127%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (10 samples, 0.66%)</title><rect x="23.2283%" y="709" width="0.6562%" height="15" fill="rgb(231,220,49)" fg:x="354" fg:w="10"/><text x="23.4783%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (10 samples, 0.66%)</title><rect x="23.2283%" y="693" width="0.6562%" height="15" fill="rgb(237,96,20)" fg:x="354" fg:w="10"/><text x="23.4783%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.13%)</title><rect x="23.7533%" y="677" width="0.1312%" height="15" fill="rgb(239,229,30)" fg:x="362" fg:w="2"/><text x="24.0033%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.13%)</title><rect x="23.7533%" y="661" width="0.1312%" height="15" fill="rgb(219,65,33)" fg:x="362" fg:w="2"/><text x="24.0033%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (2 samples, 0.13%)</title><rect x="23.7533%" y="645" width="0.1312%" height="15" fill="rgb(243,134,7)" fg:x="362" fg:w="2"/><text x="24.0033%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="23.8189%" y="629" width="0.0656%" height="15" fill="rgb(216,177,54)" fg:x="363" fg:w="1"/><text x="24.0689%" y="639.50"></text></g><g><title>llvm::MVT::getVectorMinNumElements (1 samples, 0.07%)</title><rect x="23.8189%" y="613" width="0.0656%" height="15" fill="rgb(211,160,20)" fg:x="363" fg:w="1"/><text x="24.0689%" y="623.50"></text></g><g><title>opt_3cr9epdk4s4 (15 samples, 0.98%)</title><rect x="22.9659%" y="901" width="0.9843%" height="15" fill="rgb(239,85,39)" fg:x="350" fg:w="15"/><text x="23.2159%" y="911.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="23.8845%" y="885" width="0.0656%" height="15" fill="rgb(232,125,22)" fg:x="364" fg:w="1"/><text x="24.1345%" y="895.50"></text></g><g><title>llvm::SmallDenseMap&lt;void const*, llvm::ImmutablePass*, 8u, llvm::DenseMapInfo&lt;void const*, void&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="23.9501%" y="869" width="0.0656%" height="15" fill="rgb(244,57,34)" fg:x="365" fg:w="1"/><text x="24.2001%" y="879.50"></text></g><g><title>[anon] (2 samples, 0.13%)</title><rect x="23.9501%" y="885" width="0.1312%" height="15" fill="rgb(214,203,32)" fg:x="365" fg:w="2"/><text x="24.2001%" y="895.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="24.0157%" y="869" width="0.0656%" height="15" fill="rgb(207,58,43)" fg:x="366" fg:w="1"/><text x="24.2657%" y="879.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="24.0814%" y="693" width="0.0656%" height="15" fill="rgb(215,193,15)" fg:x="367" fg:w="1"/><text x="24.3314%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="24.0814%" y="677" width="0.0656%" height="15" fill="rgb(232,15,44)" fg:x="367" fg:w="1"/><text x="24.3314%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (1 samples, 0.07%)</title><rect x="24.0814%" y="661" width="0.0656%" height="15" fill="rgb(212,3,48)" fg:x="367" fg:w="1"/><text x="24.3314%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (1 samples, 0.07%)</title><rect x="24.0814%" y="645" width="0.0656%" height="15" fill="rgb(218,128,7)" fg:x="367" fg:w="1"/><text x="24.3314%" y="655.50"></text></g><g><title>llvm::FastISel::selectInstruction (1 samples, 0.07%)</title><rect x="24.4094%" y="645" width="0.0656%" height="15" fill="rgb(226,216,39)" fg:x="372" fg:w="1"/><text x="24.6594%" y="655.50"></text></g><g><title>llvm::MachineInstr::addOperand (1 samples, 0.07%)</title><rect x="24.4094%" y="629" width="0.0656%" height="15" fill="rgb(243,47,51)" fg:x="372" fg:w="1"/><text x="24.6594%" y="639.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::BuildSchedGraph (1 samples, 0.07%)</title><rect x="24.4751%" y="629" width="0.0656%" height="15" fill="rgb(241,183,40)" fg:x="373" fg:w="1"/><text x="24.7251%" y="639.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::BuildSchedUnits (1 samples, 0.07%)</title><rect x="24.4751%" y="613" width="0.0656%" height="15" fill="rgb(231,217,32)" fg:x="373" fg:w="1"/><text x="24.7251%" y="623.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.20%)</title><rect x="24.4094%" y="677" width="0.1969%" height="15" fill="rgb(229,61,38)" fg:x="372" fg:w="3"/><text x="24.6594%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.20%)</title><rect x="24.4094%" y="661" width="0.1969%" height="15" fill="rgb(225,210,5)" fg:x="372" fg:w="3"/><text x="24.6594%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.13%)</title><rect x="24.4751%" y="645" width="0.1312%" height="15" fill="rgb(231,79,45)" fg:x="373" fg:w="2"/><text x="24.7251%" y="655.50"></text></g><g><title>llvm::SelectionDAG::Legalize (1 samples, 0.07%)</title><rect x="24.5407%" y="629" width="0.0656%" height="15" fill="rgb(224,100,7)" fg:x="374" fg:w="1"/><text x="24.7907%" y="639.50"></text></g><g><title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.07%)</title><rect x="24.6063%" y="677" width="0.0656%" height="15" fill="rgb(241,198,18)" fg:x="375" fg:w="1"/><text x="24.8563%" y="687.50"></text></g><g><title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis() const::$_0&gt;::_M_invoke (1 samples, 0.07%)</title><rect x="24.6063%" y="661" width="0.0656%" height="15" fill="rgb(252,97,53)" fg:x="375" fg:w="1"/><text x="24.8563%" y="671.50"></text></g><g><title>llvm::X86FrameLowering::getInitialCFARegister (1 samples, 0.07%)</title><rect x="24.6719%" y="677" width="0.0656%" height="15" fill="rgb(220,88,7)" fg:x="376" fg:w="1"/><text x="24.9219%" y="687.50"></text></g><g><title>llvm::X86FrameLowering::inlineStackProbe (1 samples, 0.07%)</title><rect x="24.7375%" y="677" width="0.0656%" height="15" fill="rgb(213,176,14)" fg:x="377" fg:w="1"/><text x="24.9875%" y="687.50"></text></g><g><title>llvm::X86FrameLowering::emitStackProbeInlineGeneric (1 samples, 0.07%)</title><rect x="24.7375%" y="661" width="0.0656%" height="15" fill="rgb(246,73,7)" fg:x="377" fg:w="1"/><text x="24.9875%" y="671.50"></text></g><g><title>llvm::X86FrameLowering::emitStackProbeInlineGenericBlock (1 samples, 0.07%)</title><rect x="24.7375%" y="645" width="0.0656%" height="15" fill="rgb(245,64,36)" fg:x="377" fg:w="1"/><text x="24.9875%" y="655.50"></text></g><g><title>llvm::MachineInstr::addOperand (1 samples, 0.07%)</title><rect x="24.7375%" y="629" width="0.0656%" height="15" fill="rgb(245,80,10)" fg:x="377" fg:w="1"/><text x="24.9875%" y="639.50"></text></g><g><title>[libc.so.6] (12 samples, 0.79%)</title><rect x="24.0814%" y="885" width="0.7874%" height="15" fill="rgb(232,107,50)" fg:x="367" fg:w="12"/><text x="24.3314%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.79%)</title><rect x="24.0814%" y="869" width="0.7874%" height="15" fill="rgb(253,3,0)" fg:x="367" fg:w="12"/><text x="24.3314%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="24.0814%" y="853" width="0.7874%" height="15" fill="rgb(212,99,53)" fg:x="367" fg:w="12"/><text x="24.3314%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="24.0814%" y="837" width="0.7874%" height="15" fill="rgb(249,111,54)" fg:x="367" fg:w="12"/><text x="24.3314%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (12 samples, 0.79%)</title><rect x="24.0814%" y="821" width="0.7874%" height="15" fill="rgb(249,55,30)" fg:x="367" fg:w="12"/><text x="24.3314%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (12 samples, 0.79%)</title><rect x="24.0814%" y="805" width="0.7874%" height="15" fill="rgb(237,47,42)" fg:x="367" fg:w="12"/><text x="24.3314%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="24.0814%" y="789" width="0.7874%" height="15" fill="rgb(211,20,18)" fg:x="367" fg:w="12"/><text x="24.3314%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="24.0814%" y="773" width="0.7874%" height="15" fill="rgb(231,203,46)" fg:x="367" fg:w="12"/><text x="24.3314%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (12 samples, 0.79%)</title><rect x="24.0814%" y="757" width="0.7874%" height="15" fill="rgb(237,142,3)" fg:x="367" fg:w="12"/><text x="24.3314%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (12 samples, 0.79%)</title><rect x="24.0814%" y="741" width="0.7874%" height="15" fill="rgb(241,107,1)" fg:x="367" fg:w="12"/><text x="24.3314%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (12 samples, 0.79%)</title><rect x="24.0814%" y="725" width="0.7874%" height="15" fill="rgb(229,83,13)" fg:x="367" fg:w="12"/><text x="24.3314%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (12 samples, 0.79%)</title><rect x="24.0814%" y="709" width="0.7874%" height="15" fill="rgb(241,91,40)" fg:x="367" fg:w="12"/><text x="24.3314%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (11 samples, 0.72%)</title><rect x="24.1470%" y="693" width="0.7218%" height="15" fill="rgb(225,3,45)" fg:x="368" fg:w="11"/><text x="24.3970%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="24.8031%" y="677" width="0.0656%" height="15" fill="rgb(244,223,14)" fg:x="378" fg:w="1"/><text x="25.0531%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="24.8031%" y="661" width="0.0656%" height="15" fill="rgb(224,124,37)" fg:x="378" fg:w="1"/><text x="25.0531%" y="671.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="24.8031%" y="645" width="0.0656%" height="15" fill="rgb(251,171,30)" fg:x="378" fg:w="1"/><text x="25.0531%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="24.8688%" y="885" width="0.0656%" height="15" fill="rgb(236,46,54)" fg:x="379" fg:w="1"/><text x="25.1188%" y="895.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="24.8688%" y="869" width="0.0656%" height="15" fill="rgb(245,213,5)" fg:x="379" fg:w="1"/><text x="25.1188%" y="879.50"></text></g><g><title>opt_3gt2d3m214h (16 samples, 1.05%)</title><rect x="23.9501%" y="901" width="1.0499%" height="15" fill="rgb(230,144,27)" fg:x="365" fg:w="16"/><text x="24.2001%" y="911.50"></text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="24.9344%" y="885" width="0.0656%" height="15" fill="rgb(220,86,6)" fg:x="380" fg:w="1"/><text x="25.1844%" y="895.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.07%)</title><rect x="25.0000%" y="869" width="0.0656%" height="15" fill="rgb(240,20,13)" fg:x="381" fg:w="1"/><text x="25.2500%" y="879.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.07%)</title><rect x="25.0656%" y="869" width="0.0656%" height="15" fill="rgb(217,89,34)" fg:x="382" fg:w="1"/><text x="25.3156%" y="879.50"></text></g><g><title>[anon] (3 samples, 0.20%)</title><rect x="25.0000%" y="885" width="0.1969%" height="15" fill="rgb(229,13,5)" fg:x="381" fg:w="3"/><text x="25.2500%" y="895.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="25.1312%" y="869" width="0.0656%" height="15" fill="rgb(244,67,35)" fg:x="383" fg:w="1"/><text x="25.3812%" y="879.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (5 samples, 0.33%)</title><rect x="25.2625%" y="773" width="0.3281%" height="15" fill="rgb(221,40,2)" fg:x="385" fg:w="5"/><text x="25.5125%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (5 samples, 0.33%)</title><rect x="25.2625%" y="757" width="0.3281%" height="15" fill="rgb(237,157,21)" fg:x="385" fg:w="5"/><text x="25.5125%" y="767.50"></text></g><g><title>LLVMRustOptimize (5 samples, 0.33%)</title><rect x="25.2625%" y="741" width="0.3281%" height="15" fill="rgb(222,94,11)" fg:x="385" fg:w="5"/><text x="25.5125%" y="751.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (5 samples, 0.33%)</title><rect x="25.2625%" y="725" width="0.3281%" height="15" fill="rgb(249,113,6)" fg:x="385" fg:w="5"/><text x="25.5125%" y="735.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (5 samples, 0.33%)</title><rect x="25.2625%" y="709" width="0.3281%" height="15" fill="rgb(238,137,36)" fg:x="385" fg:w="5"/><text x="25.5125%" y="719.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="25.5906%" y="693" width="0.0656%" height="15" fill="rgb(210,102,26)" fg:x="390" fg:w="1"/><text x="25.8406%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="25.5906%" y="677" width="0.0656%" height="15" fill="rgb(218,30,30)" fg:x="390" fg:w="1"/><text x="25.8406%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="25.5906%" y="661" width="0.0656%" height="15" fill="rgb(214,67,26)" fg:x="390" fg:w="1"/><text x="25.8406%" y="671.50"></text></g><g><title>llvm::DwarfFile::emitUnits (1 samples, 0.07%)</title><rect x="25.5906%" y="645" width="0.0656%" height="15" fill="rgb(251,9,53)" fg:x="390" fg:w="1"/><text x="25.8406%" y="655.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="629" width="0.0656%" height="15" fill="rgb(228,204,25)" fg:x="390" fg:w="1"/><text x="25.8406%" y="639.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="613" width="0.0656%" height="15" fill="rgb(207,153,8)" fg:x="390" fg:w="1"/><text x="25.8406%" y="623.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="597" width="0.0656%" height="15" fill="rgb(242,9,16)" fg:x="390" fg:w="1"/><text x="25.8406%" y="607.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="581" width="0.0656%" height="15" fill="rgb(217,211,10)" fg:x="390" fg:w="1"/><text x="25.8406%" y="591.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="565" width="0.0656%" height="15" fill="rgb(219,228,52)" fg:x="390" fg:w="1"/><text x="25.8406%" y="575.50"></text></g><g><title>llvm::AsmPrinter::emitDwarfDIE (1 samples, 0.07%)</title><rect x="25.5906%" y="549" width="0.0656%" height="15" fill="rgb(231,92,29)" fg:x="390" fg:w="1"/><text x="25.8406%" y="559.50"></text></g><g><title>llvm::MCStreamer::emitULEB128IntValue (1 samples, 0.07%)</title><rect x="25.5906%" y="533" width="0.0656%" height="15" fill="rgb(232,8,23)" fg:x="390" fg:w="1"/><text x="25.8406%" y="543.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="25.7218%" y="677" width="0.0656%" height="15" fill="rgb(216,211,34)" fg:x="392" fg:w="1"/><text x="25.9718%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="25.7218%" y="661" width="0.0656%" height="15" fill="rgb(236,151,0)" fg:x="392" fg:w="1"/><text x="25.9718%" y="671.50"></text></g><g><title>llvm::FastISel::selectInstruction (1 samples, 0.07%)</title><rect x="25.7218%" y="645" width="0.0656%" height="15" fill="rgb(209,168,3)" fg:x="392" fg:w="1"/><text x="25.9718%" y="655.50"></text></g><g><title>llvm::MachineFunction::CreateMachineInstr (1 samples, 0.07%)</title><rect x="25.7218%" y="629" width="0.0656%" height="15" fill="rgb(208,129,28)" fg:x="392" fg:w="1"/><text x="25.9718%" y="639.50"></text></g><g><title>llvm::TargetLibraryInfoWrapperPass::getTLI (1 samples, 0.07%)</title><rect x="25.7874%" y="677" width="0.0656%" height="15" fill="rgb(229,78,22)" fg:x="393" fg:w="1"/><text x="26.0374%" y="687.50"></text></g><g><title>[libc.so.6] (11 samples, 0.72%)</title><rect x="25.1969%" y="885" width="0.7218%" height="15" fill="rgb(228,187,13)" fg:x="384" fg:w="11"/><text x="25.4469%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.66%)</title><rect x="25.2625%" y="869" width="0.6562%" height="15" fill="rgb(240,119,24)" fg:x="385" fg:w="10"/><text x="25.5125%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.66%)</title><rect x="25.2625%" y="853" width="0.6562%" height="15" fill="rgb(209,194,42)" fg:x="385" fg:w="10"/><text x="25.5125%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.66%)</title><rect x="25.2625%" y="837" width="0.6562%" height="15" fill="rgb(247,200,46)" fg:x="385" fg:w="10"/><text x="25.5125%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (10 samples, 0.66%)</title><rect x="25.2625%" y="821" width="0.6562%" height="15" fill="rgb(218,76,16)" fg:x="385" fg:w="10"/><text x="25.5125%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (10 samples, 0.66%)</title><rect x="25.2625%" y="805" width="0.6562%" height="15" fill="rgb(225,21,48)" fg:x="385" fg:w="10"/><text x="25.5125%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (10 samples, 0.66%)</title><rect x="25.2625%" y="789" width="0.6562%" height="15" fill="rgb(239,223,50)" fg:x="385" fg:w="10"/><text x="25.5125%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="25.5906%" y="773" width="0.3281%" height="15" fill="rgb(244,45,21)" fg:x="390" fg:w="5"/><text x="25.8406%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (5 samples, 0.33%)</title><rect x="25.5906%" y="757" width="0.3281%" height="15" fill="rgb(232,33,43)" fg:x="390" fg:w="5"/><text x="25.8406%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (5 samples, 0.33%)</title><rect x="25.5906%" y="741" width="0.3281%" height="15" fill="rgb(209,8,3)" fg:x="390" fg:w="5"/><text x="25.8406%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (5 samples, 0.33%)</title><rect x="25.5906%" y="725" width="0.3281%" height="15" fill="rgb(214,25,53)" fg:x="390" fg:w="5"/><text x="25.8406%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (5 samples, 0.33%)</title><rect x="25.5906%" y="709" width="0.3281%" height="15" fill="rgb(254,186,54)" fg:x="390" fg:w="5"/><text x="25.8406%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (4 samples, 0.26%)</title><rect x="25.6562%" y="693" width="0.2625%" height="15" fill="rgb(208,174,49)" fg:x="391" fg:w="4"/><text x="25.9062%" y="703.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="25.8530%" y="677" width="0.0656%" height="15" fill="rgb(233,191,51)" fg:x="394" fg:w="1"/><text x="26.1030%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="25.8530%" y="661" width="0.0656%" height="15" fill="rgb(222,134,10)" fg:x="394" fg:w="1"/><text x="26.1030%" y="671.50"></text></g><g><title>llvm::DebugHandlerBase::endFunction (1 samples, 0.07%)</title><rect x="25.8530%" y="645" width="0.0656%" height="15" fill="rgb(230,226,20)" fg:x="394" fg:w="1"/><text x="26.1030%" y="655.50"></text></g><g><title>llvm::DwarfDebug::endFunctionImpl (1 samples, 0.07%)</title><rect x="25.8530%" y="629" width="0.0656%" height="15" fill="rgb(251,111,25)" fg:x="394" fg:w="1"/><text x="26.1030%" y="639.50"></text></g><g><title>llvm::DwarfCompileUnit::constructAbstractSubprogramScopeDIE (1 samples, 0.07%)</title><rect x="25.8530%" y="613" width="0.0656%" height="15" fill="rgb(224,40,46)" fg:x="394" fg:w="1"/><text x="26.1030%" y="623.50"></text></g><g><title>llvm::DwarfCompileUnit::createAndAddScopeChildren (1 samples, 0.07%)</title><rect x="25.8530%" y="597" width="0.0656%" height="15" fill="rgb(236,108,47)" fg:x="394" fg:w="1"/><text x="26.1030%" y="607.50"></text></g><g><title>llvm::DwarfCompileUnit::createAndAddScopeChildren (1 samples, 0.07%)</title><rect x="25.8530%" y="581" width="0.0656%" height="15" fill="rgb(234,93,0)" fg:x="394" fg:w="1"/><text x="26.1030%" y="591.50"></text></g><g><title>llvm::DwarfCompileUnit::constructVariableDIEImpl (1 samples, 0.07%)</title><rect x="25.8530%" y="565" width="0.0656%" height="15" fill="rgb(224,213,32)" fg:x="394" fg:w="1"/><text x="26.1030%" y="575.50"></text></g><g><title>llvm::DwarfCompileUnit::applyVariableAttributes (1 samples, 0.07%)</title><rect x="25.8530%" y="549" width="0.0656%" height="15" fill="rgb(251,11,48)" fg:x="394" fg:w="1"/><text x="26.1030%" y="559.50"></text></g><g><title>llvm::DwarfUnit::addDIEEntry (1 samples, 0.07%)</title><rect x="25.8530%" y="533" width="0.0656%" height="15" fill="rgb(236,173,5)" fg:x="394" fg:w="1"/><text x="26.1030%" y="543.50"></text></g><g><title>opt_3si9rf64j10 (15 samples, 0.98%)</title><rect x="25.0000%" y="901" width="0.9843%" height="15" fill="rgb(230,95,12)" fg:x="381" fg:w="15"/><text x="25.2500%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="25.9186%" y="885" width="0.0656%" height="15" fill="rgb(232,209,1)" fg:x="395" fg:w="1"/><text x="26.1686%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="25.9186%" y="869" width="0.0656%" height="15" fill="rgb(232,6,1)" fg:x="395" fg:w="1"/><text x="26.1686%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="25.9186%" y="853" width="0.0656%" height="15" fill="rgb(210,224,50)" fg:x="395" fg:w="1"/><text x="26.1686%" y="863.50"></text></g><g><title>_rjem_je_tsd_te_init (1 samples, 0.07%)</title><rect x="25.9186%" y="837" width="0.0656%" height="15" fill="rgb(228,127,35)" fg:x="395" fg:w="1"/><text x="26.1686%" y="847.50"></text></g><g><title>te_init (1 samples, 0.07%)</title><rect x="25.9186%" y="821" width="0.0656%" height="15" fill="rgb(245,102,45)" fg:x="395" fg:w="1"/><text x="26.1686%" y="831.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (1 samples, 0.07%)</title><rect x="25.9186%" y="805" width="0.0656%" height="15" fill="rgb(214,1,49)" fg:x="395" fg:w="1"/><text x="26.1686%" y="815.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="25.9843%" y="885" width="0.0656%" height="15" fill="rgb(226,163,40)" fg:x="396" fg:w="1"/><text x="26.2343%" y="895.50"></text></g><g><title>llvm::callDefaultCtor&lt;llvm::LazyMachineBlockFrequencyInfoPass, true&gt; (1 samples, 0.07%)</title><rect x="25.9843%" y="869" width="0.0656%" height="15" fill="rgb(239,212,28)" fg:x="396" fg:w="1"/><text x="26.2343%" y="879.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="26.0499%" y="709" width="0.0656%" height="15" fill="rgb(220,20,13)" fg:x="397" fg:w="1"/><text x="26.2999%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="26.0499%" y="693" width="0.0656%" height="15" fill="rgb(210,164,35)" fg:x="397" fg:w="1"/><text x="26.2999%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="26.0499%" y="677" width="0.0656%" height="15" fill="rgb(248,109,41)" fg:x="397" fg:w="1"/><text x="26.2999%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="26.0499%" y="661" width="0.0656%" height="15" fill="rgb(238,23,50)" fg:x="397" fg:w="1"/><text x="26.2999%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="26.0499%" y="645" width="0.0656%" height="15" fill="rgb(211,48,49)" fg:x="397" fg:w="1"/><text x="26.2999%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="26.0499%" y="629" width="0.0656%" height="15" fill="rgb(223,36,21)" fg:x="397" fg:w="1"/><text x="26.2999%" y="639.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="26.0499%" y="613" width="0.0656%" height="15" fill="rgb(207,123,46)" fg:x="397" fg:w="1"/><text x="26.2999%" y="623.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="26.0499%" y="597" width="0.0656%" height="15" fill="rgb(240,218,32)" fg:x="397" fg:w="1"/><text x="26.2999%" y="607.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt;, llvm::DenseMapInfo&lt;llvm::Pass*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt; &gt; &gt;::grow (1 samples, 0.07%)</title><rect x="26.0499%" y="581" width="0.0656%" height="15" fill="rgb(252,5,43)" fg:x="397" fg:w="1"/><text x="26.2999%" y="591.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="26.0499%" y="565" width="0.0656%" height="15" fill="rgb(252,84,19)" fg:x="397" fg:w="1"/><text x="26.2999%" y="575.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="26.0499%" y="549" width="0.0656%" height="15" fill="rgb(243,152,39)" fg:x="397" fg:w="1"/><text x="26.2999%" y="559.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="26.0499%" y="533" width="0.0656%" height="15" fill="rgb(234,160,15)" fg:x="397" fg:w="1"/><text x="26.2999%" y="543.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="26.0499%" y="517" width="0.0656%" height="15" fill="rgb(237,34,20)" fg:x="397" fg:w="1"/><text x="26.2999%" y="527.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="26.0499%" y="501" width="0.0656%" height="15" fill="rgb(229,97,13)" fg:x="397" fg:w="1"/><text x="26.2999%" y="511.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="26.0499%" y="485" width="0.0656%" height="15" fill="rgb(234,71,50)" fg:x="397" fg:w="1"/><text x="26.2999%" y="495.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="26.0499%" y="469" width="0.0656%" height="15" fill="rgb(253,155,4)" fg:x="397" fg:w="1"/><text x="26.2999%" y="479.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="26.0499%" y="453" width="0.0656%" height="15" fill="rgb(222,185,37)" fg:x="397" fg:w="1"/><text x="26.2999%" y="463.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="26.0499%" y="437" width="0.0656%" height="15" fill="rgb(251,177,13)" fg:x="397" fg:w="1"/><text x="26.2999%" y="447.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="26.0499%" y="421" width="0.0656%" height="15" fill="rgb(250,179,40)" fg:x="397" fg:w="1"/><text x="26.2999%" y="431.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="26.0499%" y="405" width="0.0656%" height="15" fill="rgb(242,44,2)" fg:x="397" fg:w="1"/><text x="26.2999%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="26.0499%" y="389" width="0.0656%" height="15" fill="rgb(216,177,13)" fg:x="397" fg:w="1"/><text x="26.2999%" y="399.50"></text></g><g><title>_rjem_je_emap_remap (1 samples, 0.07%)</title><rect x="26.0499%" y="373" width="0.0656%" height="15" fill="rgb(216,106,43)" fg:x="397" fg:w="1"/><text x="26.2999%" y="383.50"></text></g><g><title>llvm::MCContext::createELFSectionImpl (11 samples, 0.72%)</title><rect x="26.1811%" y="597" width="0.7218%" height="15" fill="rgb(216,183,2)" fg:x="399" fg:w="11"/><text x="26.4311%" y="607.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="26.8373%" y="581" width="0.0656%" height="15" fill="rgb(249,75,3)" fg:x="409" fg:w="1"/><text x="27.0873%" y="591.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="26.8373%" y="565" width="0.0656%" height="15" fill="rgb(219,67,39)" fg:x="409" fg:w="1"/><text x="27.0873%" y="575.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="26.8373%" y="549" width="0.0656%" height="15" fill="rgb(253,228,2)" fg:x="409" fg:w="1"/><text x="27.0873%" y="559.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="26.8373%" y="533" width="0.0656%" height="15" fill="rgb(235,138,27)" fg:x="409" fg:w="1"/><text x="27.0873%" y="543.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="26.8373%" y="517" width="0.0656%" height="15" fill="rgb(236,97,51)" fg:x="409" fg:w="1"/><text x="27.0873%" y="527.50"></text></g><g><title>tcache_get_from_ind (1 samples, 0.07%)</title><rect x="26.8373%" y="501" width="0.0656%" height="15" fill="rgb(240,80,30)" fg:x="409" fg:w="1"/><text x="27.0873%" y="511.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.07%)</title><rect x="26.8373%" y="485" width="0.0656%" height="15" fill="rgb(230,178,19)" fg:x="409" fg:w="1"/><text x="27.0873%" y="495.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.07%)</title><rect x="26.8373%" y="469" width="0.0656%" height="15" fill="rgb(210,190,27)" fg:x="409" fg:w="1"/><text x="27.0873%" y="479.50"></text></g><g><title>llvm::FPPassManager::doInitialization (13 samples, 0.85%)</title><rect x="26.1155%" y="693" width="0.8530%" height="15" fill="rgb(222,107,31)" fg:x="398" fg:w="13"/><text x="26.3655%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (13 samples, 0.85%)</title><rect x="26.1155%" y="677" width="0.8530%" height="15" fill="rgb(216,127,34)" fg:x="398" fg:w="13"/><text x="26.3655%" y="687.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::Initialize (13 samples, 0.85%)</title><rect x="26.1155%" y="661" width="0.8530%" height="15" fill="rgb(234,116,52)" fg:x="398" fg:w="13"/><text x="26.3655%" y="671.50"></text></g><g><title>llvm::MCObjectFileInfo::initMCObjectFileInfo (13 samples, 0.85%)</title><rect x="26.1155%" y="645" width="0.8530%" height="15" fill="rgb(222,124,15)" fg:x="398" fg:w="13"/><text x="26.3655%" y="655.50"></text></g><g><title>llvm::MCObjectFileInfo::initELFMCObjectFileInfo (13 samples, 0.85%)</title><rect x="26.1155%" y="629" width="0.8530%" height="15" fill="rgb(231,179,28)" fg:x="398" fg:w="13"/><text x="26.3655%" y="639.50"></text></g><g><title>llvm::MCContext::getELFSection (13 samples, 0.85%)</title><rect x="26.1155%" y="613" width="0.8530%" height="15" fill="rgb(226,93,45)" fg:x="398" fg:w="13"/><text x="26.3655%" y="623.50"></text></g><g><title>llvm::MCContext::recordELFMergeableSectionInfo (1 samples, 0.07%)</title><rect x="26.9029%" y="597" width="0.0656%" height="15" fill="rgb(215,8,51)" fg:x="410" fg:w="1"/><text x="27.1529%" y="607.50"></text></g><g><title>llvm::DenseMapInfo&lt;llvm::StringRef, void&gt;::getHashValue (1 samples, 0.07%)</title><rect x="26.9029%" y="581" width="0.0656%" height="15" fill="rgb(223,106,5)" fg:x="410" fg:w="1"/><text x="27.1529%" y="591.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DICompileUnit const*, bool, llvm::DenseMapInfo&lt;llvm::DICompileUnit const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::DICompileUnit const*, bool&gt; &gt;, llvm::DICompileUnit const*, bool, llvm::DenseMapInfo&lt;llvm::DICompileUnit const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::DICompileUnit const*, bool&gt; &gt;::InsertIntoBucketImpl&lt;llvm::DICompileUnit const*&gt; (5 samples, 0.33%)</title><rect x="27.0341%" y="677" width="0.3281%" height="15" fill="rgb(250,191,5)" fg:x="412" fg:w="5"/><text x="27.2841%" y="687.50"></text></g><g><title>llvm::DenseMap&lt;llvm::DICompileUnit const*, bool, llvm::DenseMapInfo&lt;llvm::DICompileUnit const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::DICompileUnit const*, bool&gt; &gt;::grow (5 samples, 0.33%)</title><rect x="27.0341%" y="661" width="0.3281%" height="15" fill="rgb(242,132,44)" fg:x="412" fg:w="5"/><text x="27.2841%" y="671.50"></text></g><g><title>llvm::X86Subtarget::getTargetLowering (1 samples, 0.07%)</title><rect x="27.3622%" y="677" width="0.0656%" height="15" fill="rgb(251,152,29)" fg:x="417" fg:w="1"/><text x="27.6122%" y="687.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="27.4278%" y="645" width="0.0656%" height="15" fill="rgb(218,179,5)" fg:x="418" fg:w="1"/><text x="27.6778%" y="655.50"></text></g><g><title>llvm::LegacyLegalizerInfo::computeTables (1 samples, 0.07%)</title><rect x="27.4278%" y="629" width="0.0656%" height="15" fill="rgb(227,67,19)" fg:x="418" fg:w="1"/><text x="27.6778%" y="639.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="27.4934%" y="645" width="0.0656%" height="15" fill="rgb(233,119,31)" fg:x="419" fg:w="1"/><text x="27.7434%" y="655.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (7 samples, 0.46%)</title><rect x="27.4278%" y="677" width="0.4593%" height="15" fill="rgb(241,120,22)" fg:x="418" fg:w="7"/><text x="27.6778%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (7 samples, 0.46%)</title><rect x="27.4278%" y="661" width="0.4593%" height="15" fill="rgb(224,102,30)" fg:x="418" fg:w="7"/><text x="27.6778%" y="671.50"></text></g><g><title>llvm::createX86InstructionSelector (5 samples, 0.33%)</title><rect x="27.5591%" y="645" width="0.3281%" height="15" fill="rgb(210,164,37)" fg:x="420" fg:w="5"/><text x="27.8091%" y="655.50"></text></g><g><title>[libc.so.6] (29 samples, 1.90%)</title><rect x="26.0499%" y="885" width="1.9029%" height="15" fill="rgb(226,191,16)" fg:x="397" fg:w="29"/><text x="26.2999%" y="895.50">[..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29 samples, 1.90%)</title><rect x="26.0499%" y="869" width="1.9029%" height="15" fill="rgb(214,40,45)" fg:x="397" fg:w="29"/><text x="26.2999%" y="879.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 1.90%)</title><rect x="26.0499%" y="853" width="1.9029%" height="15" fill="rgb(244,29,26)" fg:x="397" fg:w="29"/><text x="26.2999%" y="863.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 1.90%)</title><rect x="26.0499%" y="837" width="1.9029%" height="15" fill="rgb(216,16,5)" fg:x="397" fg:w="29"/><text x="26.2999%" y="847.50">&lt;..</text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (29 samples, 1.90%)</title><rect x="26.0499%" y="821" width="1.9029%" height="15" fill="rgb(249,76,35)" fg:x="397" fg:w="29"/><text x="26.2999%" y="831.50">&lt;..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (29 samples, 1.90%)</title><rect x="26.0499%" y="805" width="1.9029%" height="15" fill="rgb(207,11,44)" fg:x="397" fg:w="29"/><text x="26.2999%" y="815.50">s..</text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (29 samples, 1.90%)</title><rect x="26.0499%" y="789" width="1.9029%" height="15" fill="rgb(228,190,49)" fg:x="397" fg:w="29"/><text x="26.2999%" y="799.50">r..</text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (29 samples, 1.90%)</title><rect x="26.0499%" y="773" width="1.9029%" height="15" fill="rgb(214,173,12)" fg:x="397" fg:w="29"/><text x="26.2999%" y="783.50">r..</text></g><g><title>rustc_codegen_llvm::back::write::codegen (29 samples, 1.90%)</title><rect x="26.0499%" y="757" width="1.9029%" height="15" fill="rgb(218,26,35)" fg:x="397" fg:w="29"/><text x="26.2999%" y="767.50">r..</text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (29 samples, 1.90%)</title><rect x="26.0499%" y="741" width="1.9029%" height="15" fill="rgb(220,200,19)" fg:x="397" fg:w="29"/><text x="26.2999%" y="751.50">r..</text></g><g><title>LLVMRustWriteOutputFile (29 samples, 1.90%)</title><rect x="26.0499%" y="725" width="1.9029%" height="15" fill="rgb(239,95,49)" fg:x="397" fg:w="29"/><text x="26.2999%" y="735.50">L..</text></g><g><title>llvm::legacy::PassManagerImpl::run (28 samples, 1.84%)</title><rect x="26.1155%" y="709" width="1.8373%" height="15" fill="rgb(235,85,53)" fg:x="398" fg:w="28"/><text x="26.3655%" y="719.50">l..</text></g><g><title>llvm::FPPassManager::runOnModule (15 samples, 0.98%)</title><rect x="26.9685%" y="693" width="0.9843%" height="15" fill="rgb(233,133,31)" fg:x="411" fg:w="15"/><text x="27.2185%" y="703.50"></text></g><g><title>runImpl (1 samples, 0.07%)</title><rect x="27.8871%" y="677" width="0.0656%" height="15" fill="rgb(218,25,20)" fg:x="425" fg:w="1"/><text x="28.1371%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.9528%" y="885" width="0.0656%" height="15" fill="rgb(252,210,38)" fg:x="426" fg:w="1"/><text x="28.2028%" y="895.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (1 samples, 0.07%)</title><rect x="27.9528%" y="869" width="0.0656%" height="15" fill="rgb(242,134,21)" fg:x="426" fg:w="1"/><text x="28.2028%" y="879.50"></text></g><g><title>opt_3v2ita9dr1b (36 samples, 2.36%)</title><rect x="25.9843%" y="901" width="2.3622%" height="15" fill="rgb(213,28,48)" fg:x="396" fg:w="36"/><text x="26.2343%" y="911.50">op..</text></g><g><title>__madvise (5 samples, 0.33%)</title><rect x="28.0184%" y="885" width="0.3281%" height="15" fill="rgb(250,196,2)" fg:x="427" fg:w="5"/><text x="28.2684%" y="895.50"></text></g><g><title>llvm::SwiftErrorValueTracking::setFunction (1 samples, 0.07%)</title><rect x="28.3465%" y="869" width="0.0656%" height="15" fill="rgb(227,5,17)" fg:x="432" fg:w="1"/><text x="28.5965%" y="879.50"></text></g><g><title>[anon] (2 samples, 0.13%)</title><rect x="28.3465%" y="885" width="0.1312%" height="15" fill="rgb(221,226,24)" fg:x="432" fg:w="2"/><text x="28.5965%" y="895.50"></text></g><g><title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.07%)</title><rect x="28.4121%" y="869" width="0.0656%" height="15" fill="rgb(211,5,48)" fg:x="433" fg:w="1"/><text x="28.6621%" y="879.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="28.8714%" y="709" width="0.0656%" height="15" fill="rgb(219,150,6)" fg:x="440" fg:w="1"/><text x="29.1214%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="28.8714%" y="693" width="0.0656%" height="15" fill="rgb(251,46,16)" fg:x="440" fg:w="1"/><text x="29.1214%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="28.8714%" y="677" width="0.0656%" height="15" fill="rgb(220,204,40)" fg:x="440" fg:w="1"/><text x="29.1214%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="28.8714%" y="661" width="0.0656%" height="15" fill="rgb(211,85,2)" fg:x="440" fg:w="1"/><text x="29.1214%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="28.8714%" y="645" width="0.0656%" height="15" fill="rgb(229,17,7)" fg:x="440" fg:w="1"/><text x="29.1214%" y="655.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="28.8714%" y="629" width="0.0656%" height="15" fill="rgb(239,72,28)" fg:x="440" fg:w="1"/><text x="29.1214%" y="639.50"></text></g><g><title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.07%)</title><rect x="28.8714%" y="613" width="0.0656%" height="15" fill="rgb(230,47,54)" fg:x="440" fg:w="1"/><text x="29.1214%" y="623.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="28.9370%" y="693" width="0.0656%" height="15" fill="rgb(214,50,8)" fg:x="441" fg:w="1"/><text x="29.1870%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="28.9370%" y="677" width="0.0656%" height="15" fill="rgb(216,198,43)" fg:x="441" fg:w="1"/><text x="29.1870%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (1 samples, 0.07%)</title><rect x="28.9370%" y="661" width="0.0656%" height="15" fill="rgb(234,20,35)" fg:x="441" fg:w="1"/><text x="29.1870%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (1 samples, 0.07%)</title><rect x="28.9370%" y="645" width="0.0656%" height="15" fill="rgb(254,45,19)" fg:x="441" fg:w="1"/><text x="29.1870%" y="655.50"></text></g><g><title>llvm::MachineFunction::init (6 samples, 0.39%)</title><rect x="29.0026%" y="677" width="0.3937%" height="15" fill="rgb(219,14,44)" fg:x="442" fg:w="6"/><text x="29.2526%" y="687.50"></text></g><g><title>llvm::MachineRegisterInfo::MachineRegisterInfo (6 samples, 0.39%)</title><rect x="29.0026%" y="661" width="0.3937%" height="15" fill="rgb(217,220,26)" fg:x="442" fg:w="6"/><text x="29.2526%" y="671.50"></text></g><g><title>llvm::SmallVectorTemplateBase&lt;std::pair&lt;llvm::Register, llvm::SmallVector&lt;llvm::Register, 4u&gt; &gt;, false&gt;::grow (1 samples, 0.07%)</title><rect x="29.3307%" y="645" width="0.0656%" height="15" fill="rgb(213,158,28)" fg:x="447" fg:w="1"/><text x="29.5807%" y="655.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="29.3307%" y="629" width="0.0656%" height="15" fill="rgb(252,51,52)" fg:x="447" fg:w="1"/><text x="29.5807%" y="639.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="29.3307%" y="613" width="0.0656%" height="15" fill="rgb(246,89,16)" fg:x="447" fg:w="1"/><text x="29.5807%" y="623.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="29.3307%" y="597" width="0.0656%" height="15" fill="rgb(216,158,49)" fg:x="447" fg:w="1"/><text x="29.5807%" y="607.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="29.3307%" y="581" width="0.0656%" height="15" fill="rgb(236,107,19)" fg:x="447" fg:w="1"/><text x="29.5807%" y="591.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="29.3307%" y="565" width="0.0656%" height="15" fill="rgb(228,185,30)" fg:x="447" fg:w="1"/><text x="29.5807%" y="575.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="29.3307%" y="549" width="0.0656%" height="15" fill="rgb(246,134,8)" fg:x="447" fg:w="1"/><text x="29.5807%" y="559.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="29.3307%" y="533" width="0.0656%" height="15" fill="rgb(214,143,50)" fg:x="447" fg:w="1"/><text x="29.5807%" y="543.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="29.3307%" y="517" width="0.0656%" height="15" fill="rgb(228,75,8)" fg:x="447" fg:w="1"/><text x="29.5807%" y="527.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="29.3307%" y="501" width="0.0656%" height="15" fill="rgb(207,175,4)" fg:x="447" fg:w="1"/><text x="29.5807%" y="511.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="29.3307%" y="485" width="0.0656%" height="15" fill="rgb(205,108,24)" fg:x="447" fg:w="1"/><text x="29.5807%" y="495.50"></text></g><g><title>extent_split_impl (1 samples, 0.07%)</title><rect x="29.3307%" y="469" width="0.0656%" height="15" fill="rgb(244,120,49)" fg:x="447" fg:w="1"/><text x="29.5807%" y="479.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.07%)</title><rect x="29.3307%" y="453" width="0.0656%" height="15" fill="rgb(223,47,38)" fg:x="447" fg:w="1"/><text x="29.5807%" y="463.50"></text></g><g><title>_rjem_je_edata_avail_first (1 samples, 0.07%)</title><rect x="29.3307%" y="437" width="0.0656%" height="15" fill="rgb(229,179,11)" fg:x="447" fg:w="1"/><text x="29.5807%" y="447.50"></text></g><g><title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.07%)</title><rect x="29.3963%" y="645" width="0.0656%" height="15" fill="rgb(231,122,1)" fg:x="448" fg:w="1"/><text x="29.6463%" y="655.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::BuildSchedGraph (1 samples, 0.07%)</title><rect x="29.4619%" y="629" width="0.0656%" height="15" fill="rgb(245,119,9)" fg:x="449" fg:w="1"/><text x="29.7119%" y="639.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::BuildSchedUnits (1 samples, 0.07%)</title><rect x="29.4619%" y="613" width="0.0656%" height="15" fill="rgb(241,163,25)" fg:x="449" fg:w="1"/><text x="29.7119%" y="623.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.13%)</title><rect x="29.4619%" y="645" width="0.1312%" height="15" fill="rgb(217,214,3)" fg:x="449" fg:w="2"/><text x="29.7119%" y="655.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitGetElementPtr (1 samples, 0.07%)</title><rect x="29.5276%" y="629" width="0.0656%" height="15" fill="rgb(240,86,28)" fg:x="450" fg:w="1"/><text x="29.7776%" y="639.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (4 samples, 0.26%)</title><rect x="29.3963%" y="677" width="0.2625%" height="15" fill="rgb(215,47,9)" fg:x="448" fg:w="4"/><text x="29.6463%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (4 samples, 0.26%)</title><rect x="29.3963%" y="661" width="0.2625%" height="15" fill="rgb(252,25,45)" fg:x="448" fg:w="4"/><text x="29.6463%" y="671.50"></text></g><g><title>reportFastISelFailure (1 samples, 0.07%)</title><rect x="29.5932%" y="645" width="0.0656%" height="15" fill="rgb(251,164,9)" fg:x="451" fg:w="1"/><text x="29.8432%" y="655.50"></text></g><g><title>LLVMRustContextConfigureDiagnosticHandler::RustDiagnosticHandler::handleDiagnostics (1 samples, 0.07%)</title><rect x="29.5932%" y="629" width="0.0656%" height="15" fill="rgb(233,194,0)" fg:x="451" fg:w="1"/><text x="29.8432%" y="639.50"></text></g><g><title>rustc_codegen_llvm::back::write::diagnostic_handler (1 samples, 0.07%)</title><rect x="29.5932%" y="613" width="0.0656%" height="15" fill="rgb(249,111,24)" fg:x="451" fg:w="1"/><text x="29.8432%" y="623.50"></text></g><g><title>LLVMRustUnpackOptimizationDiagnostic (1 samples, 0.07%)</title><rect x="29.5932%" y="597" width="0.0656%" height="15" fill="rgb(250,223,3)" fg:x="451" fg:w="1"/><text x="29.8432%" y="607.50"></text></g><g><title>llvm::raw_ostream::~raw_ostream (1 samples, 0.07%)</title><rect x="29.5932%" y="581" width="0.0656%" height="15" fill="rgb(236,178,37)" fg:x="451" fg:w="1"/><text x="29.8432%" y="591.50"></text></g><g><title>[libc.so.6] (19 samples, 1.25%)</title><rect x="28.4777%" y="885" width="1.2467%" height="15" fill="rgb(241,158,50)" fg:x="434" fg:w="19"/><text x="28.7277%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.85%)</title><rect x="28.8714%" y="869" width="0.8530%" height="15" fill="rgb(213,121,41)" fg:x="440" fg:w="13"/><text x="29.1214%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.85%)</title><rect x="28.8714%" y="853" width="0.8530%" height="15" fill="rgb(240,92,3)" fg:x="440" fg:w="13"/><text x="29.1214%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.85%)</title><rect x="28.8714%" y="837" width="0.8530%" height="15" fill="rgb(205,123,3)" fg:x="440" fg:w="13"/><text x="29.1214%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (13 samples, 0.85%)</title><rect x="28.8714%" y="821" width="0.8530%" height="15" fill="rgb(205,97,47)" fg:x="440" fg:w="13"/><text x="29.1214%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (13 samples, 0.85%)</title><rect x="28.8714%" y="805" width="0.8530%" height="15" fill="rgb(247,152,14)" fg:x="440" fg:w="13"/><text x="29.1214%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (13 samples, 0.85%)</title><rect x="28.8714%" y="789" width="0.8530%" height="15" fill="rgb(248,195,53)" fg:x="440" fg:w="13"/><text x="29.1214%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (13 samples, 0.85%)</title><rect x="28.8714%" y="773" width="0.8530%" height="15" fill="rgb(226,201,16)" fg:x="440" fg:w="13"/><text x="29.1214%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (13 samples, 0.85%)</title><rect x="28.8714%" y="757" width="0.8530%" height="15" fill="rgb(205,98,0)" fg:x="440" fg:w="13"/><text x="29.1214%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (13 samples, 0.85%)</title><rect x="28.8714%" y="741" width="0.8530%" height="15" fill="rgb(214,191,48)" fg:x="440" fg:w="13"/><text x="29.1214%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (13 samples, 0.85%)</title><rect x="28.8714%" y="725" width="0.8530%" height="15" fill="rgb(237,112,39)" fg:x="440" fg:w="13"/><text x="29.1214%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (12 samples, 0.79%)</title><rect x="28.9370%" y="709" width="0.7874%" height="15" fill="rgb(247,203,27)" fg:x="441" fg:w="12"/><text x="29.1870%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (11 samples, 0.72%)</title><rect x="29.0026%" y="693" width="0.7218%" height="15" fill="rgb(235,124,28)" fg:x="442" fg:w="11"/><text x="29.2526%" y="703.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="29.6588%" y="677" width="0.0656%" height="15" fill="rgb(208,207,46)" fg:x="452" fg:w="1"/><text x="29.9088%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="29.6588%" y="661" width="0.0656%" height="15" fill="rgb(234,176,4)" fg:x="452" fg:w="1"/><text x="29.9088%" y="671.50"></text></g><g><title>llvm::DebugHandlerBase::endFunction (1 samples, 0.07%)</title><rect x="29.6588%" y="645" width="0.0656%" height="15" fill="rgb(230,133,28)" fg:x="452" fg:w="1"/><text x="29.9088%" y="655.50"></text></g><g><title>llvm::DwarfDebug::endFunctionImpl (1 samples, 0.07%)</title><rect x="29.6588%" y="629" width="0.0656%" height="15" fill="rgb(211,137,40)" fg:x="452" fg:w="1"/><text x="29.9088%" y="639.50"></text></g><g><title>llvm::DwarfCompileUnit::constructSubprogramScopeDIE (1 samples, 0.07%)</title><rect x="29.6588%" y="613" width="0.0656%" height="15" fill="rgb(254,35,13)" fg:x="452" fg:w="1"/><text x="29.9088%" y="623.50"></text></g><g><title>llvm::DwarfCompileUnit::updateSubprogramScopeDIEImpl (1 samples, 0.07%)</title><rect x="29.6588%" y="597" width="0.0656%" height="15" fill="rgb(225,49,51)" fg:x="452" fg:w="1"/><text x="29.9088%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.7244%" y="885" width="0.0656%" height="15" fill="rgb(251,10,15)" fg:x="453" fg:w="1"/><text x="29.9744%" y="895.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="29.7244%" y="869" width="0.0656%" height="15" fill="rgb(228,207,15)" fg:x="453" fg:w="1"/><text x="29.9744%" y="879.50"></text></g><g><title>opt_3xggvfbagv7 (23 samples, 1.51%)</title><rect x="28.3465%" y="901" width="1.5092%" height="15" fill="rgb(241,99,19)" fg:x="432" fg:w="23"/><text x="28.5965%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="29.7900%" y="885" width="0.0656%" height="15" fill="rgb(207,104,49)" fg:x="454" fg:w="1"/><text x="30.0400%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="29.7900%" y="869" width="0.0656%" height="15" fill="rgb(234,99,18)" fg:x="454" fg:w="1"/><text x="30.0400%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="29.7900%" y="853" width="0.0656%" height="15" fill="rgb(213,191,49)" fg:x="454" fg:w="1"/><text x="30.0400%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="29.7900%" y="837" width="0.0656%" height="15" fill="rgb(210,226,19)" fg:x="454" fg:w="1"/><text x="30.0400%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="29.7900%" y="821" width="0.0656%" height="15" fill="rgb(229,97,18)" fg:x="454" fg:w="1"/><text x="30.0400%" y="831.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.07%)</title><rect x="29.7900%" y="805" width="0.0656%" height="15" fill="rgb(211,167,15)" fg:x="454" fg:w="1"/><text x="30.0400%" y="815.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.07%)</title><rect x="29.7900%" y="789" width="0.0656%" height="15" fill="rgb(210,169,34)" fg:x="454" fg:w="1"/><text x="30.0400%" y="799.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="29.7900%" y="773" width="0.0656%" height="15" fill="rgb(241,121,31)" fg:x="454" fg:w="1"/><text x="30.0400%" y="783.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="29.7900%" y="757" width="0.0656%" height="15" fill="rgb(232,40,11)" fg:x="454" fg:w="1"/><text x="30.0400%" y="767.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="29.7900%" y="741" width="0.0656%" height="15" fill="rgb(205,86,26)" fg:x="454" fg:w="1"/><text x="30.0400%" y="751.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="29.7900%" y="725" width="0.0656%" height="15" fill="rgb(231,126,28)" fg:x="454" fg:w="1"/><text x="30.0400%" y="735.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="29.7900%" y="709" width="0.0656%" height="15" fill="rgb(219,221,18)" fg:x="454" fg:w="1"/><text x="30.0400%" y="719.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="29.7900%" y="693" width="0.0656%" height="15" fill="rgb(211,40,0)" fg:x="454" fg:w="1"/><text x="30.0400%" y="703.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.07%)</title><rect x="29.7900%" y="677" width="0.0656%" height="15" fill="rgb(239,85,43)" fg:x="454" fg:w="1"/><text x="30.0400%" y="687.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.07%)</title><rect x="29.7900%" y="661" width="0.0656%" height="15" fill="rgb(231,55,21)" fg:x="454" fg:w="1"/><text x="30.0400%" y="671.50"></text></g><g><title>eset_first_fit (1 samples, 0.07%)</title><rect x="29.7900%" y="645" width="0.0656%" height="15" fill="rgb(225,184,43)" fg:x="454" fg:w="1"/><text x="30.0400%" y="655.50"></text></g><g><title>_rjem_je_edata_heap_first (1 samples, 0.07%)</title><rect x="29.7900%" y="629" width="0.0656%" height="15" fill="rgb(251,158,41)" fg:x="454" fg:w="1"/><text x="30.0400%" y="639.50"></text></g><g><title>ph_first (1 samples, 0.07%)</title><rect x="29.7900%" y="613" width="0.0656%" height="15" fill="rgb(234,159,37)" fg:x="454" fg:w="1"/><text x="30.0400%" y="623.50"></text></g><g><title>ph_merge_aux (1 samples, 0.07%)</title><rect x="29.7900%" y="597" width="0.0656%" height="15" fill="rgb(216,204,22)" fg:x="454" fg:w="1"/><text x="30.0400%" y="607.50"></text></g><g><title>phn_next_get (1 samples, 0.07%)</title><rect x="29.7900%" y="581" width="0.0656%" height="15" fill="rgb(214,17,3)" fg:x="454" fg:w="1"/><text x="30.0400%" y="591.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (6 samples, 0.39%)</title><rect x="29.8556%" y="773" width="0.3937%" height="15" fill="rgb(212,111,17)" fg:x="455" fg:w="6"/><text x="30.1056%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (6 samples, 0.39%)</title><rect x="29.8556%" y="757" width="0.3937%" height="15" fill="rgb(221,157,24)" fg:x="455" fg:w="6"/><text x="30.1056%" y="767.50"></text></g><g><title>LLVMRustOptimize (6 samples, 0.39%)</title><rect x="29.8556%" y="741" width="0.3937%" height="15" fill="rgb(252,16,13)" fg:x="455" fg:w="6"/><text x="30.1056%" y="751.50"></text></g><g><title>llvm::UpgradeCallsToIntrinsic (1 samples, 0.07%)</title><rect x="30.1837%" y="725" width="0.0656%" height="15" fill="rgb(221,62,2)" fg:x="460" fg:w="1"/><text x="30.4337%" y="735.50"></text></g><g><title>llvm::UpgradeIntrinsicFunction (1 samples, 0.07%)</title><rect x="30.1837%" y="709" width="0.0656%" height="15" fill="rgb(247,87,22)" fg:x="460" fg:w="1"/><text x="30.4337%" y="719.50"></text></g><g><title>llvm::Intrinsic::remangleIntrinsicFunction (1 samples, 0.07%)</title><rect x="30.1837%" y="693" width="0.0656%" height="15" fill="rgb(215,73,9)" fg:x="460" fg:w="1"/><text x="30.4337%" y="703.50"></text></g><g><title>llvm::Intrinsic::matchIntrinsicSignature (1 samples, 0.07%)</title><rect x="30.1837%" y="677" width="0.0656%" height="15" fill="rgb(207,175,33)" fg:x="460" fg:w="1"/><text x="30.4337%" y="687.50"></text></g><g><title>matchIntrinsicType (1 samples, 0.07%)</title><rect x="30.1837%" y="661" width="0.0656%" height="15" fill="rgb(243,129,54)" fg:x="460" fg:w="1"/><text x="30.4337%" y="671.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="30.2493%" y="693" width="0.0656%" height="15" fill="rgb(227,119,45)" fg:x="461" fg:w="1"/><text x="30.4993%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="30.2493%" y="677" width="0.0656%" height="15" fill="rgb(205,109,36)" fg:x="461" fg:w="1"/><text x="30.4993%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (1 samples, 0.07%)</title><rect x="30.2493%" y="661" width="0.0656%" height="15" fill="rgb(205,6,39)" fg:x="461" fg:w="1"/><text x="30.4993%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (1 samples, 0.07%)</title><rect x="30.2493%" y="645" width="0.0656%" height="15" fill="rgb(221,32,16)" fg:x="461" fg:w="1"/><text x="30.4993%" y="655.50"></text></g><g><title>llvm::MCAssembler::layout (1 samples, 0.07%)</title><rect x="30.2493%" y="629" width="0.0656%" height="15" fill="rgb(228,144,50)" fg:x="461" fg:w="1"/><text x="30.4993%" y="639.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::EmitSchedule (1 samples, 0.07%)</title><rect x="30.3150%" y="629" width="0.0656%" height="15" fill="rgb(229,201,53)" fg:x="462" fg:w="1"/><text x="30.5650%" y="639.50"></text></g><g><title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.07%)</title><rect x="30.3150%" y="613" width="0.0656%" height="15" fill="rgb(249,153,27)" fg:x="462" fg:w="1"/><text x="30.5650%" y="623.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.13%)</title><rect x="30.3150%" y="677" width="0.1312%" height="15" fill="rgb(227,106,25)" fg:x="462" fg:w="2"/><text x="30.5650%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.13%)</title><rect x="30.3150%" y="661" width="0.1312%" height="15" fill="rgb(230,65,29)" fg:x="462" fg:w="2"/><text x="30.5650%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.13%)</title><rect x="30.3150%" y="645" width="0.1312%" height="15" fill="rgb(221,57,46)" fg:x="462" fg:w="2"/><text x="30.5650%" y="655.50"></text></g><g><title>llvm::SelectionDAG::Combine (1 samples, 0.07%)</title><rect x="30.3806%" y="629" width="0.0656%" height="15" fill="rgb(229,161,17)" fg:x="463" fg:w="1"/><text x="30.6306%" y="639.50"></text></g><g><title>[libc.so.6] (10 samples, 0.66%)</title><rect x="29.8556%" y="885" width="0.6562%" height="15" fill="rgb(222,213,11)" fg:x="455" fg:w="10"/><text x="30.1056%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.66%)</title><rect x="29.8556%" y="869" width="0.6562%" height="15" fill="rgb(235,35,13)" fg:x="455" fg:w="10"/><text x="30.1056%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.66%)</title><rect x="29.8556%" y="853" width="0.6562%" height="15" fill="rgb(233,158,34)" fg:x="455" fg:w="10"/><text x="30.1056%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.66%)</title><rect x="29.8556%" y="837" width="0.6562%" height="15" fill="rgb(215,151,48)" fg:x="455" fg:w="10"/><text x="30.1056%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (10 samples, 0.66%)</title><rect x="29.8556%" y="821" width="0.6562%" height="15" fill="rgb(229,84,14)" fg:x="455" fg:w="10"/><text x="30.1056%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (10 samples, 0.66%)</title><rect x="29.8556%" y="805" width="0.6562%" height="15" fill="rgb(229,68,14)" fg:x="455" fg:w="10"/><text x="30.1056%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (10 samples, 0.66%)</title><rect x="29.8556%" y="789" width="0.6562%" height="15" fill="rgb(243,106,26)" fg:x="455" fg:w="10"/><text x="30.1056%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="30.2493%" y="773" width="0.2625%" height="15" fill="rgb(206,45,38)" fg:x="461" fg:w="4"/><text x="30.4993%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (4 samples, 0.26%)</title><rect x="30.2493%" y="757" width="0.2625%" height="15" fill="rgb(226,6,15)" fg:x="461" fg:w="4"/><text x="30.4993%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (4 samples, 0.26%)</title><rect x="30.2493%" y="741" width="0.2625%" height="15" fill="rgb(232,22,54)" fg:x="461" fg:w="4"/><text x="30.4993%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.26%)</title><rect x="30.2493%" y="725" width="0.2625%" height="15" fill="rgb(229,222,32)" fg:x="461" fg:w="4"/><text x="30.4993%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (4 samples, 0.26%)</title><rect x="30.2493%" y="709" width="0.2625%" height="15" fill="rgb(228,62,29)" fg:x="461" fg:w="4"/><text x="30.4993%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (3 samples, 0.20%)</title><rect x="30.3150%" y="693" width="0.1969%" height="15" fill="rgb(251,103,34)" fg:x="462" fg:w="3"/><text x="30.5650%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="30.4462%" y="677" width="0.0656%" height="15" fill="rgb(233,12,30)" fg:x="464" fg:w="1"/><text x="30.6962%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="30.4462%" y="661" width="0.0656%" height="15" fill="rgb(238,52,0)" fg:x="464" fg:w="1"/><text x="30.6962%" y="671.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="30.4462%" y="645" width="0.0656%" height="15" fill="rgb(223,98,5)" fg:x="464" fg:w="1"/><text x="30.6962%" y="655.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.07%)</title><rect x="30.5118%" y="869" width="0.0656%" height="15" fill="rgb(228,75,37)" fg:x="465" fg:w="1"/><text x="30.7618%" y="879.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="30.5774%" y="869" width="0.0656%" height="15" fill="rgb(205,115,49)" fg:x="466" fg:w="1"/><text x="30.8274%" y="879.50"></text></g><g><title>opt_3zofrfxkp5g (13 samples, 0.85%)</title><rect x="29.8556%" y="901" width="0.8530%" height="15" fill="rgb(250,154,43)" fg:x="455" fg:w="13"/><text x="30.1056%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.20%)</title><rect x="30.5118%" y="885" width="0.1969%" height="15" fill="rgb(226,43,29)" fg:x="465" fg:w="3"/><text x="30.7618%" y="895.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="30.6430%" y="869" width="0.0656%" height="15" fill="rgb(249,228,39)" fg:x="467" fg:w="1"/><text x="30.8930%" y="879.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="30.6430%" y="853" width="0.0656%" height="15" fill="rgb(216,79,43)" fg:x="467" fg:w="1"/><text x="30.8930%" y="863.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (1 samples, 0.07%)</title><rect x="30.6430%" y="837" width="0.0656%" height="15" fill="rgb(228,95,12)" fg:x="467" fg:w="1"/><text x="30.8930%" y="847.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (1 samples, 0.07%)</title><rect x="30.6430%" y="821" width="0.0656%" height="15" fill="rgb(249,221,15)" fg:x="467" fg:w="1"/><text x="30.8930%" y="831.50"></text></g><g><title>LLVMRustWriteOutputFile (1 samples, 0.07%)</title><rect x="30.6430%" y="805" width="0.0656%" height="15" fill="rgb(233,34,13)" fg:x="467" fg:w="1"/><text x="30.8930%" y="815.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.07%)</title><rect x="30.6430%" y="789" width="0.0656%" height="15" fill="rgb(214,103,39)" fg:x="467" fg:w="1"/><text x="30.8930%" y="799.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="30.6430%" y="773" width="0.0656%" height="15" fill="rgb(251,126,39)" fg:x="467" fg:w="1"/><text x="30.8930%" y="783.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="30.6430%" y="757" width="0.0656%" height="15" fill="rgb(214,216,36)" fg:x="467" fg:w="1"/><text x="30.8930%" y="767.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="30.6430%" y="741" width="0.0656%" height="15" fill="rgb(220,221,8)" fg:x="467" fg:w="1"/><text x="30.8930%" y="751.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.07%)</title><rect x="30.6430%" y="725" width="0.0656%" height="15" fill="rgb(240,216,3)" fg:x="467" fg:w="1"/><text x="30.8930%" y="735.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitCall (1 samples, 0.07%)</title><rect x="30.6430%" y="709" width="0.0656%" height="15" fill="rgb(232,218,17)" fg:x="467" fg:w="1"/><text x="30.8930%" y="719.50"></text></g><g><title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.07%)</title><rect x="30.6430%" y="693" width="0.0656%" height="15" fill="rgb(229,163,45)" fg:x="467" fg:w="1"/><text x="30.8930%" y="703.50"></text></g><g><title>llvm::SelectionDAGBuilder::lowerInvokable (1 samples, 0.07%)</title><rect x="30.6430%" y="677" width="0.0656%" height="15" fill="rgb(231,110,42)" fg:x="467" fg:w="1"/><text x="30.8930%" y="687.50"></text></g><g><title>llvm::TargetLowering::LowerCallTo (1 samples, 0.07%)</title><rect x="30.6430%" y="661" width="0.0656%" height="15" fill="rgb(208,170,48)" fg:x="467" fg:w="1"/><text x="30.8930%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::LowerCall (1 samples, 0.07%)</title><rect x="30.6430%" y="645" width="0.0656%" height="15" fill="rgb(239,116,25)" fg:x="467" fg:w="1"/><text x="30.8930%" y="655.50"></text></g><g><title>llvm::DenseMap&lt;llvm::SDNode const*, llvm::SelectionDAG::NodeExtraInfo, llvm::DenseMapInfo&lt;llvm::SDNode const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::SDNode const*, llvm::SelectionDAG::NodeExtraInfo&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="30.6430%" y="629" width="0.0656%" height="15" fill="rgb(219,200,50)" fg:x="467" fg:w="1"/><text x="30.8930%" y="639.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="30.6430%" y="613" width="0.0656%" height="15" fill="rgb(245,200,0)" fg:x="467" fg:w="1"/><text x="30.8930%" y="623.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="30.6430%" y="597" width="0.0656%" height="15" fill="rgb(245,119,33)" fg:x="467" fg:w="1"/><text x="30.8930%" y="607.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="30.6430%" y="581" width="0.0656%" height="15" fill="rgb(231,125,12)" fg:x="467" fg:w="1"/><text x="30.8930%" y="591.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="30.6430%" y="565" width="0.0656%" height="15" fill="rgb(216,96,41)" fg:x="467" fg:w="1"/><text x="30.8930%" y="575.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="30.6430%" y="549" width="0.0656%" height="15" fill="rgb(248,43,45)" fg:x="467" fg:w="1"/><text x="30.8930%" y="559.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="30.6430%" y="533" width="0.0656%" height="15" fill="rgb(217,222,7)" fg:x="467" fg:w="1"/><text x="30.8930%" y="543.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="30.6430%" y="517" width="0.0656%" height="15" fill="rgb(233,28,6)" fg:x="467" fg:w="1"/><text x="30.8930%" y="527.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="30.6430%" y="501" width="0.0656%" height="15" fill="rgb(231,218,15)" fg:x="467" fg:w="1"/><text x="30.8930%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="30.6430%" y="485" width="0.0656%" height="15" fill="rgb(226,171,48)" fg:x="467" fg:w="1"/><text x="30.8930%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="30.6430%" y="469" width="0.0656%" height="15" fill="rgb(235,201,9)" fg:x="467" fg:w="1"/><text x="30.8930%" y="479.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="30.6430%" y="453" width="0.0656%" height="15" fill="rgb(217,80,15)" fg:x="467" fg:w="1"/><text x="30.8930%" y="463.50"></text></g><g><title>_rjem_je_arena_get_ehooks (1 samples, 0.07%)</title><rect x="30.6430%" y="437" width="0.0656%" height="15" fill="rgb(219,152,8)" fg:x="467" fg:w="1"/><text x="30.8930%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="30.7087%" y="885" width="0.0656%" height="15" fill="rgb(243,107,38)" fg:x="468" fg:w="1"/><text x="30.9587%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="30.7087%" y="869" width="0.0656%" height="15" fill="rgb(231,17,5)" fg:x="468" fg:w="1"/><text x="30.9587%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="30.7087%" y="853" width="0.0656%" height="15" fill="rgb(209,25,54)" fg:x="468" fg:w="1"/><text x="30.9587%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="30.7087%" y="837" width="0.0656%" height="15" fill="rgb(219,0,2)" fg:x="468" fg:w="1"/><text x="30.9587%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="30.7087%" y="821" width="0.0656%" height="15" fill="rgb(246,9,5)" fg:x="468" fg:w="1"/><text x="30.9587%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (1 samples, 0.07%)</title><rect x="30.7087%" y="805" width="0.0656%" height="15" fill="rgb(226,159,4)" fg:x="468" fg:w="1"/><text x="30.9587%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="30.7087%" y="789" width="0.0656%" height="15" fill="rgb(219,175,34)" fg:x="468" fg:w="1"/><text x="30.9587%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="30.7087%" y="773" width="0.0656%" height="15" fill="rgb(236,10,46)" fg:x="468" fg:w="1"/><text x="30.9587%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (1 samples, 0.07%)</title><rect x="30.7087%" y="757" width="0.0656%" height="15" fill="rgb(240,211,16)" fg:x="468" fg:w="1"/><text x="30.9587%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (1 samples, 0.07%)</title><rect x="30.7087%" y="741" width="0.0656%" height="15" fill="rgb(205,3,43)" fg:x="468" fg:w="1"/><text x="30.9587%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (1 samples, 0.07%)</title><rect x="30.7087%" y="725" width="0.0656%" height="15" fill="rgb(245,7,22)" fg:x="468" fg:w="1"/><text x="30.9587%" y="735.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="30.7087%" y="709" width="0.0656%" height="15" fill="rgb(239,132,32)" fg:x="468" fg:w="1"/><text x="30.9587%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="30.7087%" y="693" width="0.0656%" height="15" fill="rgb(228,202,34)" fg:x="468" fg:w="1"/><text x="30.9587%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="30.7087%" y="677" width="0.0656%" height="15" fill="rgb(254,200,22)" fg:x="468" fg:w="1"/><text x="30.9587%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="30.7087%" y="661" width="0.0656%" height="15" fill="rgb(219,10,39)" fg:x="468" fg:w="1"/><text x="30.9587%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="30.7087%" y="645" width="0.0656%" height="15" fill="rgb(226,210,39)" fg:x="468" fg:w="1"/><text x="30.9587%" y="655.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="30.7087%" y="629" width="0.0656%" height="15" fill="rgb(208,219,16)" fg:x="468" fg:w="1"/><text x="30.9587%" y="639.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="30.7087%" y="613" width="0.0656%" height="15" fill="rgb(216,158,51)" fg:x="468" fg:w="1"/><text x="30.9587%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.7743%" y="885" width="0.0656%" height="15" fill="rgb(233,14,44)" fg:x="469" fg:w="1"/><text x="31.0243%" y="895.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DIE const*, llvm::DwarfCompileUnit*, llvm::DenseMapInfo&lt;llvm::DIE const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::DIE const*, llvm::DwarfCompileUnit*&gt; &gt;, llvm::DIE const*, llvm::DwarfCompileUnit*, llvm::DenseMapInfo&lt;llvm::DIE const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::DIE const*, llvm::DwarfCompileUnit*&gt; &gt;::InsertIntoBucketImpl&lt;llvm::DIE const*&gt; (1 samples, 0.07%)</title><rect x="30.7743%" y="869" width="0.0656%" height="15" fill="rgb(237,97,39)" fg:x="469" fg:w="1"/><text x="31.0243%" y="879.50"></text></g><g><title>opt_3zxx6gr7cou (3 samples, 0.20%)</title><rect x="30.7087%" y="901" width="0.1969%" height="15" fill="rgb(218,198,43)" fg:x="468" fg:w="3"/><text x="30.9587%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="30.8399%" y="885" width="0.0656%" height="15" fill="rgb(231,104,20)" fg:x="470" fg:w="1"/><text x="31.0899%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="30.8399%" y="869" width="0.0656%" height="15" fill="rgb(254,36,13)" fg:x="470" fg:w="1"/><text x="31.0899%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="30.8399%" y="853" width="0.0656%" height="15" fill="rgb(248,14,50)" fg:x="470" fg:w="1"/><text x="31.0899%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="30.8399%" y="837" width="0.0656%" height="15" fill="rgb(217,107,29)" fg:x="470" fg:w="1"/><text x="31.0899%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="30.8399%" y="821" width="0.0656%" height="15" fill="rgb(251,169,33)" fg:x="470" fg:w="1"/><text x="31.0899%" y="831.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.07%)</title><rect x="30.8399%" y="805" width="0.0656%" height="15" fill="rgb(217,108,32)" fg:x="470" fg:w="1"/><text x="31.0899%" y="815.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.07%)</title><rect x="30.8399%" y="789" width="0.0656%" height="15" fill="rgb(219,66,42)" fg:x="470" fg:w="1"/><text x="31.0899%" y="799.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="30.8399%" y="773" width="0.0656%" height="15" fill="rgb(206,180,7)" fg:x="470" fg:w="1"/><text x="31.0899%" y="783.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="30.8399%" y="757" width="0.0656%" height="15" fill="rgb(208,226,31)" fg:x="470" fg:w="1"/><text x="31.0899%" y="767.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="30.8399%" y="741" width="0.0656%" height="15" fill="rgb(218,26,49)" fg:x="470" fg:w="1"/><text x="31.0899%" y="751.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="30.8399%" y="725" width="0.0656%" height="15" fill="rgb(233,197,48)" fg:x="470" fg:w="1"/><text x="31.0899%" y="735.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="30.8399%" y="709" width="0.0656%" height="15" fill="rgb(252,181,51)" fg:x="470" fg:w="1"/><text x="31.0899%" y="719.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="30.8399%" y="693" width="0.0656%" height="15" fill="rgb(253,90,19)" fg:x="470" fg:w="1"/><text x="31.0899%" y="703.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.07%)</title><rect x="30.8399%" y="677" width="0.0656%" height="15" fill="rgb(215,171,30)" fg:x="470" fg:w="1"/><text x="31.0899%" y="687.50"></text></g><g><title>extent_activate_locked (1 samples, 0.07%)</title><rect x="30.8399%" y="661" width="0.0656%" height="15" fill="rgb(214,222,9)" fg:x="470" fg:w="1"/><text x="31.0899%" y="671.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.07%)</title><rect x="30.8399%" y="645" width="0.0656%" height="15" fill="rgb(223,3,22)" fg:x="470" fg:w="1"/><text x="31.0899%" y="655.50"></text></g><g><title>sz_psz2ind (1 samples, 0.07%)</title><rect x="30.8399%" y="629" width="0.0656%" height="15" fill="rgb(225,196,46)" fg:x="470" fg:w="1"/><text x="31.0899%" y="639.50"></text></g><g><title>lg_ceil (1 samples, 0.07%)</title><rect x="30.8399%" y="613" width="0.0656%" height="15" fill="rgb(209,110,37)" fg:x="470" fg:w="1"/><text x="31.0899%" y="623.50"></text></g><g><title>opt_4q3mucwe9cy (1 samples, 0.07%)</title><rect x="30.9055%" y="901" width="0.0656%" height="15" fill="rgb(249,89,12)" fg:x="471" fg:w="1"/><text x="31.1555%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="30.9055%" y="885" width="0.0656%" height="15" fill="rgb(226,27,33)" fg:x="471" fg:w="1"/><text x="31.1555%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="30.9055%" y="869" width="0.0656%" height="15" fill="rgb(213,82,22)" fg:x="471" fg:w="1"/><text x="31.1555%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="30.9055%" y="853" width="0.0656%" height="15" fill="rgb(248,140,0)" fg:x="471" fg:w="1"/><text x="31.1555%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="30.9055%" y="837" width="0.0656%" height="15" fill="rgb(228,106,3)" fg:x="471" fg:w="1"/><text x="31.1555%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="30.9055%" y="821" width="0.0656%" height="15" fill="rgb(209,23,37)" fg:x="471" fg:w="1"/><text x="31.1555%" y="831.50"></text></g><g><title>arena_choose (1 samples, 0.07%)</title><rect x="30.9055%" y="805" width="0.0656%" height="15" fill="rgb(241,93,50)" fg:x="471" fg:w="1"/><text x="31.1555%" y="815.50"></text></g><g><title>arena_choose_impl (1 samples, 0.07%)</title><rect x="30.9055%" y="789" width="0.0656%" height="15" fill="rgb(253,46,43)" fg:x="471" fg:w="1"/><text x="31.1555%" y="799.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.07%)</title><rect x="30.9055%" y="773" width="0.0656%" height="15" fill="rgb(226,206,43)" fg:x="471" fg:w="1"/><text x="31.1555%" y="783.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.07%)</title><rect x="30.9055%" y="757" width="0.0656%" height="15" fill="rgb(217,54,7)" fg:x="471" fg:w="1"/><text x="31.1555%" y="767.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (1 samples, 0.07%)</title><rect x="30.9055%" y="741" width="0.0656%" height="15" fill="rgb(223,5,52)" fg:x="471" fg:w="1"/><text x="31.1555%" y="751.50"></text></g><g><title>atomic_load_b (1 samples, 0.07%)</title><rect x="30.9055%" y="725" width="0.0656%" height="15" fill="rgb(206,52,46)" fg:x="471" fg:w="1"/><text x="31.1555%" y="735.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="31.1024%" y="709" width="0.0656%" height="15" fill="rgb(253,136,11)" fg:x="474" fg:w="1"/><text x="31.3524%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="31.1024%" y="693" width="0.0656%" height="15" fill="rgb(208,106,33)" fg:x="474" fg:w="1"/><text x="31.3524%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="31.1024%" y="677" width="0.0656%" height="15" fill="rgb(206,54,4)" fg:x="474" fg:w="1"/><text x="31.3524%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="31.1024%" y="661" width="0.0656%" height="15" fill="rgb(213,3,15)" fg:x="474" fg:w="1"/><text x="31.3524%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="31.1024%" y="645" width="0.0656%" height="15" fill="rgb(252,211,39)" fg:x="474" fg:w="1"/><text x="31.3524%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="31.1024%" y="629" width="0.0656%" height="15" fill="rgb(223,6,36)" fg:x="474" fg:w="1"/><text x="31.3524%" y="639.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="31.1024%" y="613" width="0.0656%" height="15" fill="rgb(252,169,45)" fg:x="474" fg:w="1"/><text x="31.3524%" y="623.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="31.1024%" y="597" width="0.0656%" height="15" fill="rgb(212,48,26)" fg:x="474" fg:w="1"/><text x="31.3524%" y="607.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt;, llvm::DenseMapInfo&lt;llvm::Pass*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Pass*, llvm::SmallPtrSet&lt;llvm::Pass*, 8u&gt; &gt; &gt;::grow (1 samples, 0.07%)</title><rect x="31.1024%" y="581" width="0.0656%" height="15" fill="rgb(251,102,48)" fg:x="474" fg:w="1"/><text x="31.3524%" y="591.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="31.1024%" y="565" width="0.0656%" height="15" fill="rgb(243,208,16)" fg:x="474" fg:w="1"/><text x="31.3524%" y="575.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="31.1024%" y="549" width="0.0656%" height="15" fill="rgb(219,96,24)" fg:x="474" fg:w="1"/><text x="31.3524%" y="559.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="31.1024%" y="533" width="0.0656%" height="15" fill="rgb(219,33,29)" fg:x="474" fg:w="1"/><text x="31.3524%" y="543.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="31.1024%" y="517" width="0.0656%" height="15" fill="rgb(223,176,5)" fg:x="474" fg:w="1"/><text x="31.3524%" y="527.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="31.1024%" y="501" width="0.0656%" height="15" fill="rgb(228,140,14)" fg:x="474" fg:w="1"/><text x="31.3524%" y="511.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="31.1024%" y="485" width="0.0656%" height="15" fill="rgb(217,179,31)" fg:x="474" fg:w="1"/><text x="31.3524%" y="495.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="31.1024%" y="469" width="0.0656%" height="15" fill="rgb(230,9,30)" fg:x="474" fg:w="1"/><text x="31.3524%" y="479.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="31.1024%" y="453" width="0.0656%" height="15" fill="rgb(230,136,20)" fg:x="474" fg:w="1"/><text x="31.3524%" y="463.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="31.1024%" y="437" width="0.0656%" height="15" fill="rgb(215,210,22)" fg:x="474" fg:w="1"/><text x="31.3524%" y="447.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="31.1024%" y="421" width="0.0656%" height="15" fill="rgb(218,43,5)" fg:x="474" fg:w="1"/><text x="31.3524%" y="431.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="31.1024%" y="405" width="0.0656%" height="15" fill="rgb(216,11,5)" fg:x="474" fg:w="1"/><text x="31.3524%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="31.1024%" y="389" width="0.0656%" height="15" fill="rgb(209,82,29)" fg:x="474" fg:w="1"/><text x="31.3524%" y="399.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="31.1024%" y="373" width="0.0656%" height="15" fill="rgb(244,115,12)" fg:x="474" fg:w="1"/><text x="31.3524%" y="383.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="31.1024%" y="357" width="0.0656%" height="15" fill="rgb(222,82,18)" fg:x="474" fg:w="1"/><text x="31.3524%" y="367.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="31.1024%" y="341" width="0.0656%" height="15" fill="rgb(249,227,8)" fg:x="474" fg:w="1"/><text x="31.3524%" y="351.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="31.1024%" y="325" width="0.0656%" height="15" fill="rgb(253,141,45)" fg:x="474" fg:w="1"/><text x="31.3524%" y="335.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="31.1024%" y="309" width="0.0656%" height="15" fill="rgb(234,184,4)" fg:x="474" fg:w="1"/><text x="31.3524%" y="319.50"></text></g><g><title>extent_split_impl (1 samples, 0.07%)</title><rect x="31.1024%" y="293" width="0.0656%" height="15" fill="rgb(218,194,23)" fg:x="474" fg:w="1"/><text x="31.3524%" y="303.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.07%)</title><rect x="31.1024%" y="277" width="0.0656%" height="15" fill="rgb(235,66,41)" fg:x="474" fg:w="1"/><text x="31.3524%" y="287.50"></text></g><g><title>_rjem_je_edata_avail_first (1 samples, 0.07%)</title><rect x="31.1024%" y="261" width="0.0656%" height="15" fill="rgb(245,217,1)" fg:x="474" fg:w="1"/><text x="31.3524%" y="271.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="31.1680%" y="693" width="0.0656%" height="15" fill="rgb(229,91,1)" fg:x="475" fg:w="1"/><text x="31.4180%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="31.1680%" y="677" width="0.0656%" height="15" fill="rgb(207,101,30)" fg:x="475" fg:w="1"/><text x="31.4180%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="31.1680%" y="661" width="0.0656%" height="15" fill="rgb(223,82,49)" fg:x="475" fg:w="1"/><text x="31.4180%" y="671.50"></text></g><g><title>llvm::DwarfStringPool::emit (1 samples, 0.07%)</title><rect x="31.1680%" y="645" width="0.0656%" height="15" fill="rgb(218,167,17)" fg:x="475" fg:w="1"/><text x="31.4180%" y="655.50"></text></g><g><title>std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::$_0&gt; &gt; (1 samples, 0.07%)</title><rect x="31.1680%" y="629" width="0.0656%" height="15" fill="rgb(208,103,14)" fg:x="475" fg:w="1"/><text x="31.4180%" y="639.50"></text></g><g><title>std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::$_0&gt; &gt; (1 samples, 0.07%)</title><rect x="31.1680%" y="613" width="0.0656%" height="15" fill="rgb(238,20,8)" fg:x="475" fg:w="1"/><text x="31.4180%" y="623.50"></text></g><g><title>std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::$_0&gt; &gt; (1 samples, 0.07%)</title><rect x="31.1680%" y="597" width="0.0656%" height="15" fill="rgb(218,80,54)" fg:x="475" fg:w="1"/><text x="31.4180%" y="607.50"></text></g><g><title>opt_4y1nshty9r9 (6 samples, 0.39%)</title><rect x="30.9711%" y="901" width="0.3937%" height="15" fill="rgb(240,144,17)" fg:x="472" fg:w="6"/><text x="31.2211%" y="911.50"></text></g><g><title>[libc.so.6] (6 samples, 0.39%)</title><rect x="30.9711%" y="885" width="0.3937%" height="15" fill="rgb(245,27,50)" fg:x="472" fg:w="6"/><text x="31.2211%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.26%)</title><rect x="31.1024%" y="869" width="0.2625%" height="15" fill="rgb(251,51,7)" fg:x="474" fg:w="4"/><text x="31.3524%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="31.1024%" y="853" width="0.2625%" height="15" fill="rgb(245,217,29)" fg:x="474" fg:w="4"/><text x="31.3524%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="31.1024%" y="837" width="0.2625%" height="15" fill="rgb(221,176,29)" fg:x="474" fg:w="4"/><text x="31.3524%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (4 samples, 0.26%)</title><rect x="31.1024%" y="821" width="0.2625%" height="15" fill="rgb(212,180,24)" fg:x="474" fg:w="4"/><text x="31.3524%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (4 samples, 0.26%)</title><rect x="31.1024%" y="805" width="0.2625%" height="15" fill="rgb(254,24,2)" fg:x="474" fg:w="4"/><text x="31.3524%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="31.1024%" y="789" width="0.2625%" height="15" fill="rgb(230,100,2)" fg:x="474" fg:w="4"/><text x="31.3524%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="31.1024%" y="773" width="0.2625%" height="15" fill="rgb(219,142,25)" fg:x="474" fg:w="4"/><text x="31.3524%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (4 samples, 0.26%)</title><rect x="31.1024%" y="757" width="0.2625%" height="15" fill="rgb(240,73,43)" fg:x="474" fg:w="4"/><text x="31.3524%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (4 samples, 0.26%)</title><rect x="31.1024%" y="741" width="0.2625%" height="15" fill="rgb(214,114,15)" fg:x="474" fg:w="4"/><text x="31.3524%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.26%)</title><rect x="31.1024%" y="725" width="0.2625%" height="15" fill="rgb(207,130,4)" fg:x="474" fg:w="4"/><text x="31.3524%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (3 samples, 0.20%)</title><rect x="31.1680%" y="709" width="0.1969%" height="15" fill="rgb(221,25,40)" fg:x="475" fg:w="3"/><text x="31.4180%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.13%)</title><rect x="31.2336%" y="693" width="0.1312%" height="15" fill="rgb(241,184,7)" fg:x="476" fg:w="2"/><text x="31.4836%" y="703.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="31.2992%" y="677" width="0.0656%" height="15" fill="rgb(235,159,4)" fg:x="477" fg:w="1"/><text x="31.5492%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="31.2992%" y="661" width="0.0656%" height="15" fill="rgb(214,87,48)" fg:x="477" fg:w="1"/><text x="31.5492%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.07%)</title><rect x="31.2992%" y="645" width="0.0656%" height="15" fill="rgb(246,198,24)" fg:x="477" fg:w="1"/><text x="31.5492%" y="655.50"></text></g><g><title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.07%)</title><rect x="31.2992%" y="629" width="0.0656%" height="15" fill="rgb(209,66,40)" fg:x="477" fg:w="1"/><text x="31.5492%" y="639.50"></text></g><g><title>llvm::Pass::getPassName (1 samples, 0.07%)</title><rect x="31.3648%" y="869" width="0.0656%" height="15" fill="rgb(233,147,39)" fg:x="478" fg:w="1"/><text x="31.6148%" y="879.50"></text></g><g><title>[anon] (2 samples, 0.13%)</title><rect x="31.3648%" y="885" width="0.1312%" height="15" fill="rgb(231,145,52)" fg:x="478" fg:w="2"/><text x="31.6148%" y="895.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="31.4304%" y="869" width="0.0656%" height="15" fill="rgb(206,20,26)" fg:x="479" fg:w="1"/><text x="31.6804%" y="879.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="31.4304%" y="853" width="0.0656%" height="15" fill="rgb(238,220,4)" fg:x="479" fg:w="1"/><text x="31.6804%" y="863.50"></text></g><g><title>[libLLVM-16-rust-1.70.0-stable.so] (1 samples, 0.07%)</title><rect x="31.4961%" y="885" width="0.0656%" height="15" fill="rgb(252,195,42)" fg:x="480" fg:w="1"/><text x="31.7461%" y="895.50"></text></g><g><title>initializeMachinePipelinerPassOnce (1 samples, 0.07%)</title><rect x="31.4961%" y="869" width="0.0656%" height="15" fill="rgb(209,10,6)" fg:x="480" fg:w="1"/><text x="31.7461%" y="879.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.07%)</title><rect x="31.5617%" y="757" width="0.0656%" height="15" fill="rgb(229,3,52)" fg:x="481" fg:w="1"/><text x="31.8117%" y="767.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.07%)</title><rect x="31.5617%" y="741" width="0.0656%" height="15" fill="rgb(253,49,37)" fg:x="481" fg:w="1"/><text x="31.8117%" y="751.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.07%)</title><rect x="31.5617%" y="725" width="0.0656%" height="15" fill="rgb(240,103,49)" fg:x="481" fg:w="1"/><text x="31.8117%" y="735.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.07%)</title><rect x="31.5617%" y="709" width="0.0656%" height="15" fill="rgb(250,182,30)" fg:x="481" fg:w="1"/><text x="31.8117%" y="719.50"></text></g><g><title>ph_remove (1 samples, 0.07%)</title><rect x="31.5617%" y="693" width="0.0656%" height="15" fill="rgb(248,8,30)" fg:x="481" fg:w="1"/><text x="31.8117%" y="703.50"></text></g><g><title>phn_lchild_get (1 samples, 0.07%)</title><rect x="31.5617%" y="677" width="0.0656%" height="15" fill="rgb(237,120,30)" fg:x="481" fg:w="1"/><text x="31.8117%" y="687.50"></text></g><g><title>_rjem_je_tsd_cleanup (2 samples, 0.13%)</title><rect x="31.5617%" y="869" width="0.1312%" height="15" fill="rgb(221,146,34)" fg:x="481" fg:w="2"/><text x="31.8117%" y="879.50"></text></g><g><title>tsd_do_data_cleanup (2 samples, 0.13%)</title><rect x="31.5617%" y="853" width="0.1312%" height="15" fill="rgb(242,55,13)" fg:x="481" fg:w="2"/><text x="31.8117%" y="863.50"></text></g><g><title>tcache_destroy (2 samples, 0.13%)</title><rect x="31.5617%" y="837" width="0.1312%" height="15" fill="rgb(242,112,31)" fg:x="481" fg:w="2"/><text x="31.8117%" y="847.50"></text></g><g><title>tcache_flush_cache (2 samples, 0.13%)</title><rect x="31.5617%" y="821" width="0.1312%" height="15" fill="rgb(249,192,27)" fg:x="481" fg:w="2"/><text x="31.8117%" y="831.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.13%)</title><rect x="31.5617%" y="805" width="0.1312%" height="15" fill="rgb(208,204,44)" fg:x="481" fg:w="2"/><text x="31.8117%" y="815.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.13%)</title><rect x="31.5617%" y="789" width="0.1312%" height="15" fill="rgb(208,93,54)" fg:x="481" fg:w="2"/><text x="31.8117%" y="799.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.13%)</title><rect x="31.5617%" y="773" width="0.1312%" height="15" fill="rgb(242,1,31)" fg:x="481" fg:w="2"/><text x="31.8117%" y="783.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.07%)</title><rect x="31.6273%" y="757" width="0.0656%" height="15" fill="rgb(241,83,25)" fg:x="482" fg:w="1"/><text x="31.8773%" y="767.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.07%)</title><rect x="31.6273%" y="741" width="0.0656%" height="15" fill="rgb(205,169,50)" fg:x="482" fg:w="1"/><text x="31.8773%" y="751.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.07%)</title><rect x="31.6273%" y="725" width="0.0656%" height="15" fill="rgb(239,186,37)" fg:x="482" fg:w="1"/><text x="31.8773%" y="735.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.07%)</title><rect x="31.6273%" y="709" width="0.0656%" height="15" fill="rgb(205,221,10)" fg:x="482" fg:w="1"/><text x="31.8773%" y="719.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.07%)</title><rect x="31.6273%" y="693" width="0.0656%" height="15" fill="rgb(218,196,15)" fg:x="482" fg:w="1"/><text x="31.8773%" y="703.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.07%)</title><rect x="31.6273%" y="677" width="0.0656%" height="15" fill="rgb(218,196,35)" fg:x="482" fg:w="1"/><text x="31.8773%" y="687.50"></text></g><g><title>core::ptr::drop_in_place::&lt;rustc_codegen_ssa::back::write::spawn_work::{closure#0}::Bomb&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;&gt; (1 samples, 0.07%)</title><rect x="31.6929%" y="789" width="0.0656%" height="15" fill="rgb(233,63,24)" fg:x="483" fg:w="1"/><text x="31.9429%" y="799.50"></text></g><g><title>&lt;rustc_codegen_ssa::back::write::spawn_work::{closure#0}::Bomb&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="31.6929%" y="773" width="0.0656%" height="15" fill="rgb(225,8,4)" fg:x="483" fg:w="1"/><text x="31.9429%" y="783.50"></text></g><g><title>&lt;std::sync::mpmc::Sender&lt;alloc::boxed::Box&lt;dyn core::any::Any + core::marker::Send&gt;&gt;&gt;::send (1 samples, 0.07%)</title><rect x="31.6929%" y="757" width="0.0656%" height="15" fill="rgb(234,105,35)" fg:x="483" fg:w="1"/><text x="31.9429%" y="767.50"></text></g><g><title>&lt;std::sync::mpmc::list::Channel&lt;alloc::boxed::Box&lt;dyn core::any::Any + core::marker::Send&gt;&gt;&gt;::send (1 samples, 0.07%)</title><rect x="31.6929%" y="741" width="0.0656%" height="15" fill="rgb(236,21,32)" fg:x="483" fg:w="1"/><text x="31.9429%" y="751.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (1 samples, 0.07%)</title><rect x="31.6929%" y="725" width="0.0656%" height="15" fill="rgb(228,109,6)" fg:x="483" fg:w="1"/><text x="31.9429%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.07%)</title><rect x="31.6929%" y="709" width="0.0656%" height="15" fill="rgb(229,215,31)" fg:x="483" fg:w="1"/><text x="31.9429%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.07%)</title><rect x="31.6929%" y="693" width="0.0656%" height="15" fill="rgb(221,52,54)" fg:x="483" fg:w="1"/><text x="31.9429%" y="703.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.07%)</title><rect x="31.6929%" y="677" width="0.0656%" height="15" fill="rgb(252,129,43)" fg:x="483" fg:w="1"/><text x="31.9429%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.07%)</title><rect x="31.6929%" y="661" width="0.0656%" height="15" fill="rgb(248,183,27)" fg:x="483" fg:w="1"/><text x="31.9429%" y="671.50"></text></g><g><title>&lt;rustc_codegen_ssa::ModuleCodegen&lt;rustc_codegen_llvm::ModuleLlvm&gt;&gt;::into_compiled_module (1 samples, 0.07%)</title><rect x="31.7585%" y="741" width="0.0656%" height="15" fill="rgb(250,0,22)" fg:x="484" fg:w="1"/><text x="32.0085%" y="751.50"></text></g><g><title>llvm::X86TargetMachine::~X86TargetMachine (1 samples, 0.07%)</title><rect x="31.7585%" y="725" width="0.0656%" height="15" fill="rgb(213,166,10)" fg:x="484" fg:w="1"/><text x="32.0085%" y="735.50"></text></g><g><title>llvm::X86Subtarget::~X86Subtarget (1 samples, 0.07%)</title><rect x="31.7585%" y="709" width="0.0656%" height="15" fill="rgb(207,163,36)" fg:x="484" fg:w="1"/><text x="32.0085%" y="719.50"></text></g><g><title>llvm::X86LegalizerInfo::~X86LegalizerInfo (1 samples, 0.07%)</title><rect x="31.7585%" y="693" width="0.0656%" height="15" fill="rgb(208,122,22)" fg:x="484" fg:w="1"/><text x="32.0085%" y="703.50"></text></g><g><title>llvm::LegacyLegalizerInfo::~LegacyLegalizerInfo (1 samples, 0.07%)</title><rect x="31.7585%" y="677" width="0.0656%" height="15" fill="rgb(207,104,49)" fg:x="484" fg:w="1"/><text x="32.0085%" y="687.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="31.7585%" y="661" width="0.0656%" height="15" fill="rgb(248,211,50)" fg:x="484" fg:w="1"/><text x="32.0085%" y="671.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="31.7585%" y="645" width="0.0656%" height="15" fill="rgb(217,13,45)" fg:x="484" fg:w="1"/><text x="32.0085%" y="655.50"></text></g><g><title>sz_index2size (1 samples, 0.07%)</title><rect x="31.7585%" y="629" width="0.0656%" height="15" fill="rgb(211,216,49)" fg:x="484" fg:w="1"/><text x="32.0085%" y="639.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.07%)</title><rect x="31.7585%" y="613" width="0.0656%" height="15" fill="rgb(221,58,53)" fg:x="484" fg:w="1"/><text x="32.0085%" y="623.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.07%)</title><rect x="31.7585%" y="597" width="0.0656%" height="15" fill="rgb(220,112,41)" fg:x="484" fg:w="1"/><text x="32.0085%" y="607.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="31.8241%" y="693" width="0.0656%" height="15" fill="rgb(236,38,28)" fg:x="485" fg:w="1"/><text x="32.0741%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addIRPasses (1 samples, 0.07%)</title><rect x="31.8241%" y="677" width="0.0656%" height="15" fill="rgb(227,195,22)" fg:x="485" fg:w="1"/><text x="32.0741%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="31.8241%" y="661" width="0.0656%" height="15" fill="rgb(214,55,33)" fg:x="485" fg:w="1"/><text x="32.0741%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="31.8241%" y="645" width="0.0656%" height="15" fill="rgb(248,80,13)" fg:x="485" fg:w="1"/><text x="32.0741%" y="655.50"></text></g><g><title>llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="31.8241%" y="629" width="0.0656%" height="15" fill="rgb(238,52,6)" fg:x="485" fg:w="1"/><text x="32.0741%" y="639.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="31.8898%" y="661" width="0.0656%" height="15" fill="rgb(224,198,47)" fg:x="486" fg:w="1"/><text x="32.1398%" y="671.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="31.8898%" y="645" width="0.0656%" height="15" fill="rgb(233,171,20)" fg:x="486" fg:w="1"/><text x="32.1398%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="31.8898%" y="629" width="0.0656%" height="15" fill="rgb(241,30,25)" fg:x="486" fg:w="1"/><text x="32.1398%" y="639.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (7 samples, 0.46%)</title><rect x="31.8241%" y="709" width="0.4593%" height="15" fill="rgb(207,171,38)" fg:x="485" fg:w="7"/><text x="32.0741%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (6 samples, 0.39%)</title><rect x="31.8898%" y="693" width="0.3937%" height="15" fill="rgb(234,70,1)" fg:x="486" fg:w="6"/><text x="32.1398%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (6 samples, 0.39%)</title><rect x="31.8898%" y="677" width="0.3937%" height="15" fill="rgb(232,178,18)" fg:x="486" fg:w="6"/><text x="32.1398%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (5 samples, 0.33%)</title><rect x="31.9554%" y="661" width="0.3281%" height="15" fill="rgb(241,78,40)" fg:x="487" fg:w="5"/><text x="32.2054%" y="671.50"></text></g><g><title>llvm::Pass::getPassName (4 samples, 0.26%)</title><rect x="32.0210%" y="645" width="0.2625%" height="15" fill="rgb(222,35,25)" fg:x="488" fg:w="4"/><text x="32.2710%" y="655.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="32.2835%" y="693" width="0.0656%" height="15" fill="rgb(207,92,16)" fg:x="492" fg:w="1"/><text x="32.5335%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="32.2835%" y="677" width="0.0656%" height="15" fill="rgb(216,59,51)" fg:x="492" fg:w="1"/><text x="32.5335%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (1 samples, 0.07%)</title><rect x="32.2835%" y="661" width="0.0656%" height="15" fill="rgb(213,80,28)" fg:x="492" fg:w="1"/><text x="32.5335%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (1 samples, 0.07%)</title><rect x="32.2835%" y="645" width="0.0656%" height="15" fill="rgb(220,93,7)" fg:x="492" fg:w="1"/><text x="32.5335%" y="655.50"></text></g><g><title>llvm::MachineFunction::init (1 samples, 0.07%)</title><rect x="32.4803%" y="677" width="0.0656%" height="15" fill="rgb(225,24,44)" fg:x="495" fg:w="1"/><text x="32.7303%" y="687.50"></text></g><g><title>llvm::MachineRegisterInfo::MachineRegisterInfo (1 samples, 0.07%)</title><rect x="32.4803%" y="661" width="0.0656%" height="15" fill="rgb(243,74,40)" fg:x="495" fg:w="1"/><text x="32.7303%" y="671.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="32.4803%" y="645" width="0.0656%" height="15" fill="rgb(228,39,7)" fg:x="495" fg:w="1"/><text x="32.7303%" y="655.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="32.4803%" y="629" width="0.0656%" height="15" fill="rgb(227,79,8)" fg:x="495" fg:w="1"/><text x="32.7303%" y="639.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="32.4803%" y="613" width="0.0656%" height="15" fill="rgb(236,58,11)" fg:x="495" fg:w="1"/><text x="32.7303%" y="623.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.07%)</title><rect x="32.4803%" y="597" width="0.0656%" height="15" fill="rgb(249,63,35)" fg:x="495" fg:w="1"/><text x="32.7303%" y="607.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.07%)</title><rect x="32.4803%" y="581" width="0.0656%" height="15" fill="rgb(252,114,16)" fg:x="495" fg:w="1"/><text x="32.7303%" y="591.50"></text></g><g><title>llvm::RegisterClassInfo::runOnMachineFunction (1 samples, 0.07%)</title><rect x="32.5459%" y="677" width="0.0656%" height="15" fill="rgb(254,151,24)" fg:x="496" fg:w="1"/><text x="32.7959%" y="687.50"></text></g><g><title>[libc.so.6] (17 samples, 1.12%)</title><rect x="31.5617%" y="885" width="1.1155%" height="15" fill="rgb(253,54,39)" fg:x="481" fg:w="17"/><text x="31.8117%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.98%)</title><rect x="31.6929%" y="869" width="0.9843%" height="15" fill="rgb(243,25,45)" fg:x="483" fg:w="15"/><text x="31.9429%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="31.6929%" y="853" width="0.9843%" height="15" fill="rgb(234,134,9)" fg:x="483" fg:w="15"/><text x="31.9429%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="31.6929%" y="837" width="0.9843%" height="15" fill="rgb(227,166,31)" fg:x="483" fg:w="15"/><text x="31.9429%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (15 samples, 0.98%)</title><rect x="31.6929%" y="821" width="0.9843%" height="15" fill="rgb(245,143,41)" fg:x="483" fg:w="15"/><text x="31.9429%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (15 samples, 0.98%)</title><rect x="31.6929%" y="805" width="0.9843%" height="15" fill="rgb(238,181,32)" fg:x="483" fg:w="15"/><text x="31.9429%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (14 samples, 0.92%)</title><rect x="31.7585%" y="789" width="0.9186%" height="15" fill="rgb(224,113,18)" fg:x="484" fg:w="14"/><text x="32.0085%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (14 samples, 0.92%)</title><rect x="31.7585%" y="773" width="0.9186%" height="15" fill="rgb(240,229,28)" fg:x="484" fg:w="14"/><text x="32.0085%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (14 samples, 0.92%)</title><rect x="31.7585%" y="757" width="0.9186%" height="15" fill="rgb(250,185,3)" fg:x="484" fg:w="14"/><text x="32.0085%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (13 samples, 0.85%)</title><rect x="31.8241%" y="741" width="0.8530%" height="15" fill="rgb(212,59,25)" fg:x="485" fg:w="13"/><text x="32.0741%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (13 samples, 0.85%)</title><rect x="31.8241%" y="725" width="0.8530%" height="15" fill="rgb(221,87,20)" fg:x="485" fg:w="13"/><text x="32.0741%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (6 samples, 0.39%)</title><rect x="32.2835%" y="709" width="0.3937%" height="15" fill="rgb(213,74,28)" fg:x="492" fg:w="6"/><text x="32.5335%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (5 samples, 0.33%)</title><rect x="32.3491%" y="693" width="0.3281%" height="15" fill="rgb(224,132,34)" fg:x="493" fg:w="5"/><text x="32.5991%" y="703.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="32.6115%" y="677" width="0.0656%" height="15" fill="rgb(222,101,24)" fg:x="497" fg:w="1"/><text x="32.8615%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="32.6115%" y="661" width="0.0656%" height="15" fill="rgb(254,142,4)" fg:x="497" fg:w="1"/><text x="32.8615%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.07%)</title><rect x="32.6115%" y="645" width="0.0656%" height="15" fill="rgb(230,229,49)" fg:x="497" fg:w="1"/><text x="32.8615%" y="655.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="32.6115%" y="629" width="0.0656%" height="15" fill="rgb(238,70,47)" fg:x="497" fg:w="1"/><text x="32.8615%" y="639.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="32.6115%" y="613" width="0.0656%" height="15" fill="rgb(231,160,17)" fg:x="497" fg:w="1"/><text x="32.8615%" y="623.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="32.6115%" y="597" width="0.0656%" height="15" fill="rgb(218,68,53)" fg:x="497" fg:w="1"/><text x="32.8615%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="32.6115%" y="581" width="0.0656%" height="15" fill="rgb(236,111,10)" fg:x="497" fg:w="1"/><text x="32.8615%" y="591.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="32.6115%" y="565" width="0.0656%" height="15" fill="rgb(224,34,41)" fg:x="497" fg:w="1"/><text x="32.8615%" y="575.50"></text></g><g><title>opt_542ux6b98qt (25 samples, 1.64%)</title><rect x="31.3648%" y="901" width="1.6404%" height="15" fill="rgb(241,118,19)" fg:x="478" fg:w="25"/><text x="31.6148%" y="911.50"></text></g><g><title>__munmap (5 samples, 0.33%)</title><rect x="32.6772%" y="885" width="0.3281%" height="15" fill="rgb(238,129,25)" fg:x="498" fg:w="5"/><text x="32.9272%" y="895.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="33.0709%" y="709" width="0.0656%" height="15" fill="rgb(238,22,31)" fg:x="504" fg:w="1"/><text x="33.3209%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="33.0709%" y="693" width="0.0656%" height="15" fill="rgb(222,174,48)" fg:x="504" fg:w="1"/><text x="33.3209%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addISelPrepare (1 samples, 0.07%)</title><rect x="33.0709%" y="677" width="0.0656%" height="15" fill="rgb(206,152,40)" fg:x="504" fg:w="1"/><text x="33.3209%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="33.0709%" y="661" width="0.0656%" height="15" fill="rgb(218,99,54)" fg:x="504" fg:w="1"/><text x="33.3209%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="33.0709%" y="645" width="0.0656%" height="15" fill="rgb(220,174,26)" fg:x="504" fg:w="1"/><text x="33.3209%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.07%)</title><rect x="33.0709%" y="629" width="0.0656%" height="15" fill="rgb(245,116,9)" fg:x="504" fg:w="1"/><text x="33.3209%" y="639.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="33.1365%" y="677" width="0.0656%" height="15" fill="rgb(209,72,35)" fg:x="505" fg:w="1"/><text x="33.3865%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="33.1365%" y="661" width="0.0656%" height="15" fill="rgb(226,126,21)" fg:x="505" fg:w="1"/><text x="33.3865%" y="671.50"></text></g><g><title>llvm::LLVMContext::diagnose (1 samples, 0.07%)</title><rect x="33.1365%" y="645" width="0.0656%" height="15" fill="rgb(227,192,1)" fg:x="505" fg:w="1"/><text x="33.3865%" y="655.50"></text></g><g><title>LLVMRustContextConfigureDiagnosticHandler::RustDiagnosticHandler::handleDiagnostics (1 samples, 0.07%)</title><rect x="33.1365%" y="629" width="0.0656%" height="15" fill="rgb(237,180,29)" fg:x="505" fg:w="1"/><text x="33.3865%" y="639.50"></text></g><g><title>rustc_codegen_llvm::back::write::diagnostic_handler (1 samples, 0.07%)</title><rect x="33.1365%" y="613" width="0.0656%" height="15" fill="rgb(230,197,35)" fg:x="505" fg:w="1"/><text x="33.3865%" y="623.50"></text></g><g><title>[libc.so.6] (4 samples, 0.26%)</title><rect x="33.0052%" y="885" width="0.2625%" height="15" fill="rgb(246,193,31)" fg:x="503" fg:w="4"/><text x="33.2552%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.20%)</title><rect x="33.0709%" y="869" width="0.1969%" height="15" fill="rgb(241,36,4)" fg:x="504" fg:w="3"/><text x="33.3209%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.20%)</title><rect x="33.0709%" y="853" width="0.1969%" height="15" fill="rgb(241,130,17)" fg:x="504" fg:w="3"/><text x="33.3209%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.20%)</title><rect x="33.0709%" y="837" width="0.1969%" height="15" fill="rgb(206,137,32)" fg:x="504" fg:w="3"/><text x="33.3209%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (3 samples, 0.20%)</title><rect x="33.0709%" y="821" width="0.1969%" height="15" fill="rgb(237,228,51)" fg:x="504" fg:w="3"/><text x="33.3209%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (3 samples, 0.20%)</title><rect x="33.0709%" y="805" width="0.1969%" height="15" fill="rgb(243,6,42)" fg:x="504" fg:w="3"/><text x="33.3209%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (3 samples, 0.20%)</title><rect x="33.0709%" y="789" width="0.1969%" height="15" fill="rgb(251,74,28)" fg:x="504" fg:w="3"/><text x="33.3209%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (3 samples, 0.20%)</title><rect x="33.0709%" y="773" width="0.1969%" height="15" fill="rgb(218,20,49)" fg:x="504" fg:w="3"/><text x="33.3209%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (3 samples, 0.20%)</title><rect x="33.0709%" y="757" width="0.1969%" height="15" fill="rgb(238,28,14)" fg:x="504" fg:w="3"/><text x="33.3209%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (3 samples, 0.20%)</title><rect x="33.0709%" y="741" width="0.1969%" height="15" fill="rgb(229,40,46)" fg:x="504" fg:w="3"/><text x="33.3209%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (3 samples, 0.20%)</title><rect x="33.0709%" y="725" width="0.1969%" height="15" fill="rgb(244,195,20)" fg:x="504" fg:w="3"/><text x="33.3209%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (2 samples, 0.13%)</title><rect x="33.1365%" y="709" width="0.1312%" height="15" fill="rgb(253,56,35)" fg:x="505" fg:w="2"/><text x="33.3865%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.13%)</title><rect x="33.1365%" y="693" width="0.1312%" height="15" fill="rgb(210,149,44)" fg:x="505" fg:w="2"/><text x="33.3865%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="33.2021%" y="677" width="0.0656%" height="15" fill="rgb(240,135,12)" fg:x="506" fg:w="1"/><text x="33.4521%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="33.2021%" y="661" width="0.0656%" height="15" fill="rgb(251,24,50)" fg:x="506" fg:w="1"/><text x="33.4521%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="33.2021%" y="645" width="0.0656%" height="15" fill="rgb(243,200,47)" fg:x="506" fg:w="1"/><text x="33.4521%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="33.2021%" y="629" width="0.0656%" height="15" fill="rgb(224,166,26)" fg:x="506" fg:w="1"/><text x="33.4521%" y="639.50"></text></g><g><title>opt_57tsez9dx9v (5 samples, 0.33%)</title><rect x="33.0052%" y="901" width="0.3281%" height="15" fill="rgb(233,0,47)" fg:x="503" fg:w="5"/><text x="33.2552%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="33.2677%" y="885" width="0.0656%" height="15" fill="rgb(253,80,5)" fg:x="507" fg:w="1"/><text x="33.5177%" y="895.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::~AnalysisManager (1 samples, 0.07%)</title><rect x="33.2677%" y="869" width="0.0656%" height="15" fill="rgb(214,133,25)" fg:x="507" fg:w="1"/><text x="33.5177%" y="879.50"></text></g><g><title>&lt;rustc_codegen_llvm::back::write::DiagnosticHandlers&gt;::new (1 samples, 0.07%)</title><rect x="33.3333%" y="757" width="0.0656%" height="15" fill="rgb(209,27,14)" fg:x="508" fg:w="1"/><text x="33.5833%" y="767.50"></text></g><g><title>LLVMRustContextGetDiagnosticHandler (1 samples, 0.07%)</title><rect x="33.3333%" y="741" width="0.0656%" height="15" fill="rgb(219,102,51)" fg:x="508" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>llvm::LLVMContext::getDiagnosticHandler (1 samples, 0.07%)</title><rect x="33.3333%" y="725" width="0.0656%" height="15" fill="rgb(237,18,16)" fg:x="508" fg:w="1"/><text x="33.5833%" y="735.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (2 samples, 0.13%)</title><rect x="33.3333%" y="773" width="0.1312%" height="15" fill="rgb(241,85,17)" fg:x="508" fg:w="2"/><text x="33.5833%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (1 samples, 0.07%)</title><rect x="33.3990%" y="757" width="0.0656%" height="15" fill="rgb(236,90,42)" fg:x="509" fg:w="1"/><text x="33.6490%" y="767.50"></text></g><g><title>LLVMRustOptimize (1 samples, 0.07%)</title><rect x="33.3990%" y="741" width="0.0656%" height="15" fill="rgb(249,57,21)" fg:x="509" fg:w="1"/><text x="33.6490%" y="751.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="33.4646%" y="709" width="0.0656%" height="15" fill="rgb(243,12,36)" fg:x="510" fg:w="1"/><text x="33.7146%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="33.4646%" y="693" width="0.0656%" height="15" fill="rgb(253,128,47)" fg:x="510" fg:w="1"/><text x="33.7146%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addFastRegAlloc (1 samples, 0.07%)</title><rect x="33.4646%" y="677" width="0.0656%" height="15" fill="rgb(207,33,20)" fg:x="510" fg:w="1"/><text x="33.7146%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="33.4646%" y="661" width="0.0656%" height="15" fill="rgb(233,215,35)" fg:x="510" fg:w="1"/><text x="33.7146%" y="671.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="33.4646%" y="645" width="0.0656%" height="15" fill="rgb(249,188,52)" fg:x="510" fg:w="1"/><text x="33.7146%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="33.4646%" y="629" width="0.0656%" height="15" fill="rgb(225,12,32)" fg:x="510" fg:w="1"/><text x="33.7146%" y="639.50"></text></g><g><title>llvm::PMTopLevelManager::AUFoldingSetNode::AUFoldingSetNode (1 samples, 0.07%)</title><rect x="33.4646%" y="613" width="0.0656%" height="15" fill="rgb(247,98,14)" fg:x="510" fg:w="1"/><text x="33.7146%" y="623.50"></text></g><g><title>llvm::SmallVectorBase&lt;unsigned int&gt;::grow_pod (1 samples, 0.07%)</title><rect x="33.4646%" y="597" width="0.0656%" height="15" fill="rgb(247,219,48)" fg:x="510" fg:w="1"/><text x="33.7146%" y="607.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="33.4646%" y="581" width="0.0656%" height="15" fill="rgb(253,60,48)" fg:x="510" fg:w="1"/><text x="33.7146%" y="591.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="33.4646%" y="565" width="0.0656%" height="15" fill="rgb(245,15,52)" fg:x="510" fg:w="1"/><text x="33.7146%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="33.4646%" y="549" width="0.0656%" height="15" fill="rgb(220,133,28)" fg:x="510" fg:w="1"/><text x="33.7146%" y="559.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="33.4646%" y="533" width="0.0656%" height="15" fill="rgb(217,180,4)" fg:x="510" fg:w="1"/><text x="33.7146%" y="543.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="33.5302%" y="693" width="0.0656%" height="15" fill="rgb(251,24,1)" fg:x="511" fg:w="1"/><text x="33.7802%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="33.5302%" y="677" width="0.0656%" height="15" fill="rgb(212,185,49)" fg:x="511" fg:w="1"/><text x="33.7802%" y="687.50"></text></g><g><title>llvm::MCELFStreamer::finishImpl (1 samples, 0.07%)</title><rect x="33.5302%" y="661" width="0.0656%" height="15" fill="rgb(215,175,22)" fg:x="511" fg:w="1"/><text x="33.7802%" y="671.50"></text></g><g><title>llvm::MCObjectStreamer::finishImpl (1 samples, 0.07%)</title><rect x="33.5302%" y="645" width="0.0656%" height="15" fill="rgb(250,205,14)" fg:x="511" fg:w="1"/><text x="33.7802%" y="655.50"></text></g><g><title>llvm::MCAssembler::layout (1 samples, 0.07%)</title><rect x="33.5302%" y="629" width="0.0656%" height="15" fill="rgb(225,211,22)" fg:x="511" fg:w="1"/><text x="33.7802%" y="639.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionHeader (1 samples, 0.07%)</title><rect x="33.9895%" y="645" width="0.0656%" height="15" fill="rgb(251,179,42)" fg:x="518" fg:w="1"/><text x="34.2395%" y="655.50"></text></g><g><title>llvm::DebugHandlerBase::beginFunction (1 samples, 0.07%)</title><rect x="33.9895%" y="629" width="0.0656%" height="15" fill="rgb(208,216,51)" fg:x="518" fg:w="1"/><text x="34.2395%" y="639.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (2 samples, 0.13%)</title><rect x="33.9895%" y="661" width="0.1312%" height="15" fill="rgb(235,36,11)" fg:x="518" fg:w="2"/><text x="34.2395%" y="671.50"></text></g><g><title>llvm::DebugHandlerBase::endFunction (1 samples, 0.07%)</title><rect x="34.0551%" y="645" width="0.0656%" height="15" fill="rgb(213,189,28)" fg:x="519" fg:w="1"/><text x="34.3051%" y="655.50"></text></g><g><title>llvm::DwarfDebug::endFunctionImpl (1 samples, 0.07%)</title><rect x="34.0551%" y="629" width="0.0656%" height="15" fill="rgb(227,203,42)" fg:x="519" fg:w="1"/><text x="34.3051%" y="639.50"></text></g><g><title>llvm::DwarfCompileUnit::constructAbstractSubprogramScopeDIE (1 samples, 0.07%)</title><rect x="34.0551%" y="613" width="0.0656%" height="15" fill="rgb(244,72,36)" fg:x="519" fg:w="1"/><text x="34.3051%" y="623.50"></text></g><g><title>llvm::DwarfCompileUnit::addGlobalName (1 samples, 0.07%)</title><rect x="34.0551%" y="597" width="0.0656%" height="15" fill="rgb(213,53,17)" fg:x="519" fg:w="1"/><text x="34.3051%" y="607.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (3 samples, 0.20%)</title><rect x="33.9895%" y="677" width="0.1969%" height="15" fill="rgb(207,167,3)" fg:x="518" fg:w="3"/><text x="34.2395%" y="687.50"></text></g><g><title>llvm::Module::getModuleFlag (1 samples, 0.07%)</title><rect x="34.1207%" y="661" width="0.0656%" height="15" fill="rgb(216,98,30)" fg:x="520" fg:w="1"/><text x="34.3707%" y="671.50"></text></g><g><title>[libc.so.6] (14 samples, 0.92%)</title><rect x="33.3333%" y="885" width="0.9186%" height="15" fill="rgb(236,123,15)" fg:x="508" fg:w="14"/><text x="33.5833%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.92%)</title><rect x="33.3333%" y="869" width="0.9186%" height="15" fill="rgb(248,81,50)" fg:x="508" fg:w="14"/><text x="33.5833%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.92%)</title><rect x="33.3333%" y="853" width="0.9186%" height="15" fill="rgb(214,120,4)" fg:x="508" fg:w="14"/><text x="33.5833%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.92%)</title><rect x="33.3333%" y="837" width="0.9186%" height="15" fill="rgb(208,179,34)" fg:x="508" fg:w="14"/><text x="33.5833%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (14 samples, 0.92%)</title><rect x="33.3333%" y="821" width="0.9186%" height="15" fill="rgb(227,140,7)" fg:x="508" fg:w="14"/><text x="33.5833%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (14 samples, 0.92%)</title><rect x="33.3333%" y="805" width="0.9186%" height="15" fill="rgb(214,22,6)" fg:x="508" fg:w="14"/><text x="33.5833%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (14 samples, 0.92%)</title><rect x="33.3333%" y="789" width="0.9186%" height="15" fill="rgb(207,137,27)" fg:x="508" fg:w="14"/><text x="33.5833%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="33.4646%" y="773" width="0.7874%" height="15" fill="rgb(210,8,46)" fg:x="510" fg:w="12"/><text x="33.7146%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (12 samples, 0.79%)</title><rect x="33.4646%" y="757" width="0.7874%" height="15" fill="rgb(240,16,54)" fg:x="510" fg:w="12"/><text x="33.7146%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (12 samples, 0.79%)</title><rect x="33.4646%" y="741" width="0.7874%" height="15" fill="rgb(211,209,29)" fg:x="510" fg:w="12"/><text x="33.7146%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (12 samples, 0.79%)</title><rect x="33.4646%" y="725" width="0.7874%" height="15" fill="rgb(226,228,24)" fg:x="510" fg:w="12"/><text x="33.7146%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (11 samples, 0.72%)</title><rect x="33.5302%" y="709" width="0.7218%" height="15" fill="rgb(222,84,9)" fg:x="511" fg:w="11"/><text x="33.7802%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (10 samples, 0.66%)</title><rect x="33.5958%" y="693" width="0.6562%" height="15" fill="rgb(234,203,30)" fg:x="512" fg:w="10"/><text x="33.8458%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="34.1864%" y="677" width="0.0656%" height="15" fill="rgb(238,109,14)" fg:x="521" fg:w="1"/><text x="34.4364%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="34.1864%" y="661" width="0.0656%" height="15" fill="rgb(233,206,34)" fg:x="521" fg:w="1"/><text x="34.4364%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="34.1864%" y="645" width="0.0656%" height="15" fill="rgb(220,167,47)" fg:x="521" fg:w="1"/><text x="34.4364%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="34.1864%" y="629" width="0.0656%" height="15" fill="rgb(238,105,10)" fg:x="521" fg:w="1"/><text x="34.4364%" y="639.50"></text></g><g><title>opt_5e00h5d4bgg (15 samples, 0.98%)</title><rect x="33.3333%" y="901" width="0.9843%" height="15" fill="rgb(213,227,17)" fg:x="508" fg:w="15"/><text x="33.5833%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="34.2520%" y="885" width="0.0656%" height="15" fill="rgb(217,132,38)" fg:x="522" fg:w="1"/><text x="34.5020%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="34.2520%" y="869" width="0.0656%" height="15" fill="rgb(242,146,4)" fg:x="522" fg:w="1"/><text x="34.5020%" y="879.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.07%)</title><rect x="34.2520%" y="853" width="0.0656%" height="15" fill="rgb(212,61,9)" fg:x="522" fg:w="1"/><text x="34.5020%" y="863.50"></text></g><g><title>llvm::PassBuilder::registerFunctionAnalyses (1 samples, 0.07%)</title><rect x="34.3176%" y="725" width="0.0656%" height="15" fill="rgb(247,126,22)" fg:x="523" fg:w="1"/><text x="34.5676%" y="735.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="34.3176%" y="709" width="0.0656%" height="15" fill="rgb(220,196,2)" fg:x="523" fg:w="1"/><text x="34.5676%" y="719.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="34.3176%" y="693" width="0.0656%" height="15" fill="rgb(208,46,4)" fg:x="523" fg:w="1"/><text x="34.5676%" y="703.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (2 samples, 0.13%)</title><rect x="34.3176%" y="773" width="0.1312%" height="15" fill="rgb(252,104,46)" fg:x="523" fg:w="2"/><text x="34.5676%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (2 samples, 0.13%)</title><rect x="34.3176%" y="757" width="0.1312%" height="15" fill="rgb(237,152,48)" fg:x="523" fg:w="2"/><text x="34.5676%" y="767.50"></text></g><g><title>LLVMRustOptimize (2 samples, 0.13%)</title><rect x="34.3176%" y="741" width="0.1312%" height="15" fill="rgb(221,59,37)" fg:x="523" fg:w="2"/><text x="34.5676%" y="751.50"></text></g><g><title>llvm::StandardInstrumentations::registerCallbacks (1 samples, 0.07%)</title><rect x="34.3832%" y="725" width="0.0656%" height="15" fill="rgb(209,202,51)" fg:x="524" fg:w="1"/><text x="34.6332%" y="735.50"></text></g><g><title>llvm::OptPassGateInstrumentation::registerCallbacks (1 samples, 0.07%)</title><rect x="34.3832%" y="709" width="0.0656%" height="15" fill="rgb(228,81,30)" fg:x="524" fg:w="1"/><text x="34.6332%" y="719.50"></text></g><g><title>llvm::OptBisect::isEnabled (1 samples, 0.07%)</title><rect x="34.3832%" y="693" width="0.0656%" height="15" fill="rgb(227,42,39)" fg:x="524" fg:w="1"/><text x="34.6332%" y="703.50"></text></g><g><title>llvm::FPPassManager::doInitialization (1 samples, 0.07%)</title><rect x="34.4488%" y="693" width="0.0656%" height="15" fill="rgb(221,26,2)" fg:x="525" fg:w="1"/><text x="34.6988%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (1 samples, 0.07%)</title><rect x="34.4488%" y="677" width="0.0656%" height="15" fill="rgb(254,61,31)" fg:x="525" fg:w="1"/><text x="34.6988%" y="687.50"></text></g><g><title>llvm::DwarfDebug::beginModule (1 samples, 0.07%)</title><rect x="34.4488%" y="661" width="0.0656%" height="15" fill="rgb(222,173,38)" fg:x="525" fg:w="1"/><text x="34.6988%" y="671.50"></text></g><g><title>llvm::DwarfUnit::getOrCreateTypeDIE (1 samples, 0.07%)</title><rect x="34.4488%" y="645" width="0.0656%" height="15" fill="rgb(218,50,12)" fg:x="525" fg:w="1"/><text x="34.6988%" y="655.50"></text></g><g><title>[libc.so.6] (4 samples, 0.26%)</title><rect x="34.3176%" y="885" width="0.2625%" height="15" fill="rgb(223,88,40)" fg:x="523" fg:w="4"/><text x="34.5676%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.26%)</title><rect x="34.3176%" y="869" width="0.2625%" height="15" fill="rgb(237,54,19)" fg:x="523" fg:w="4"/><text x="34.5676%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="34.3176%" y="853" width="0.2625%" height="15" fill="rgb(251,129,25)" fg:x="523" fg:w="4"/><text x="34.5676%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.26%)</title><rect x="34.3176%" y="837" width="0.2625%" height="15" fill="rgb(238,97,19)" fg:x="523" fg:w="4"/><text x="34.5676%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (4 samples, 0.26%)</title><rect x="34.3176%" y="821" width="0.2625%" height="15" fill="rgb(240,169,18)" fg:x="523" fg:w="4"/><text x="34.5676%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (4 samples, 0.26%)</title><rect x="34.3176%" y="805" width="0.2625%" height="15" fill="rgb(230,187,49)" fg:x="523" fg:w="4"/><text x="34.5676%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="34.3176%" y="789" width="0.2625%" height="15" fill="rgb(209,44,26)" fg:x="523" fg:w="4"/><text x="34.5676%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (2 samples, 0.13%)</title><rect x="34.4488%" y="773" width="0.1312%" height="15" fill="rgb(244,0,6)" fg:x="525" fg:w="2"/><text x="34.6988%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (2 samples, 0.13%)</title><rect x="34.4488%" y="757" width="0.1312%" height="15" fill="rgb(248,18,21)" fg:x="525" fg:w="2"/><text x="34.6988%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (2 samples, 0.13%)</title><rect x="34.4488%" y="741" width="0.1312%" height="15" fill="rgb(245,180,19)" fg:x="525" fg:w="2"/><text x="34.6988%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (2 samples, 0.13%)</title><rect x="34.4488%" y="725" width="0.1312%" height="15" fill="rgb(252,118,36)" fg:x="525" fg:w="2"/><text x="34.6988%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (2 samples, 0.13%)</title><rect x="34.4488%" y="709" width="0.1312%" height="15" fill="rgb(210,224,19)" fg:x="525" fg:w="2"/><text x="34.6988%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="34.5144%" y="693" width="0.0656%" height="15" fill="rgb(218,30,24)" fg:x="526" fg:w="1"/><text x="34.7644%" y="703.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="34.5144%" y="677" width="0.0656%" height="15" fill="rgb(219,75,50)" fg:x="526" fg:w="1"/><text x="34.7644%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="34.5144%" y="661" width="0.0656%" height="15" fill="rgb(234,72,50)" fg:x="526" fg:w="1"/><text x="34.7644%" y="671.50"></text></g><g><title>llvm::DebugHandlerBase::endFunction (1 samples, 0.07%)</title><rect x="34.5144%" y="645" width="0.0656%" height="15" fill="rgb(219,100,48)" fg:x="526" fg:w="1"/><text x="34.7644%" y="655.50"></text></g><g><title>llvm::DwarfDebug::endFunctionImpl (1 samples, 0.07%)</title><rect x="34.5144%" y="629" width="0.0656%" height="15" fill="rgb(253,5,41)" fg:x="526" fg:w="1"/><text x="34.7644%" y="639.50"></text></g><g><title>llvm::DwarfDebug::collectEntityInfo (1 samples, 0.07%)</title><rect x="34.5144%" y="613" width="0.0656%" height="15" fill="rgb(247,181,11)" fg:x="526" fg:w="1"/><text x="34.7644%" y="623.50"></text></g><g><title>llvm::DwarfDebug::collectVariableInfoFromMFTable (1 samples, 0.07%)</title><rect x="34.5144%" y="597" width="0.0656%" height="15" fill="rgb(222,223,25)" fg:x="526" fg:w="1"/><text x="34.7644%" y="607.50"></text></g><g><title>llvm::DwarfFile::addScopeVariable (1 samples, 0.07%)</title><rect x="34.5144%" y="581" width="0.0656%" height="15" fill="rgb(214,198,28)" fg:x="526" fg:w="1"/><text x="34.7644%" y="591.50"></text></g><g><title>llvm::DenseMap&lt;llvm::LexicalScope*, llvm::DwarfFile::ScopeVars, llvm::DenseMapInfo&lt;llvm::LexicalScope*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::LexicalScope*, llvm::DwarfFile::ScopeVars&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="34.5144%" y="565" width="0.0656%" height="15" fill="rgb(230,46,43)" fg:x="526" fg:w="1"/><text x="34.7644%" y="575.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="34.5801%" y="885" width="0.0656%" height="15" fill="rgb(233,65,53)" fg:x="527" fg:w="1"/><text x="34.8301%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="34.5801%" y="869" width="0.0656%" height="15" fill="rgb(221,121,27)" fg:x="527" fg:w="1"/><text x="34.8301%" y="879.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="34.5801%" y="853" width="0.0656%" height="15" fill="rgb(247,70,47)" fg:x="527" fg:w="1"/><text x="34.8301%" y="863.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="34.5801%" y="837" width="0.0656%" height="15" fill="rgb(228,85,35)" fg:x="527" fg:w="1"/><text x="34.8301%" y="847.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="34.5801%" y="821" width="0.0656%" height="15" fill="rgb(209,50,18)" fg:x="527" fg:w="1"/><text x="34.8301%" y="831.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="34.5801%" y="805" width="0.0656%" height="15" fill="rgb(250,19,35)" fg:x="527" fg:w="1"/><text x="34.8301%" y="815.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="34.5801%" y="789" width="0.0656%" height="15" fill="rgb(253,107,29)" fg:x="527" fg:w="1"/><text x="34.8301%" y="799.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="34.5801%" y="773" width="0.0656%" height="15" fill="rgb(252,179,29)" fg:x="527" fg:w="1"/><text x="34.8301%" y="783.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="34.5801%" y="757" width="0.0656%" height="15" fill="rgb(238,194,6)" fg:x="527" fg:w="1"/><text x="34.8301%" y="767.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="34.5801%" y="741" width="0.0656%" height="15" fill="rgb(238,164,29)" fg:x="527" fg:w="1"/><text x="34.8301%" y="751.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="34.5801%" y="725" width="0.0656%" height="15" fill="rgb(224,25,9)" fg:x="527" fg:w="1"/><text x="34.8301%" y="735.50"></text></g><g><title>extent_split_impl (1 samples, 0.07%)</title><rect x="34.5801%" y="709" width="0.0656%" height="15" fill="rgb(244,153,23)" fg:x="527" fg:w="1"/><text x="34.8301%" y="719.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.07%)</title><rect x="34.5801%" y="693" width="0.0656%" height="15" fill="rgb(212,203,14)" fg:x="527" fg:w="1"/><text x="34.8301%" y="703.50"></text></g><g><title>_rjem_je_edata_avail_first (1 samples, 0.07%)</title><rect x="34.5801%" y="677" width="0.0656%" height="15" fill="rgb(220,164,20)" fg:x="527" fg:w="1"/><text x="34.8301%" y="687.50"></text></g><g><title>ph_first (1 samples, 0.07%)</title><rect x="34.5801%" y="661" width="0.0656%" height="15" fill="rgb(222,203,48)" fg:x="527" fg:w="1"/><text x="34.8301%" y="671.50"></text></g><g><title>ph_merge_aux (1 samples, 0.07%)</title><rect x="34.5801%" y="645" width="0.0656%" height="15" fill="rgb(215,159,22)" fg:x="527" fg:w="1"/><text x="34.8301%" y="655.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.07%)</title><rect x="34.5801%" y="629" width="0.0656%" height="15" fill="rgb(216,183,47)" fg:x="527" fg:w="1"/><text x="34.8301%" y="639.50"></text></g><g><title>phn_merge (1 samples, 0.07%)</title><rect x="34.5801%" y="613" width="0.0656%" height="15" fill="rgb(229,195,25)" fg:x="527" fg:w="1"/><text x="34.8301%" y="623.50"></text></g><g><title>edata_avail_ph_cmp (1 samples, 0.07%)</title><rect x="34.5801%" y="597" width="0.0656%" height="15" fill="rgb(224,132,51)" fg:x="527" fg:w="1"/><text x="34.8301%" y="607.50"></text></g><g><title>edata_esnead_comp (1 samples, 0.07%)</title><rect x="34.5801%" y="581" width="0.0656%" height="15" fill="rgb(240,63,7)" fg:x="527" fg:w="1"/><text x="34.8301%" y="591.50"></text></g><g><title>edata_ead_comp (1 samples, 0.07%)</title><rect x="34.5801%" y="565" width="0.0656%" height="15" fill="rgb(249,182,41)" fg:x="527" fg:w="1"/><text x="34.8301%" y="575.50"></text></g><g><title>opt_9tdrhwu2i7o (6 samples, 0.39%)</title><rect x="34.3176%" y="901" width="0.3937%" height="15" fill="rgb(243,47,26)" fg:x="523" fg:w="6"/><text x="34.5676%" y="911.50"></text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="34.6457%" y="885" width="0.0656%" height="15" fill="rgb(233,48,2)" fg:x="528" fg:w="1"/><text x="34.8957%" y="895.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.13%)</title><rect x="34.7769%" y="693" width="0.1312%" height="15" fill="rgb(244,165,34)" fg:x="530" fg:w="2"/><text x="35.0269%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="34.8425%" y="677" width="0.0656%" height="15" fill="rgb(207,89,7)" fg:x="531" fg:w="1"/><text x="35.0925%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="34.8425%" y="661" width="0.0656%" height="15" fill="rgb(244,117,36)" fg:x="531" fg:w="1"/><text x="35.0925%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="34.8425%" y="645" width="0.0656%" height="15" fill="rgb(226,144,34)" fg:x="531" fg:w="1"/><text x="35.0925%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="34.8425%" y="629" width="0.0656%" height="15" fill="rgb(213,23,19)" fg:x="531" fg:w="1"/><text x="35.0925%" y="639.50"></text></g><g><title>[libc.so.6] (4 samples, 0.26%)</title><rect x="34.7113%" y="885" width="0.2625%" height="15" fill="rgb(217,75,12)" fg:x="529" fg:w="4"/><text x="34.9613%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.20%)</title><rect x="34.7769%" y="869" width="0.1969%" height="15" fill="rgb(224,159,17)" fg:x="530" fg:w="3"/><text x="35.0269%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.20%)</title><rect x="34.7769%" y="853" width="0.1969%" height="15" fill="rgb(217,118,1)" fg:x="530" fg:w="3"/><text x="35.0269%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.20%)</title><rect x="34.7769%" y="837" width="0.1969%" height="15" fill="rgb(232,180,48)" fg:x="530" fg:w="3"/><text x="35.0269%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (3 samples, 0.20%)</title><rect x="34.7769%" y="821" width="0.1969%" height="15" fill="rgb(230,27,33)" fg:x="530" fg:w="3"/><text x="35.0269%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (3 samples, 0.20%)</title><rect x="34.7769%" y="805" width="0.1969%" height="15" fill="rgb(205,31,21)" fg:x="530" fg:w="3"/><text x="35.0269%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (3 samples, 0.20%)</title><rect x="34.7769%" y="789" width="0.1969%" height="15" fill="rgb(253,59,4)" fg:x="530" fg:w="3"/><text x="35.0269%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (3 samples, 0.20%)</title><rect x="34.7769%" y="773" width="0.1969%" height="15" fill="rgb(224,201,9)" fg:x="530" fg:w="3"/><text x="35.0269%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (3 samples, 0.20%)</title><rect x="34.7769%" y="757" width="0.1969%" height="15" fill="rgb(229,206,30)" fg:x="530" fg:w="3"/><text x="35.0269%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (3 samples, 0.20%)</title><rect x="34.7769%" y="741" width="0.1969%" height="15" fill="rgb(212,67,47)" fg:x="530" fg:w="3"/><text x="35.0269%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (3 samples, 0.20%)</title><rect x="34.7769%" y="725" width="0.1969%" height="15" fill="rgb(211,96,50)" fg:x="530" fg:w="3"/><text x="35.0269%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (3 samples, 0.20%)</title><rect x="34.7769%" y="709" width="0.1969%" height="15" fill="rgb(252,114,18)" fg:x="530" fg:w="3"/><text x="35.0269%" y="719.50"></text></g><g><title>llvm::MachineModuleInfoWrapperPass::doFinalization (1 samples, 0.07%)</title><rect x="34.9081%" y="693" width="0.0656%" height="15" fill="rgb(223,58,37)" fg:x="532" fg:w="1"/><text x="35.1581%" y="703.50"></text></g><g><title>llvm::MCContext::reset (1 samples, 0.07%)</title><rect x="34.9081%" y="677" width="0.0656%" height="15" fill="rgb(237,70,4)" fg:x="532" fg:w="1"/><text x="35.1581%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt; &gt;::_M_erase (1 samples, 0.07%)</title><rect x="34.9081%" y="661" width="0.0656%" height="15" fill="rgb(244,85,46)" fg:x="532" fg:w="1"/><text x="35.1581%" y="671.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt; &gt;::_M_erase (1 samples, 0.07%)</title><rect x="34.9081%" y="645" width="0.0656%" height="15" fill="rgb(223,39,52)" fg:x="532" fg:w="1"/><text x="35.1581%" y="655.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, llvm::Function*&gt; &gt; &gt;::_M_erase (1 samples, 0.07%)</title><rect x="34.9081%" y="629" width="0.0656%" height="15" fill="rgb(218,200,14)" fg:x="532" fg:w="1"/><text x="35.1581%" y="639.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="34.9081%" y="613" width="0.0656%" height="15" fill="rgb(208,171,16)" fg:x="532" fg:w="1"/><text x="35.1581%" y="623.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="34.9081%" y="597" width="0.0656%" height="15" fill="rgb(234,200,18)" fg:x="532" fg:w="1"/><text x="35.1581%" y="607.50"></text></g><g><title>opt_lcwl7k9wuvn (5 samples, 0.33%)</title><rect x="34.7113%" y="901" width="0.3281%" height="15" fill="rgb(228,45,11)" fg:x="529" fg:w="5"/><text x="34.9613%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="34.9738%" y="885" width="0.0656%" height="15" fill="rgb(237,182,11)" fg:x="533" fg:w="1"/><text x="35.2238%" y="895.50"></text></g><g><title>llvm::LexicalScopes::initialize (1 samples, 0.07%)</title><rect x="34.9738%" y="869" width="0.0656%" height="15" fill="rgb(241,175,49)" fg:x="533" fg:w="1"/><text x="35.2238%" y="879.50"></text></g><g><title>llvm::LexicalScopes::extractLexicalScopes (1 samples, 0.07%)</title><rect x="34.9738%" y="853" width="0.0656%" height="15" fill="rgb(247,38,35)" fg:x="533" fg:w="1"/><text x="35.2238%" y="863.50"></text></g><g><title>llvm::LexicalScopes::getOrCreateAbstractScope (1 samples, 0.07%)</title><rect x="34.9738%" y="837" width="0.0656%" height="15" fill="rgb(228,39,49)" fg:x="533" fg:w="1"/><text x="35.2238%" y="847.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (1 samples, 0.07%)</title><rect x="35.0394%" y="773" width="0.0656%" height="15" fill="rgb(226,101,26)" fg:x="534" fg:w="1"/><text x="35.2894%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (1 samples, 0.07%)</title><rect x="35.0394%" y="757" width="0.0656%" height="15" fill="rgb(206,141,19)" fg:x="534" fg:w="1"/><text x="35.2894%" y="767.50"></text></g><g><title>LLVMRustOptimize (1 samples, 0.07%)</title><rect x="35.0394%" y="741" width="0.0656%" height="15" fill="rgb(211,200,13)" fg:x="534" fg:w="1"/><text x="35.2894%" y="751.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="35.0394%" y="725" width="0.0656%" height="15" fill="rgb(241,121,6)" fg:x="534" fg:w="1"/><text x="35.2894%" y="735.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (1 samples, 0.07%)</title><rect x="35.0394%" y="709" width="0.0656%" height="15" fill="rgb(234,221,29)" fg:x="534" fg:w="1"/><text x="35.2894%" y="719.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, void&gt;, llvm::detail::DenseMapPair&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, void&gt;, llvm::detail::DenseMapPair&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt;::InsertIntoBucketImpl&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt; &gt; (1 samples, 0.07%)</title><rect x="35.0394%" y="693" width="0.0656%" height="15" fill="rgb(229,136,5)" fg:x="534" fg:w="1"/><text x="35.2894%" y="703.50"></text></g><g><title>llvm::DenseMap&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, void&gt;, llvm::detail::DenseMapPair&lt;std::pair&lt;llvm::AnalysisKey*, llvm::Module*&gt;, std::_List_iterator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt;::grow (1 samples, 0.07%)</title><rect x="35.0394%" y="677" width="0.0656%" height="15" fill="rgb(238,36,11)" fg:x="534" fg:w="1"/><text x="35.2894%" y="687.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="35.0394%" y="661" width="0.0656%" height="15" fill="rgb(251,55,41)" fg:x="534" fg:w="1"/><text x="35.2894%" y="671.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="35.0394%" y="645" width="0.0656%" height="15" fill="rgb(242,34,40)" fg:x="534" fg:w="1"/><text x="35.2894%" y="655.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="35.0394%" y="629" width="0.0656%" height="15" fill="rgb(215,42,17)" fg:x="534" fg:w="1"/><text x="35.2894%" y="639.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="35.0394%" y="613" width="0.0656%" height="15" fill="rgb(207,44,46)" fg:x="534" fg:w="1"/><text x="35.2894%" y="623.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="35.0394%" y="597" width="0.0656%" height="15" fill="rgb(211,206,28)" fg:x="534" fg:w="1"/><text x="35.2894%" y="607.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="35.0394%" y="581" width="0.0656%" height="15" fill="rgb(237,167,16)" fg:x="534" fg:w="1"/><text x="35.2894%" y="591.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="35.0394%" y="565" width="0.0656%" height="15" fill="rgb(233,66,6)" fg:x="534" fg:w="1"/><text x="35.2894%" y="575.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="35.0394%" y="549" width="0.0656%" height="15" fill="rgb(246,123,29)" fg:x="534" fg:w="1"/><text x="35.2894%" y="559.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="35.0394%" y="533" width="0.0656%" height="15" fill="rgb(209,62,40)" fg:x="534" fg:w="1"/><text x="35.2894%" y="543.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="35.0394%" y="517" width="0.0656%" height="15" fill="rgb(218,4,25)" fg:x="534" fg:w="1"/><text x="35.2894%" y="527.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="35.0394%" y="501" width="0.0656%" height="15" fill="rgb(253,91,49)" fg:x="534" fg:w="1"/><text x="35.2894%" y="511.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="35.0394%" y="485" width="0.0656%" height="15" fill="rgb(228,155,29)" fg:x="534" fg:w="1"/><text x="35.2894%" y="495.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="35.0394%" y="469" width="0.0656%" height="15" fill="rgb(243,57,37)" fg:x="534" fg:w="1"/><text x="35.2894%" y="479.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="35.0394%" y="453" width="0.0656%" height="15" fill="rgb(244,167,17)" fg:x="534" fg:w="1"/><text x="35.2894%" y="463.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="35.0394%" y="437" width="0.0656%" height="15" fill="rgb(207,181,38)" fg:x="534" fg:w="1"/><text x="35.2894%" y="447.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="35.0394%" y="421" width="0.0656%" height="15" fill="rgb(211,8,23)" fg:x="534" fg:w="1"/><text x="35.2894%" y="431.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="35.0394%" y="405" width="0.0656%" height="15" fill="rgb(235,11,44)" fg:x="534" fg:w="1"/><text x="35.2894%" y="415.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.07%)</title><rect x="35.0394%" y="389" width="0.0656%" height="15" fill="rgb(248,18,52)" fg:x="534" fg:w="1"/><text x="35.2894%" y="399.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (1 samples, 0.07%)</title><rect x="35.0394%" y="373" width="0.0656%" height="15" fill="rgb(208,4,7)" fg:x="534" fg:w="1"/><text x="35.2894%" y="383.50"></text></g><g><title>spin_cpu_spinwait (1 samples, 0.07%)</title><rect x="35.0394%" y="357" width="0.0656%" height="15" fill="rgb(240,17,39)" fg:x="534" fg:w="1"/><text x="35.2894%" y="367.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.07%)</title><rect x="35.1050%" y="693" width="0.0656%" height="15" fill="rgb(207,170,3)" fg:x="535" fg:w="1"/><text x="35.3550%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="35.1050%" y="677" width="0.0656%" height="15" fill="rgb(236,100,52)" fg:x="535" fg:w="1"/><text x="35.3550%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="35.1050%" y="661" width="0.0656%" height="15" fill="rgb(246,78,51)" fg:x="535" fg:w="1"/><text x="35.3550%" y="671.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="35.1050%" y="645" width="0.0656%" height="15" fill="rgb(211,17,15)" fg:x="535" fg:w="1"/><text x="35.3550%" y="655.50"></text></g><g><title>llvm::FoldingSet&lt;llvm::PMTopLevelManager::AUFoldingSetNode&gt;::NodeEquals (1 samples, 0.07%)</title><rect x="35.1050%" y="629" width="0.0656%" height="15" fill="rgb(209,59,46)" fg:x="535" fg:w="1"/><text x="35.3550%" y="639.50"></text></g><g><title>llvm::PMTopLevelManager::AUFoldingSetNode::Profile (1 samples, 0.07%)</title><rect x="35.1050%" y="613" width="0.0656%" height="15" fill="rgb(210,92,25)" fg:x="535" fg:w="1"/><text x="35.3550%" y="623.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (2 samples, 0.13%)</title><rect x="35.1050%" y="709" width="0.1312%" height="15" fill="rgb(238,174,52)" fg:x="535" fg:w="2"/><text x="35.3550%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="35.1706%" y="693" width="0.0656%" height="15" fill="rgb(230,73,7)" fg:x="536" fg:w="1"/><text x="35.4206%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="35.1706%" y="677" width="0.0656%" height="15" fill="rgb(243,124,40)" fg:x="536" fg:w="1"/><text x="35.4206%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="35.1706%" y="661" width="0.0656%" height="15" fill="rgb(244,170,11)" fg:x="536" fg:w="1"/><text x="35.4206%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="35.1706%" y="645" width="0.0656%" height="15" fill="rgb(207,114,54)" fg:x="536" fg:w="1"/><text x="35.4206%" y="655.50"></text></g><g><title>llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="35.1706%" y="629" width="0.0656%" height="15" fill="rgb(205,42,20)" fg:x="536" fg:w="1"/><text x="35.4206%" y="639.50"></text></g><g><title>llvm::FPPassManager::doInitialization (1 samples, 0.07%)</title><rect x="35.2362%" y="693" width="0.0656%" height="15" fill="rgb(230,30,28)" fg:x="537" fg:w="1"/><text x="35.4862%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doInitialization (1 samples, 0.07%)</title><rect x="35.2362%" y="677" width="0.0656%" height="15" fill="rgb(205,73,54)" fg:x="537" fg:w="1"/><text x="35.4862%" y="687.50"></text></g><g><title>llvm::Module::getModuleFlag (1 samples, 0.07%)</title><rect x="35.2362%" y="661" width="0.0656%" height="15" fill="rgb(254,227,23)" fg:x="537" fg:w="1"/><text x="35.4862%" y="671.50"></text></g><g><title>[libc.so.6] (5 samples, 0.33%)</title><rect x="35.0394%" y="885" width="0.3281%" height="15" fill="rgb(228,202,34)" fg:x="534" fg:w="5"/><text x="35.2894%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.33%)</title><rect x="35.0394%" y="869" width="0.3281%" height="15" fill="rgb(222,225,37)" fg:x="534" fg:w="5"/><text x="35.2894%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="35.0394%" y="853" width="0.3281%" height="15" fill="rgb(221,14,54)" fg:x="534" fg:w="5"/><text x="35.2894%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.33%)</title><rect x="35.0394%" y="837" width="0.3281%" height="15" fill="rgb(254,102,2)" fg:x="534" fg:w="5"/><text x="35.2894%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (5 samples, 0.33%)</title><rect x="35.0394%" y="821" width="0.3281%" height="15" fill="rgb(232,104,17)" fg:x="534" fg:w="5"/><text x="35.2894%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="35.0394%" y="805" width="0.3281%" height="15" fill="rgb(250,220,14)" fg:x="534" fg:w="5"/><text x="35.2894%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="35.0394%" y="789" width="0.3281%" height="15" fill="rgb(241,158,9)" fg:x="534" fg:w="5"/><text x="35.2894%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (4 samples, 0.26%)</title><rect x="35.1050%" y="773" width="0.2625%" height="15" fill="rgb(246,9,43)" fg:x="535" fg:w="4"/><text x="35.3550%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (4 samples, 0.26%)</title><rect x="35.1050%" y="757" width="0.2625%" height="15" fill="rgb(206,73,33)" fg:x="535" fg:w="4"/><text x="35.3550%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (4 samples, 0.26%)</title><rect x="35.1050%" y="741" width="0.2625%" height="15" fill="rgb(222,79,8)" fg:x="535" fg:w="4"/><text x="35.3550%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.26%)</title><rect x="35.1050%" y="725" width="0.2625%" height="15" fill="rgb(234,8,54)" fg:x="535" fg:w="4"/><text x="35.3550%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (2 samples, 0.13%)</title><rect x="35.2362%" y="709" width="0.1312%" height="15" fill="rgb(209,134,38)" fg:x="537" fg:w="2"/><text x="35.4862%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="35.3018%" y="693" width="0.0656%" height="15" fill="rgb(230,127,29)" fg:x="538" fg:w="1"/><text x="35.5518%" y="703.50"></text></g><g><title>opt_p4gewdep6ya (6 samples, 0.39%)</title><rect x="35.0394%" y="901" width="0.3937%" height="15" fill="rgb(242,44,41)" fg:x="534" fg:w="6"/><text x="35.2894%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3675%" y="885" width="0.0656%" height="15" fill="rgb(222,56,43)" fg:x="539" fg:w="1"/><text x="35.6175%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="35.3675%" y="869" width="0.0656%" height="15" fill="rgb(238,39,47)" fg:x="539" fg:w="1"/><text x="35.6175%" y="879.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (1 samples, 0.07%)</title><rect x="35.4331%" y="773" width="0.0656%" height="15" fill="rgb(226,79,43)" fg:x="540" fg:w="1"/><text x="35.6831%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (1 samples, 0.07%)</title><rect x="35.4331%" y="757" width="0.0656%" height="15" fill="rgb(242,105,53)" fg:x="540" fg:w="1"/><text x="35.6831%" y="767.50"></text></g><g><title>LLVMRustOptimize (1 samples, 0.07%)</title><rect x="35.4331%" y="741" width="0.0656%" height="15" fill="rgb(251,132,46)" fg:x="540" fg:w="1"/><text x="35.6831%" y="751.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="35.4331%" y="725" width="0.0656%" height="15" fill="rgb(231,77,14)" fg:x="540" fg:w="1"/><text x="35.6831%" y="735.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::AlwaysInlinerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="35.4331%" y="709" width="0.0656%" height="15" fill="rgb(240,135,9)" fg:x="540" fg:w="1"/><text x="35.6831%" y="719.50"></text></g><g><title>llvm::AlwaysInlinerPass::run (1 samples, 0.07%)</title><rect x="35.4331%" y="693" width="0.0656%" height="15" fill="rgb(248,109,14)" fg:x="540" fg:w="1"/><text x="35.6831%" y="703.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (1 samples, 0.07%)</title><rect x="35.4331%" y="677" width="0.0656%" height="15" fill="rgb(227,146,52)" fg:x="540" fg:w="1"/><text x="35.6831%" y="687.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::ProfileSummaryAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (1 samples, 0.07%)</title><rect x="35.4331%" y="661" width="0.0656%" height="15" fill="rgb(232,54,3)" fg:x="540" fg:w="1"/><text x="35.6831%" y="671.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="35.4331%" y="645" width="0.0656%" height="15" fill="rgb(229,201,43)" fg:x="540" fg:w="1"/><text x="35.6831%" y="655.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="35.4331%" y="629" width="0.0656%" height="15" fill="rgb(252,161,33)" fg:x="540" fg:w="1"/><text x="35.6831%" y="639.50"></text></g><g><title>tsd_get (1 samples, 0.07%)</title><rect x="35.4331%" y="613" width="0.0656%" height="15" fill="rgb(226,146,40)" fg:x="540" fg:w="1"/><text x="35.6831%" y="623.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="35.4987%" y="709" width="0.0656%" height="15" fill="rgb(219,47,25)" fg:x="541" fg:w="1"/><text x="35.7487%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="35.4987%" y="693" width="0.0656%" height="15" fill="rgb(250,135,13)" fg:x="541" fg:w="1"/><text x="35.7487%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addFastRegAlloc (1 samples, 0.07%)</title><rect x="35.4987%" y="677" width="0.0656%" height="15" fill="rgb(219,229,18)" fg:x="541" fg:w="1"/><text x="35.7487%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="35.4987%" y="661" width="0.0656%" height="15" fill="rgb(217,152,27)" fg:x="541" fg:w="1"/><text x="35.7487%" y="671.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="35.4987%" y="645" width="0.0656%" height="15" fill="rgb(225,71,47)" fg:x="541" fg:w="1"/><text x="35.7487%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="35.4987%" y="629" width="0.0656%" height="15" fill="rgb(220,139,14)" fg:x="541" fg:w="1"/><text x="35.7487%" y="639.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="35.4987%" y="613" width="0.0656%" height="15" fill="rgb(247,54,32)" fg:x="541" fg:w="1"/><text x="35.7487%" y="623.50"></text></g><g><title>llvm::PMDataManager::collectRequiredAndUsedAnalyses (1 samples, 0.07%)</title><rect x="35.4987%" y="597" width="0.0656%" height="15" fill="rgb(252,131,39)" fg:x="541" fg:w="1"/><text x="35.7487%" y="607.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="35.5643%" y="693" width="0.0656%" height="15" fill="rgb(210,108,39)" fg:x="542" fg:w="1"/><text x="35.8143%" y="703.50"></text></g><g><title>llvm::Attribute::hasParentContext (1 samples, 0.07%)</title><rect x="35.5643%" y="677" width="0.0656%" height="15" fill="rgb(205,23,29)" fg:x="542" fg:w="1"/><text x="35.8143%" y="687.50"></text></g><g><title>llvm::SelectionDAG::Combine (3 samples, 0.20%)</title><rect x="35.8268%" y="629" width="0.1969%" height="15" fill="rgb(246,139,46)" fg:x="546" fg:w="3"/><text x="36.0768%" y="639.50"></text></g><g><title>llvm::SelectionDAG::LegalizeVectors (1 samples, 0.07%)</title><rect x="36.0236%" y="629" width="0.0656%" height="15" fill="rgb(250,81,26)" fg:x="549" fg:w="1"/><text x="36.2736%" y="639.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (5 samples, 0.33%)</title><rect x="35.8268%" y="677" width="0.3281%" height="15" fill="rgb(214,104,7)" fg:x="546" fg:w="5"/><text x="36.0768%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (5 samples, 0.33%)</title><rect x="35.8268%" y="661" width="0.3281%" height="15" fill="rgb(233,189,8)" fg:x="546" fg:w="5"/><text x="36.0768%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (5 samples, 0.33%)</title><rect x="35.8268%" y="645" width="0.3281%" height="15" fill="rgb(228,141,17)" fg:x="546" fg:w="5"/><text x="36.0768%" y="655.50"></text></g><g><title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.07%)</title><rect x="36.0892%" y="629" width="0.0656%" height="15" fill="rgb(247,157,1)" fg:x="550" fg:w="1"/><text x="36.3392%" y="639.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="36.1549%" y="677" width="0.0656%" height="15" fill="rgb(249,225,5)" fg:x="551" fg:w="1"/><text x="36.4049%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="36.1549%" y="661" width="0.0656%" height="15" fill="rgb(242,55,13)" fg:x="551" fg:w="1"/><text x="36.4049%" y="671.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionHeader (1 samples, 0.07%)</title><rect x="36.1549%" y="645" width="0.0656%" height="15" fill="rgb(230,49,50)" fg:x="551" fg:w="1"/><text x="36.4049%" y="655.50"></text></g><g><title>llvm::TargetLoweringObjectFile::SectionForGlobal (1 samples, 0.07%)</title><rect x="36.1549%" y="629" width="0.0656%" height="15" fill="rgb(241,111,38)" fg:x="551" fg:w="1"/><text x="36.4049%" y="639.50"></text></g><g><title>llvm::TargetLoweringObjectFileELF::SelectSectionForGlobal (1 samples, 0.07%)</title><rect x="36.1549%" y="613" width="0.0656%" height="15" fill="rgb(252,155,4)" fg:x="551" fg:w="1"/><text x="36.4049%" y="623.50"></text></g><g><title>llvm::MCContext::getELFSection (1 samples, 0.07%)</title><rect x="36.1549%" y="597" width="0.0656%" height="15" fill="rgb(212,69,32)" fg:x="551" fg:w="1"/><text x="36.4049%" y="607.50"></text></g><g><title>llvm::MCContext::createELFSectionImpl (1 samples, 0.07%)</title><rect x="36.1549%" y="581" width="0.0656%" height="15" fill="rgb(243,107,47)" fg:x="551" fg:w="1"/><text x="36.4049%" y="591.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="36.1549%" y="565" width="0.0656%" height="15" fill="rgb(247,130,12)" fg:x="551" fg:w="1"/><text x="36.4049%" y="575.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="36.1549%" y="549" width="0.0656%" height="15" fill="rgb(233,74,16)" fg:x="551" fg:w="1"/><text x="36.4049%" y="559.50"></text></g><g><title>llvm::X86InstrInfo::storeRegToStackSlot (1 samples, 0.07%)</title><rect x="36.2205%" y="677" width="0.0656%" height="15" fill="rgb(208,58,18)" fg:x="552" fg:w="1"/><text x="36.4705%" y="687.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="36.2205%" y="661" width="0.0656%" height="15" fill="rgb(242,225,1)" fg:x="552" fg:w="1"/><text x="36.4705%" y="671.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="36.2205%" y="645" width="0.0656%" height="15" fill="rgb(249,39,40)" fg:x="552" fg:w="1"/><text x="36.4705%" y="655.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="36.2205%" y="629" width="0.0656%" height="15" fill="rgb(207,72,44)" fg:x="552" fg:w="1"/><text x="36.4705%" y="639.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="36.2205%" y="613" width="0.0656%" height="15" fill="rgb(215,193,12)" fg:x="552" fg:w="1"/><text x="36.4705%" y="623.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="36.2205%" y="597" width="0.0656%" height="15" fill="rgb(248,41,39)" fg:x="552" fg:w="1"/><text x="36.4705%" y="607.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="36.2205%" y="581" width="0.0656%" height="15" fill="rgb(253,85,4)" fg:x="552" fg:w="1"/><text x="36.4705%" y="591.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="36.2205%" y="565" width="0.0656%" height="15" fill="rgb(243,70,31)" fg:x="552" fg:w="1"/><text x="36.4705%" y="575.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="36.2205%" y="549" width="0.0656%" height="15" fill="rgb(253,195,26)" fg:x="552" fg:w="1"/><text x="36.4705%" y="559.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="36.2205%" y="533" width="0.0656%" height="15" fill="rgb(243,42,11)" fg:x="552" fg:w="1"/><text x="36.4705%" y="543.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="36.2205%" y="517" width="0.0656%" height="15" fill="rgb(239,66,17)" fg:x="552" fg:w="1"/><text x="36.4705%" y="527.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="36.2205%" y="501" width="0.0656%" height="15" fill="rgb(217,132,21)" fg:x="552" fg:w="1"/><text x="36.4705%" y="511.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.07%)</title><rect x="36.2205%" y="485" width="0.0656%" height="15" fill="rgb(252,202,21)" fg:x="552" fg:w="1"/><text x="36.4705%" y="495.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.07%)</title><rect x="36.2205%" y="469" width="0.0656%" height="15" fill="rgb(233,98,36)" fg:x="552" fg:w="1"/><text x="36.4705%" y="479.50"></text></g><g><title>eset_first_fit (1 samples, 0.07%)</title><rect x="36.2205%" y="453" width="0.0656%" height="15" fill="rgb(216,153,54)" fg:x="552" fg:w="1"/><text x="36.4705%" y="463.50"></text></g><g><title>_rjem_je_edata_heap_first (1 samples, 0.07%)</title><rect x="36.2205%" y="437" width="0.0656%" height="15" fill="rgb(250,99,7)" fg:x="552" fg:w="1"/><text x="36.4705%" y="447.50"></text></g><g><title>ph_first (1 samples, 0.07%)</title><rect x="36.2205%" y="421" width="0.0656%" height="15" fill="rgb(207,56,50)" fg:x="552" fg:w="1"/><text x="36.4705%" y="431.50"></text></g><g><title>ph_merge_aux (1 samples, 0.07%)</title><rect x="36.2205%" y="405" width="0.0656%" height="15" fill="rgb(244,61,34)" fg:x="552" fg:w="1"/><text x="36.4705%" y="415.50"></text></g><g><title>phn_next_get (1 samples, 0.07%)</title><rect x="36.2205%" y="389" width="0.0656%" height="15" fill="rgb(241,50,38)" fg:x="552" fg:w="1"/><text x="36.4705%" y="399.50"></text></g><g><title>llvm::X86RegisterInfo::X86RegisterInfo (1 samples, 0.07%)</title><rect x="36.2861%" y="645" width="0.0656%" height="15" fill="rgb(212,166,30)" fg:x="553" fg:w="1"/><text x="36.5361%" y="655.50"></text></g><g><title>[libc.so.6] (15 samples, 0.98%)</title><rect x="35.4331%" y="885" width="0.9843%" height="15" fill="rgb(249,127,32)" fg:x="540" fg:w="15"/><text x="35.6831%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.98%)</title><rect x="35.4331%" y="869" width="0.9843%" height="15" fill="rgb(209,103,0)" fg:x="540" fg:w="15"/><text x="35.6831%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="35.4331%" y="853" width="0.9843%" height="15" fill="rgb(238,209,51)" fg:x="540" fg:w="15"/><text x="35.6831%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.98%)</title><rect x="35.4331%" y="837" width="0.9843%" height="15" fill="rgb(237,56,23)" fg:x="540" fg:w="15"/><text x="35.6831%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (15 samples, 0.98%)</title><rect x="35.4331%" y="821" width="0.9843%" height="15" fill="rgb(215,153,46)" fg:x="540" fg:w="15"/><text x="35.6831%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (15 samples, 0.98%)</title><rect x="35.4331%" y="805" width="0.9843%" height="15" fill="rgb(224,49,31)" fg:x="540" fg:w="15"/><text x="35.6831%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (15 samples, 0.98%)</title><rect x="35.4331%" y="789" width="0.9843%" height="15" fill="rgb(250,18,42)" fg:x="540" fg:w="15"/><text x="35.6831%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (14 samples, 0.92%)</title><rect x="35.4987%" y="773" width="0.9186%" height="15" fill="rgb(215,176,39)" fg:x="541" fg:w="14"/><text x="35.7487%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (14 samples, 0.92%)</title><rect x="35.4987%" y="757" width="0.9186%" height="15" fill="rgb(223,77,29)" fg:x="541" fg:w="14"/><text x="35.7487%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (14 samples, 0.92%)</title><rect x="35.4987%" y="741" width="0.9186%" height="15" fill="rgb(234,94,52)" fg:x="541" fg:w="14"/><text x="35.7487%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (14 samples, 0.92%)</title><rect x="35.4987%" y="725" width="0.9186%" height="15" fill="rgb(220,154,50)" fg:x="541" fg:w="14"/><text x="35.7487%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (13 samples, 0.85%)</title><rect x="35.5643%" y="709" width="0.8530%" height="15" fill="rgb(212,11,10)" fg:x="542" fg:w="13"/><text x="35.8143%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (12 samples, 0.79%)</title><rect x="35.6299%" y="693" width="0.7874%" height="15" fill="rgb(205,166,19)" fg:x="543" fg:w="12"/><text x="35.8799%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.13%)</title><rect x="36.2861%" y="677" width="0.1312%" height="15" fill="rgb(244,198,16)" fg:x="553" fg:w="2"/><text x="36.5361%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.13%)</title><rect x="36.2861%" y="661" width="0.1312%" height="15" fill="rgb(219,69,12)" fg:x="553" fg:w="2"/><text x="36.5361%" y="671.50"></text></g><g><title>llvm::X86TargetLowering::X86TargetLowering (1 samples, 0.07%)</title><rect x="36.3517%" y="645" width="0.0656%" height="15" fill="rgb(245,30,7)" fg:x="554" fg:w="1"/><text x="36.6017%" y="655.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.07%)</title><rect x="36.3517%" y="629" width="0.0656%" height="15" fill="rgb(218,221,48)" fg:x="554" fg:w="1"/><text x="36.6017%" y="639.50"></text></g><g><title>opt_s690uk381ai (16 samples, 1.05%)</title><rect x="35.4331%" y="901" width="1.0499%" height="15" fill="rgb(216,66,15)" fg:x="540" fg:w="16"/><text x="35.6831%" y="911.50"></text></g><g><title>pthread_setspecific (1 samples, 0.07%)</title><rect x="36.4173%" y="885" width="0.0656%" height="15" fill="rgb(226,122,50)" fg:x="555" fg:w="1"/><text x="36.6673%" y="895.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="36.4829%" y="773" width="0.0656%" height="15" fill="rgb(239,156,16)" fg:x="556" fg:w="1"/><text x="36.7329%" y="783.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="36.4829%" y="757" width="0.0656%" height="15" fill="rgb(224,27,38)" fg:x="556" fg:w="1"/><text x="36.7329%" y="767.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="36.4829%" y="741" width="0.0656%" height="15" fill="rgb(224,39,27)" fg:x="556" fg:w="1"/><text x="36.7329%" y="751.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::InsertIntoBucket&lt;llvm::AnalysisKey*&gt; (1 samples, 0.07%)</title><rect x="36.5486%" y="725" width="0.0656%" height="15" fill="rgb(215,92,29)" fg:x="557" fg:w="1"/><text x="36.7986%" y="735.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="36.5486%" y="709" width="0.0656%" height="15" fill="rgb(207,159,16)" fg:x="557" fg:w="1"/><text x="36.7986%" y="719.50"></text></g><g><title>aligned_alloc (1 samples, 0.07%)</title><rect x="36.5486%" y="693" width="0.0656%" height="15" fill="rgb(238,163,47)" fg:x="557" fg:w="1"/><text x="36.7986%" y="703.50"></text></g><g><title>imalloc (1 samples, 0.07%)</title><rect x="36.5486%" y="677" width="0.0656%" height="15" fill="rgb(219,91,49)" fg:x="557" fg:w="1"/><text x="36.7986%" y="687.50"></text></g><g><title>imalloc_body (1 samples, 0.07%)</title><rect x="36.5486%" y="661" width="0.0656%" height="15" fill="rgb(227,167,31)" fg:x="557" fg:w="1"/><text x="36.7986%" y="671.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.07%)</title><rect x="36.5486%" y="645" width="0.0656%" height="15" fill="rgb(234,80,54)" fg:x="557" fg:w="1"/><text x="36.7986%" y="655.50"></text></g><g><title>ipalloct (1 samples, 0.07%)</title><rect x="36.5486%" y="629" width="0.0656%" height="15" fill="rgb(212,114,2)" fg:x="557" fg:w="1"/><text x="36.7986%" y="639.50"></text></g><g><title>ipallocztm (1 samples, 0.07%)</title><rect x="36.5486%" y="613" width="0.0656%" height="15" fill="rgb(234,50,24)" fg:x="557" fg:w="1"/><text x="36.7986%" y="623.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.07%)</title><rect x="36.5486%" y="597" width="0.0656%" height="15" fill="rgb(221,68,8)" fg:x="557" fg:w="1"/><text x="36.7986%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="36.5486%" y="581" width="0.0656%" height="15" fill="rgb(254,180,31)" fg:x="557" fg:w="1"/><text x="36.7986%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="36.5486%" y="565" width="0.0656%" height="15" fill="rgb(247,130,50)" fg:x="557" fg:w="1"/><text x="36.7986%" y="575.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="36.5486%" y="549" width="0.0656%" height="15" fill="rgb(211,109,4)" fg:x="557" fg:w="1"/><text x="36.7986%" y="559.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="36.5486%" y="533" width="0.0656%" height="15" fill="rgb(238,50,21)" fg:x="557" fg:w="1"/><text x="36.7986%" y="543.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="36.5486%" y="517" width="0.0656%" height="15" fill="rgb(225,57,45)" fg:x="557" fg:w="1"/><text x="36.7986%" y="527.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="36.5486%" y="501" width="0.0656%" height="15" fill="rgb(209,196,50)" fg:x="557" fg:w="1"/><text x="36.7986%" y="511.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="36.5486%" y="485" width="0.0656%" height="15" fill="rgb(242,140,13)" fg:x="557" fg:w="1"/><text x="36.7986%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="36.5486%" y="469" width="0.0656%" height="15" fill="rgb(217,111,7)" fg:x="557" fg:w="1"/><text x="36.7986%" y="479.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="36.5486%" y="453" width="0.0656%" height="15" fill="rgb(253,193,51)" fg:x="557" fg:w="1"/><text x="36.7986%" y="463.50"></text></g><g><title>extent_recycle_split (1 samples, 0.07%)</title><rect x="36.5486%" y="437" width="0.0656%" height="15" fill="rgb(252,70,29)" fg:x="557" fg:w="1"/><text x="36.7986%" y="447.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.07%)</title><rect x="36.5486%" y="421" width="0.0656%" height="15" fill="rgb(232,127,12)" fg:x="557" fg:w="1"/><text x="36.7986%" y="431.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.07%)</title><rect x="36.5486%" y="405" width="0.0656%" height="15" fill="rgb(211,180,21)" fg:x="557" fg:w="1"/><text x="36.7986%" y="415.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.07%)</title><rect x="36.5486%" y="389" width="0.0656%" height="15" fill="rgb(229,72,13)" fg:x="557" fg:w="1"/><text x="36.7986%" y="399.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.07%)</title><rect x="36.5486%" y="373" width="0.0656%" height="15" fill="rgb(240,211,49)" fg:x="557" fg:w="1"/><text x="36.7986%" y="383.50"></text></g><g><title>ph_insert (1 samples, 0.07%)</title><rect x="36.5486%" y="357" width="0.0656%" height="15" fill="rgb(219,149,40)" fg:x="557" fg:w="1"/><text x="36.7986%" y="367.50"></text></g><g><title>phn_link_init (1 samples, 0.07%)</title><rect x="36.5486%" y="341" width="0.0656%" height="15" fill="rgb(210,127,46)" fg:x="557" fg:w="1"/><text x="36.7986%" y="351.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (2 samples, 0.13%)</title><rect x="36.5486%" y="773" width="0.1312%" height="15" fill="rgb(220,106,7)" fg:x="557" fg:w="2"/><text x="36.7986%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (2 samples, 0.13%)</title><rect x="36.5486%" y="757" width="0.1312%" height="15" fill="rgb(249,31,22)" fg:x="557" fg:w="2"/><text x="36.7986%" y="767.50"></text></g><g><title>LLVMRustOptimize (2 samples, 0.13%)</title><rect x="36.5486%" y="741" width="0.1312%" height="15" fill="rgb(253,1,49)" fg:x="557" fg:w="2"/><text x="36.7986%" y="751.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="36.6142%" y="725" width="0.0656%" height="15" fill="rgb(227,144,33)" fg:x="558" fg:w="1"/><text x="36.8642%" y="735.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="36.6142%" y="709" width="0.0656%" height="15" fill="rgb(249,163,44)" fg:x="558" fg:w="1"/><text x="36.8642%" y="719.50"></text></g><g><title>llvm::ModuleToFunctionPassAdaptor::run (1 samples, 0.07%)</title><rect x="36.6142%" y="693" width="0.0656%" height="15" fill="rgb(234,15,39)" fg:x="558" fg:w="1"/><text x="36.8642%" y="703.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::AnnotationRemarksPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.07%)</title><rect x="36.6142%" y="677" width="0.0656%" height="15" fill="rgb(207,66,16)" fg:x="558" fg:w="1"/><text x="36.8642%" y="687.50"></text></g><g><title>llvm::AnnotationRemarksPass::run (1 samples, 0.07%)</title><rect x="36.6142%" y="661" width="0.0656%" height="15" fill="rgb(233,112,24)" fg:x="558" fg:w="1"/><text x="36.8642%" y="671.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.07%)</title><rect x="36.6142%" y="645" width="0.0656%" height="15" fill="rgb(230,90,22)" fg:x="558" fg:w="1"/><text x="36.8642%" y="655.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::TargetLibraryAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.07%)</title><rect x="36.6142%" y="629" width="0.0656%" height="15" fill="rgb(229,61,13)" fg:x="558" fg:w="1"/><text x="36.8642%" y="639.50"></text></g><g><title>std::make_unique&lt;llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::TargetLibraryAnalysis, llvm::TargetLibraryInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;, llvm::TargetLibraryInfo&gt; (1 samples, 0.07%)</title><rect x="36.6142%" y="613" width="0.0656%" height="15" fill="rgb(225,57,24)" fg:x="558" fg:w="1"/><text x="36.8642%" y="623.50"></text></g><g><title>free@plt (1 samples, 0.07%)</title><rect x="36.6142%" y="597" width="0.0656%" height="15" fill="rgb(208,169,48)" fg:x="558" fg:w="1"/><text x="36.8642%" y="607.50"></text></g><g><title>&lt;rustc_codegen_ssa::ModuleCodegen&lt;rustc_codegen_llvm::ModuleLlvm&gt;&gt;::into_compiled_module (1 samples, 0.07%)</title><rect x="36.6798%" y="741" width="0.0656%" height="15" fill="rgb(244,218,51)" fg:x="559" fg:w="1"/><text x="36.9298%" y="751.50"></text></g><g><title>LLVMContextDispose (1 samples, 0.07%)</title><rect x="36.6798%" y="725" width="0.0656%" height="15" fill="rgb(214,148,10)" fg:x="559" fg:w="1"/><text x="36.9298%" y="735.50"></text></g><g><title>llvm::LLVMContextImpl::~LLVMContextImpl (1 samples, 0.07%)</title><rect x="36.6798%" y="709" width="0.0656%" height="15" fill="rgb(225,174,27)" fg:x="559" fg:w="1"/><text x="36.9298%" y="719.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="36.7454%" y="709" width="0.0656%" height="15" fill="rgb(230,96,26)" fg:x="560" fg:w="1"/><text x="36.9954%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="36.7454%" y="693" width="0.0656%" height="15" fill="rgb(232,10,30)" fg:x="560" fg:w="1"/><text x="36.9954%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="36.7454%" y="677" width="0.0656%" height="15" fill="rgb(222,8,50)" fg:x="560" fg:w="1"/><text x="36.9954%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="36.7454%" y="661" width="0.0656%" height="15" fill="rgb(213,81,27)" fg:x="560" fg:w="1"/><text x="36.9954%" y="671.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="36.7454%" y="645" width="0.0656%" height="15" fill="rgb(245,50,10)" fg:x="560" fg:w="1"/><text x="36.9954%" y="655.50"></text></g><g><title>llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.07%)</title><rect x="36.7454%" y="629" width="0.0656%" height="15" fill="rgb(216,100,18)" fg:x="560" fg:w="1"/><text x="36.9954%" y="639.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="36.8110%" y="693" width="0.0656%" height="15" fill="rgb(236,147,54)" fg:x="561" fg:w="1"/><text x="37.0610%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="36.8110%" y="677" width="0.0656%" height="15" fill="rgb(205,143,26)" fg:x="561" fg:w="1"/><text x="37.0610%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="36.8110%" y="661" width="0.0656%" height="15" fill="rgb(236,26,9)" fg:x="561" fg:w="1"/><text x="37.0610%" y="671.50"></text></g><g><title>llvm::DwarfDebug::finalizeModuleInfo (1 samples, 0.07%)</title><rect x="36.8110%" y="645" width="0.0656%" height="15" fill="rgb(221,165,53)" fg:x="561" fg:w="1"/><text x="37.0610%" y="655.50"></text></g><g><title>llvm::DwarfFile::computeSizeAndOffsets (1 samples, 0.07%)</title><rect x="36.8110%" y="629" width="0.0656%" height="15" fill="rgb(214,110,17)" fg:x="561" fg:w="1"/><text x="37.0610%" y="639.50"></text></g><g><title>llvm::DIE::computeOffsetsAndAbbrevs (1 samples, 0.07%)</title><rect x="36.8110%" y="613" width="0.0656%" height="15" fill="rgb(237,197,12)" fg:x="561" fg:w="1"/><text x="37.0610%" y="623.50"></text></g><g><title>llvm::DIE::computeOffsetsAndAbbrevs (1 samples, 0.07%)</title><rect x="36.8110%" y="597" width="0.0656%" height="15" fill="rgb(205,84,17)" fg:x="561" fg:w="1"/><text x="37.0610%" y="607.50"></text></g><g><title>llvm::DIE::computeOffsetsAndAbbrevs (1 samples, 0.07%)</title><rect x="36.8110%" y="581" width="0.0656%" height="15" fill="rgb(237,18,45)" fg:x="561" fg:w="1"/><text x="37.0610%" y="591.50"></text></g><g><title>llvm::DIE::computeOffsetsAndAbbrevs (1 samples, 0.07%)</title><rect x="36.8110%" y="565" width="0.0656%" height="15" fill="rgb(221,87,14)" fg:x="561" fg:w="1"/><text x="37.0610%" y="575.50"></text></g><g><title>[libc.so.6] (8 samples, 0.52%)</title><rect x="36.4829%" y="885" width="0.5249%" height="15" fill="rgb(238,186,15)" fg:x="556" fg:w="8"/><text x="36.7329%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.52%)</title><rect x="36.4829%" y="869" width="0.5249%" height="15" fill="rgb(208,115,11)" fg:x="556" fg:w="8"/><text x="36.7329%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="36.4829%" y="853" width="0.5249%" height="15" fill="rgb(254,175,0)" fg:x="556" fg:w="8"/><text x="36.7329%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="36.4829%" y="837" width="0.5249%" height="15" fill="rgb(227,24,42)" fg:x="556" fg:w="8"/><text x="36.7329%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (8 samples, 0.52%)</title><rect x="36.4829%" y="821" width="0.5249%" height="15" fill="rgb(223,211,37)" fg:x="556" fg:w="8"/><text x="36.7329%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (8 samples, 0.52%)</title><rect x="36.4829%" y="805" width="0.5249%" height="15" fill="rgb(235,49,27)" fg:x="556" fg:w="8"/><text x="36.7329%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (8 samples, 0.52%)</title><rect x="36.4829%" y="789" width="0.5249%" height="15" fill="rgb(254,97,51)" fg:x="556" fg:w="8"/><text x="36.7329%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (5 samples, 0.33%)</title><rect x="36.6798%" y="773" width="0.3281%" height="15" fill="rgb(249,51,40)" fg:x="559" fg:w="5"/><text x="36.9298%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (5 samples, 0.33%)</title><rect x="36.6798%" y="757" width="0.3281%" height="15" fill="rgb(210,128,45)" fg:x="559" fg:w="5"/><text x="36.9298%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (4 samples, 0.26%)</title><rect x="36.7454%" y="741" width="0.2625%" height="15" fill="rgb(224,137,50)" fg:x="560" fg:w="4"/><text x="36.9954%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.26%)</title><rect x="36.7454%" y="725" width="0.2625%" height="15" fill="rgb(242,15,9)" fg:x="560" fg:w="4"/><text x="36.9954%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (3 samples, 0.20%)</title><rect x="36.8110%" y="709" width="0.1969%" height="15" fill="rgb(233,187,41)" fg:x="561" fg:w="3"/><text x="37.0610%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.13%)</title><rect x="36.8766%" y="693" width="0.1312%" height="15" fill="rgb(227,2,29)" fg:x="562" fg:w="2"/><text x="37.1266%" y="703.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.07%)</title><rect x="36.9423%" y="677" width="0.0656%" height="15" fill="rgb(222,70,3)" fg:x="563" fg:w="1"/><text x="37.1923%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.07%)</title><rect x="36.9423%" y="661" width="0.0656%" height="15" fill="rgb(213,11,42)" fg:x="563" fg:w="1"/><text x="37.1923%" y="671.50"></text></g><g><title>llvm::FastISel::createMachineMemOperandFor (1 samples, 0.07%)</title><rect x="36.9423%" y="645" width="0.0656%" height="15" fill="rgb(225,150,9)" fg:x="563" fg:w="1"/><text x="37.1923%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.0079%" y="885" width="0.0656%" height="15" fill="rgb(230,162,45)" fg:x="564" fg:w="1"/><text x="37.2579%" y="895.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.07%)</title><rect x="37.0079%" y="869" width="0.0656%" height="15" fill="rgb(222,14,52)" fg:x="564" fg:w="1"/><text x="37.2579%" y="879.50"></text></g><g><title>opt_u45c93ejffq (10 samples, 0.66%)</title><rect x="36.4829%" y="901" width="0.6562%" height="15" fill="rgb(254,198,14)" fg:x="556" fg:w="10"/><text x="36.7329%" y="911.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="37.0735%" y="885" width="0.0656%" height="15" fill="rgb(220,217,30)" fg:x="565" fg:w="1"/><text x="37.3235%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="37.0735%" y="869" width="0.0656%" height="15" fill="rgb(215,146,41)" fg:x="565" fg:w="1"/><text x="37.3235%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="37.0735%" y="853" width="0.0656%" height="15" fill="rgb(217,27,36)" fg:x="565" fg:w="1"/><text x="37.3235%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="37.0735%" y="837" width="0.0656%" height="15" fill="rgb(219,218,39)" fg:x="565" fg:w="1"/><text x="37.3235%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="37.0735%" y="821" width="0.0656%" height="15" fill="rgb(219,4,42)" fg:x="565" fg:w="1"/><text x="37.3235%" y="831.50"></text></g><g><title>arena_choose (1 samples, 0.07%)</title><rect x="37.0735%" y="805" width="0.0656%" height="15" fill="rgb(249,119,36)" fg:x="565" fg:w="1"/><text x="37.3235%" y="815.50"></text></g><g><title>arena_choose_impl (1 samples, 0.07%)</title><rect x="37.0735%" y="789" width="0.0656%" height="15" fill="rgb(209,23,33)" fg:x="565" fg:w="1"/><text x="37.3235%" y="799.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.07%)</title><rect x="37.0735%" y="773" width="0.0656%" height="15" fill="rgb(211,10,0)" fg:x="565" fg:w="1"/><text x="37.3235%" y="783.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.07%)</title><rect x="37.0735%" y="757" width="0.0656%" height="15" fill="rgb(208,99,37)" fg:x="565" fg:w="1"/><text x="37.3235%" y="767.50"></text></g><g><title>mutex_owner_stats_update (1 samples, 0.07%)</title><rect x="37.0735%" y="741" width="0.0656%" height="15" fill="rgb(213,132,31)" fg:x="565" fg:w="1"/><text x="37.3235%" y="751.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="37.1391%" y="885" width="0.0656%" height="15" fill="rgb(243,129,40)" fg:x="566" fg:w="1"/><text x="37.3891%" y="895.50"></text></g><g><title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.07%)</title><rect x="37.1391%" y="869" width="0.0656%" height="15" fill="rgb(210,66,33)" fg:x="566" fg:w="1"/><text x="37.3891%" y="879.50"></text></g><g><title>llvm::PassBuilder::registerLoopAnalyses (1 samples, 0.07%)</title><rect x="37.2047%" y="725" width="0.0656%" height="15" fill="rgb(209,189,4)" fg:x="567" fg:w="1"/><text x="37.4547%" y="735.50"></text></g><g><title>llvm::Triple::Triple (1 samples, 0.07%)</title><rect x="37.2703%" y="725" width="0.0656%" height="15" fill="rgb(214,107,37)" fg:x="568" fg:w="1"/><text x="37.5203%" y="735.50"></text></g><g><title>llvm::Twine::str[abi:cxx11] (1 samples, 0.07%)</title><rect x="37.2703%" y="709" width="0.0656%" height="15" fill="rgb(245,88,54)" fg:x="568" fg:w="1"/><text x="37.5203%" y="719.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="37.2703%" y="693" width="0.0656%" height="15" fill="rgb(205,146,20)" fg:x="568" fg:w="1"/><text x="37.5203%" y="703.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="37.2703%" y="677" width="0.0656%" height="15" fill="rgb(220,161,25)" fg:x="568" fg:w="1"/><text x="37.5203%" y="687.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="37.2703%" y="661" width="0.0656%" height="15" fill="rgb(215,152,15)" fg:x="568" fg:w="1"/><text x="37.5203%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="37.2703%" y="645" width="0.0656%" height="15" fill="rgb(233,192,44)" fg:x="568" fg:w="1"/><text x="37.5203%" y="655.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="37.2703%" y="629" width="0.0656%" height="15" fill="rgb(240,170,46)" fg:x="568" fg:w="1"/><text x="37.5203%" y="639.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (3 samples, 0.20%)</title><rect x="37.2047%" y="773" width="0.1969%" height="15" fill="rgb(207,104,33)" fg:x="567" fg:w="3"/><text x="37.4547%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (3 samples, 0.20%)</title><rect x="37.2047%" y="757" width="0.1969%" height="15" fill="rgb(219,21,39)" fg:x="567" fg:w="3"/><text x="37.4547%" y="767.50"></text></g><g><title>LLVMRustOptimize (3 samples, 0.20%)</title><rect x="37.2047%" y="741" width="0.1969%" height="15" fill="rgb(214,133,29)" fg:x="567" fg:w="3"/><text x="37.4547%" y="751.50"></text></g><g><title>llvm::UpgradeCallsToIntrinsic (1 samples, 0.07%)</title><rect x="37.3360%" y="725" width="0.0656%" height="15" fill="rgb(226,93,6)" fg:x="569" fg:w="1"/><text x="37.5860%" y="735.50"></text></g><g><title>llvm::UpgradeIntrinsicFunction (1 samples, 0.07%)</title><rect x="37.3360%" y="709" width="0.0656%" height="15" fill="rgb(252,222,34)" fg:x="569" fg:w="1"/><text x="37.5860%" y="719.50"></text></g><g><title>&lt;rustc_codegen_ssa::ModuleCodegen&lt;rustc_codegen_llvm::ModuleLlvm&gt;&gt;::into_compiled_module (1 samples, 0.07%)</title><rect x="37.4016%" y="741" width="0.0656%" height="15" fill="rgb(252,92,48)" fg:x="570" fg:w="1"/><text x="37.6516%" y="751.50"></text></g><g><title>llvm::X86TargetMachine::~X86TargetMachine (1 samples, 0.07%)</title><rect x="37.4016%" y="725" width="0.0656%" height="15" fill="rgb(245,223,24)" fg:x="570" fg:w="1"/><text x="37.6516%" y="735.50"></text></g><g><title>llvm::X86Subtarget::~X86Subtarget (1 samples, 0.07%)</title><rect x="37.4016%" y="709" width="0.0656%" height="15" fill="rgb(205,176,3)" fg:x="570" fg:w="1"/><text x="37.6516%" y="719.50"></text></g><g><title>llvm::X86LegalizerInfo::~X86LegalizerInfo (1 samples, 0.07%)</title><rect x="37.4016%" y="693" width="0.0656%" height="15" fill="rgb(235,151,15)" fg:x="570" fg:w="1"/><text x="37.6516%" y="703.50"></text></g><g><title>llvm::LegacyLegalizerInfo::~LegacyLegalizerInfo (1 samples, 0.07%)</title><rect x="37.4016%" y="677" width="0.0656%" height="15" fill="rgb(237,209,11)" fg:x="570" fg:w="1"/><text x="37.6516%" y="687.50"></text></g><g><title>llvm::MachineFunctionPass::getAnalysisUsage (1 samples, 0.07%)</title><rect x="37.4672%" y="629" width="0.0656%" height="15" fill="rgb(243,227,24)" fg:x="571" fg:w="1"/><text x="37.7172%" y="639.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (2 samples, 0.13%)</title><rect x="37.4672%" y="693" width="0.1312%" height="15" fill="rgb(239,193,16)" fg:x="571" fg:w="2"/><text x="37.7172%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addCoreISelPasses (2 samples, 0.13%)</title><rect x="37.4672%" y="677" width="0.1312%" height="15" fill="rgb(231,27,9)" fg:x="571" fg:w="2"/><text x="37.7172%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (2 samples, 0.13%)</title><rect x="37.4672%" y="661" width="0.1312%" height="15" fill="rgb(219,169,10)" fg:x="571" fg:w="2"/><text x="37.7172%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (2 samples, 0.13%)</title><rect x="37.4672%" y="645" width="0.1312%" height="15" fill="rgb(244,229,43)" fg:x="571" fg:w="2"/><text x="37.7172%" y="655.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="37.5328%" y="629" width="0.0656%" height="15" fill="rgb(254,38,20)" fg:x="572" fg:w="1"/><text x="37.7828%" y="639.50"></text></g><g><title>llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="37.5328%" y="613" width="0.0656%" height="15" fill="rgb(250,47,30)" fg:x="572" fg:w="1"/><text x="37.7828%" y="623.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="37.5984%" y="661" width="0.0656%" height="15" fill="rgb(224,124,36)" fg:x="573" fg:w="1"/><text x="37.8484%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="37.5984%" y="645" width="0.0656%" height="15" fill="rgb(246,68,51)" fg:x="573" fg:w="1"/><text x="37.8484%" y="655.50"></text></g><g><title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.07%)</title><rect x="37.5984%" y="629" width="0.0656%" height="15" fill="rgb(253,43,49)" fg:x="573" fg:w="1"/><text x="37.8484%" y="639.50"></text></g><g><title>llvm::DenseMap&lt;void const*, llvm::PassInfo const*, llvm::DenseMapInfo&lt;void const*, void&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::PassInfo const*&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="37.5984%" y="613" width="0.0656%" height="15" fill="rgb(219,54,36)" fg:x="573" fg:w="1"/><text x="37.8484%" y="623.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (4 samples, 0.26%)</title><rect x="37.4672%" y="709" width="0.2625%" height="15" fill="rgb(227,133,34)" fg:x="571" fg:w="4"/><text x="37.7172%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (2 samples, 0.13%)</title><rect x="37.5984%" y="693" width="0.1312%" height="15" fill="rgb(247,227,15)" fg:x="573" fg:w="2"/><text x="37.8484%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (2 samples, 0.13%)</title><rect x="37.5984%" y="677" width="0.1312%" height="15" fill="rgb(229,96,14)" fg:x="573" fg:w="2"/><text x="37.8484%" y="687.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="37.6640%" y="661" width="0.0656%" height="15" fill="rgb(220,79,17)" fg:x="574" fg:w="1"/><text x="37.9140%" y="671.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="37.6640%" y="645" width="0.0656%" height="15" fill="rgb(205,131,53)" fg:x="574" fg:w="1"/><text x="37.9140%" y="655.50"></text></g><g><title>llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="37.6640%" y="629" width="0.0656%" height="15" fill="rgb(209,50,29)" fg:x="574" fg:w="1"/><text x="37.9140%" y="639.50"></text></g><g><title>llvm::FastISel::selectInstruction (1 samples, 0.07%)</title><rect x="37.7297%" y="645" width="0.0656%" height="15" fill="rgb(245,86,46)" fg:x="575" fg:w="1"/><text x="37.9797%" y="655.50"></text></g><g><title>llvm::FastISel::selectOperator (1 samples, 0.07%)</title><rect x="37.7297%" y="629" width="0.0656%" height="15" fill="rgb(235,66,46)" fg:x="575" fg:w="1"/><text x="37.9797%" y="639.50"></text></g><g><title>llvm::FastISel::fastEmitBranch (1 samples, 0.07%)</title><rect x="37.7297%" y="613" width="0.0656%" height="15" fill="rgb(232,148,31)" fg:x="575" fg:w="1"/><text x="37.9797%" y="623.50"></text></g><g><title>llvm::X86InstrInfo::insertBranch (1 samples, 0.07%)</title><rect x="37.7297%" y="597" width="0.0656%" height="15" fill="rgb(217,149,8)" fg:x="575" fg:w="1"/><text x="37.9797%" y="607.50"></text></g><g><title>llvm::SelectionDAG::Legalize (1 samples, 0.07%)</title><rect x="37.7953%" y="629" width="0.0656%" height="15" fill="rgb(209,183,11)" fg:x="576" fg:w="1"/><text x="38.0453%" y="639.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.20%)</title><rect x="37.7297%" y="677" width="0.1969%" height="15" fill="rgb(208,55,20)" fg:x="575" fg:w="3"/><text x="37.9797%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.20%)</title><rect x="37.7297%" y="661" width="0.1969%" height="15" fill="rgb(218,39,14)" fg:x="575" fg:w="3"/><text x="37.9797%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.13%)</title><rect x="37.7953%" y="645" width="0.1312%" height="15" fill="rgb(216,169,33)" fg:x="576" fg:w="2"/><text x="38.0453%" y="655.50"></text></g><g><title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.07%)</title><rect x="37.8609%" y="629" width="0.0656%" height="15" fill="rgb(233,80,24)" fg:x="577" fg:w="1"/><text x="38.1109%" y="639.50"></text></g><g><title>llvm::SelectionDAG::MorphNodeTo (1 samples, 0.07%)</title><rect x="37.8609%" y="613" width="0.0656%" height="15" fill="rgb(213,179,31)" fg:x="577" fg:w="1"/><text x="38.1109%" y="623.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.07%)</title><rect x="37.9265%" y="677" width="0.0656%" height="15" fill="rgb(209,19,5)" fg:x="578" fg:w="1"/><text x="38.1765%" y="687.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (1 samples, 0.07%)</title><rect x="37.9265%" y="661" width="0.0656%" height="15" fill="rgb(219,18,35)" fg:x="578" fg:w="1"/><text x="38.1765%" y="671.50"></text></g><g><title>llvm::X86AsmPrinter::emitInstruction (1 samples, 0.07%)</title><rect x="37.9265%" y="645" width="0.0656%" height="15" fill="rgb(209,169,16)" fg:x="578" fg:w="1"/><text x="38.1765%" y="655.50"></text></g><g><title>[libc.so.6] (13 samples, 0.85%)</title><rect x="37.2047%" y="885" width="0.8530%" height="15" fill="rgb(245,90,51)" fg:x="567" fg:w="13"/><text x="37.4547%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.85%)</title><rect x="37.2047%" y="869" width="0.8530%" height="15" fill="rgb(220,99,45)" fg:x="567" fg:w="13"/><text x="37.4547%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.85%)</title><rect x="37.2047%" y="853" width="0.8530%" height="15" fill="rgb(249,89,25)" fg:x="567" fg:w="13"/><text x="37.4547%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.85%)</title><rect x="37.2047%" y="837" width="0.8530%" height="15" fill="rgb(239,193,0)" fg:x="567" fg:w="13"/><text x="37.4547%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (13 samples, 0.85%)</title><rect x="37.2047%" y="821" width="0.8530%" height="15" fill="rgb(231,126,1)" fg:x="567" fg:w="13"/><text x="37.4547%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (13 samples, 0.85%)</title><rect x="37.2047%" y="805" width="0.8530%" height="15" fill="rgb(243,166,3)" fg:x="567" fg:w="13"/><text x="37.4547%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (13 samples, 0.85%)</title><rect x="37.2047%" y="789" width="0.8530%" height="15" fill="rgb(223,22,34)" fg:x="567" fg:w="13"/><text x="37.4547%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (10 samples, 0.66%)</title><rect x="37.4016%" y="773" width="0.6562%" height="15" fill="rgb(251,52,51)" fg:x="570" fg:w="10"/><text x="37.6516%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (10 samples, 0.66%)</title><rect x="37.4016%" y="757" width="0.6562%" height="15" fill="rgb(221,165,28)" fg:x="570" fg:w="10"/><text x="37.6516%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (9 samples, 0.59%)</title><rect x="37.4672%" y="741" width="0.5906%" height="15" fill="rgb(218,121,47)" fg:x="571" fg:w="9"/><text x="37.7172%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (9 samples, 0.59%)</title><rect x="37.4672%" y="725" width="0.5906%" height="15" fill="rgb(209,120,9)" fg:x="571" fg:w="9"/><text x="37.7172%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (5 samples, 0.33%)</title><rect x="37.7297%" y="709" width="0.3281%" height="15" fill="rgb(236,68,12)" fg:x="575" fg:w="5"/><text x="37.9797%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (5 samples, 0.33%)</title><rect x="37.7297%" y="693" width="0.3281%" height="15" fill="rgb(225,194,26)" fg:x="575" fg:w="5"/><text x="37.9797%" y="703.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.07%)</title><rect x="37.9921%" y="677" width="0.0656%" height="15" fill="rgb(231,84,39)" fg:x="579" fg:w="1"/><text x="38.2421%" y="687.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.07%)</title><rect x="37.9921%" y="661" width="0.0656%" height="15" fill="rgb(210,11,45)" fg:x="579" fg:w="1"/><text x="38.2421%" y="671.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.07%)</title><rect x="37.9921%" y="645" width="0.0656%" height="15" fill="rgb(224,54,52)" fg:x="579" fg:w="1"/><text x="38.2421%" y="655.50"></text></g><g><title>llvm::LegacyLegalizerInfo::LegacyLegalizerInfo (1 samples, 0.07%)</title><rect x="37.9921%" y="629" width="0.0656%" height="15" fill="rgb(238,102,14)" fg:x="579" fg:w="1"/><text x="38.2421%" y="639.50"></text></g><g><title>_rjem_je_bitmap_init (1 samples, 0.07%)</title><rect x="38.0577%" y="869" width="0.0656%" height="15" fill="rgb(243,160,52)" fg:x="580" fg:w="1"/><text x="38.3077%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.13%)</title><rect x="38.0577%" y="885" width="0.1312%" height="15" fill="rgb(216,114,19)" fg:x="580" fg:w="2"/><text x="38.3077%" y="895.50"></text></g><g><title>llvm::LLVMContext::setDiagnosticHandler (1 samples, 0.07%)</title><rect x="38.1234%" y="869" width="0.0656%" height="15" fill="rgb(244,166,37)" fg:x="581" fg:w="1"/><text x="38.3734%" y="879.50"></text></g><g><title>arena_choose (1 samples, 0.07%)</title><rect x="38.1890%" y="805" width="0.0656%" height="15" fill="rgb(246,29,44)" fg:x="582" fg:w="1"/><text x="38.4390%" y="815.50"></text></g><g><title>arena_choose_impl (1 samples, 0.07%)</title><rect x="38.1890%" y="789" width="0.0656%" height="15" fill="rgb(215,56,53)" fg:x="582" fg:w="1"/><text x="38.4390%" y="799.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.07%)</title><rect x="38.1890%" y="773" width="0.0656%" height="15" fill="rgb(217,60,2)" fg:x="582" fg:w="1"/><text x="38.4390%" y="783.50"></text></g><g><title>_rjem_je_arena_nthreads_inc (1 samples, 0.07%)</title><rect x="38.1890%" y="757" width="0.0656%" height="15" fill="rgb(207,26,24)" fg:x="582" fg:w="1"/><text x="38.4390%" y="767.50"></text></g><g><title>opt_u6mp1la54np (22 samples, 1.44%)</title><rect x="37.1391%" y="901" width="1.4436%" height="15" fill="rgb(252,210,15)" fg:x="566" fg:w="22"/><text x="37.3891%" y="911.50"></text></g><g><title>pthread_getattr_np (6 samples, 0.39%)</title><rect x="38.1890%" y="885" width="0.3937%" height="15" fill="rgb(253,209,26)" fg:x="582" fg:w="6"/><text x="38.4390%" y="895.50"></text></g><g><title>realloc (6 samples, 0.39%)</title><rect x="38.1890%" y="869" width="0.3937%" height="15" fill="rgb(238,170,14)" fg:x="582" fg:w="6"/><text x="38.4390%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (6 samples, 0.39%)</title><rect x="38.1890%" y="853" width="0.3937%" height="15" fill="rgb(216,178,15)" fg:x="582" fg:w="6"/><text x="38.4390%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (6 samples, 0.39%)</title><rect x="38.1890%" y="837" width="0.3937%" height="15" fill="rgb(250,197,2)" fg:x="582" fg:w="6"/><text x="38.4390%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (6 samples, 0.39%)</title><rect x="38.1890%" y="821" width="0.3937%" height="15" fill="rgb(212,70,42)" fg:x="582" fg:w="6"/><text x="38.4390%" y="831.50"></text></g><g><title>tcache_init (5 samples, 0.33%)</title><rect x="38.2546%" y="805" width="0.3281%" height="15" fill="rgb(227,213,9)" fg:x="583" fg:w="5"/><text x="38.5046%" y="815.50"></text></g><g><title>_rjem_je_cache_bin_preincrement (5 samples, 0.33%)</title><rect x="38.2546%" y="789" width="0.3281%" height="15" fill="rgb(245,99,25)" fg:x="583" fg:w="5"/><text x="38.5046%" y="799.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="38.7139%" y="773" width="0.0656%" height="15" fill="rgb(250,82,29)" fg:x="590" fg:w="1"/><text x="38.9639%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::optimize (1 samples, 0.07%)</title><rect x="38.7795%" y="773" width="0.0656%" height="15" fill="rgb(241,226,54)" fg:x="591" fg:w="1"/><text x="39.0295%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::llvm_optimize (1 samples, 0.07%)</title><rect x="38.7795%" y="757" width="0.0656%" height="15" fill="rgb(221,99,41)" fg:x="591" fg:w="1"/><text x="39.0295%" y="767.50"></text></g><g><title>LLVMRustOptimize (1 samples, 0.07%)</title><rect x="38.7795%" y="741" width="0.0656%" height="15" fill="rgb(213,90,21)" fg:x="591" fg:w="1"/><text x="39.0295%" y="751.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="38.7795%" y="725" width="0.0656%" height="15" fill="rgb(205,208,24)" fg:x="591" fg:w="1"/><text x="39.0295%" y="735.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::AlwaysInlinerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.07%)</title><rect x="38.7795%" y="709" width="0.0656%" height="15" fill="rgb(246,31,12)" fg:x="591" fg:w="1"/><text x="39.0295%" y="719.50"></text></g><g><title>llvm::AlwaysInlinerPass::run (1 samples, 0.07%)</title><rect x="38.7795%" y="693" width="0.0656%" height="15" fill="rgb(213,154,6)" fg:x="591" fg:w="1"/><text x="39.0295%" y="703.50"></text></g><g><title>llvm::isInlineViable (1 samples, 0.07%)</title><rect x="38.7795%" y="677" width="0.0656%" height="15" fill="rgb(222,163,29)" fg:x="591" fg:w="1"/><text x="39.0295%" y="687.50"></text></g><g><title>&lt;rustc_codegen_ssa::ModuleCodegen&lt;rustc_codegen_llvm::ModuleLlvm&gt;&gt;::into_compiled_module (1 samples, 0.07%)</title><rect x="38.8451%" y="741" width="0.0656%" height="15" fill="rgb(227,201,8)" fg:x="592" fg:w="1"/><text x="39.0951%" y="751.50"></text></g><g><title>LLVMContextDispose (1 samples, 0.07%)</title><rect x="38.8451%" y="725" width="0.0656%" height="15" fill="rgb(233,9,32)" fg:x="592" fg:w="1"/><text x="39.0951%" y="735.50"></text></g><g><title>llvm::LLVMContextImpl::~LLVMContextImpl (1 samples, 0.07%)</title><rect x="38.8451%" y="709" width="0.0656%" height="15" fill="rgb(217,54,24)" fg:x="592" fg:w="1"/><text x="39.0951%" y="719.50"></text></g><g><title>llvm::Module::~Module (1 samples, 0.07%)</title><rect x="38.8451%" y="693" width="0.0656%" height="15" fill="rgb(235,192,0)" fg:x="592" fg:w="1"/><text x="39.0951%" y="703.50"></text></g><g><title>llvm::Module::dropAllReferences (1 samples, 0.07%)</title><rect x="38.8451%" y="677" width="0.0656%" height="15" fill="rgb(235,45,9)" fg:x="592" fg:w="1"/><text x="39.0951%" y="687.50"></text></g><g><title>llvm::BasicBlock::~BasicBlock (1 samples, 0.07%)</title><rect x="38.8451%" y="661" width="0.0656%" height="15" fill="rgb(246,42,40)" fg:x="592" fg:w="1"/><text x="39.0951%" y="671.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.07%)</title><rect x="38.8451%" y="645" width="0.0656%" height="15" fill="rgb(248,111,24)" fg:x="592" fg:w="1"/><text x="39.0951%" y="655.50"></text></g><g><title>llvm::Instruction::~Instruction (1 samples, 0.07%)</title><rect x="38.8451%" y="629" width="0.0656%" height="15" fill="rgb(249,65,22)" fg:x="592" fg:w="1"/><text x="39.0951%" y="639.50"></text></g><g><title>llvm::ValueAsMetadata::handleRAUW (1 samples, 0.07%)</title><rect x="38.8451%" y="613" width="0.0656%" height="15" fill="rgb(238,111,51)" fg:x="592" fg:w="1"/><text x="39.0951%" y="623.50"></text></g><g><title>llvm::ReplaceableMetadataImpl::replaceAllUsesWith (1 samples, 0.07%)</title><rect x="38.8451%" y="597" width="0.0656%" height="15" fill="rgb(250,118,22)" fg:x="592" fg:w="1"/><text x="39.0951%" y="607.50"></text></g><g><title>llvm::MetadataAsValue::handleChangedMetadata (1 samples, 0.07%)</title><rect x="38.8451%" y="581" width="0.0656%" height="15" fill="rgb(234,84,26)" fg:x="592" fg:w="1"/><text x="39.0951%" y="591.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.07%)</title><rect x="38.9108%" y="709" width="0.0656%" height="15" fill="rgb(243,172,12)" fg:x="593" fg:w="1"/><text x="39.1608%" y="719.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.07%)</title><rect x="38.9108%" y="693" width="0.0656%" height="15" fill="rgb(236,150,49)" fg:x="593" fg:w="1"/><text x="39.1608%" y="703.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="38.9108%" y="677" width="0.0656%" height="15" fill="rgb(225,197,26)" fg:x="593" fg:w="1"/><text x="39.1608%" y="687.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="38.9108%" y="661" width="0.0656%" height="15" fill="rgb(214,17,42)" fg:x="593" fg:w="1"/><text x="39.1608%" y="671.50"></text></g><g><title>llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="38.9108%" y="645" width="0.0656%" height="15" fill="rgb(224,165,40)" fg:x="593" fg:w="1"/><text x="39.1608%" y="655.50"></text></g><g><title>llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.07%)</title><rect x="38.9108%" y="629" width="0.0656%" height="15" fill="rgb(246,100,4)" fg:x="593" fg:w="1"/><text x="39.1608%" y="639.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.07%)</title><rect x="38.9764%" y="693" width="0.0656%" height="15" fill="rgb(222,103,0)" fg:x="594" fg:w="1"/><text x="39.2264%" y="703.50"></text></g><g><title>llvm::AsmPrinter::doFinalization (1 samples, 0.07%)</title><rect x="38.9764%" y="677" width="0.0656%" height="15" fill="rgb(227,189,26)" fg:x="594" fg:w="1"/><text x="39.2264%" y="687.50"></text></g><g><title>llvm::DwarfDebug::endModule (1 samples, 0.07%)</title><rect x="38.9764%" y="661" width="0.0656%" height="15" fill="rgb(214,202,17)" fg:x="594" fg:w="1"/><text x="39.2264%" y="671.50"></text></g><g><title>llvm::DwarfDebug::finalizeModuleInfo (1 samples, 0.07%)</title><rect x="38.9764%" y="645" width="0.0656%" height="15" fill="rgb(229,111,3)" fg:x="594" fg:w="1"/><text x="39.2264%" y="655.50"></text></g><g><title>llvm::DwarfDebug::finishEntityDefinitions (1 samples, 0.07%)</title><rect x="38.9764%" y="629" width="0.0656%" height="15" fill="rgb(229,172,15)" fg:x="594" fg:w="1"/><text x="39.2264%" y="639.50"></text></g><g><title>llvm::DwarfCompileUnit::finishEntityDefinition (1 samples, 0.07%)</title><rect x="38.9764%" y="613" width="0.0656%" height="15" fill="rgb(230,224,35)" fg:x="594" fg:w="1"/><text x="39.2264%" y="623.50"></text></g><g><title>llvm::FastISel::selectInstruction (1 samples, 0.07%)</title><rect x="39.3045%" y="645" width="0.0656%" height="15" fill="rgb(251,141,6)" fg:x="599" fg:w="1"/><text x="39.5545%" y="655.50"></text></g><g><title>llvm::FastISel::selectIntrinsicCall (1 samples, 0.07%)</title><rect x="39.3045%" y="629" width="0.0656%" height="15" fill="rgb(225,208,6)" fg:x="599" fg:w="1"/><text x="39.5545%" y="639.50"></text></g><g><title>llvm::FastISel::lookUpRegForValue (1 samples, 0.07%)</title><rect x="39.3045%" y="613" width="0.0656%" height="15" fill="rgb(246,181,16)" fg:x="599" fg:w="1"/><text x="39.5545%" y="623.50"></text></g><g><title>llvm::DenseMap&lt;llvm::MachineBasicBlock*, unsigned int, llvm::DenseMapInfo&lt;llvm::MachineBasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::MachineBasicBlock*, unsigned int&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="39.3045%" y="597" width="0.0656%" height="15" fill="rgb(227,129,36)" fg:x="599" fg:w="1"/><text x="39.5545%" y="607.50"></text></g><g><title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.07%)</title><rect x="39.3701%" y="645" width="0.0656%" height="15" fill="rgb(248,117,24)" fg:x="600" fg:w="1"/><text x="39.6201%" y="655.50"></text></g><g><title>llvm::SelectionDAG::Combine (1 samples, 0.07%)</title><rect x="39.3701%" y="629" width="0.0656%" height="15" fill="rgb(214,185,35)" fg:x="600" fg:w="1"/><text x="39.6201%" y="639.50"></text></g><g><title>[libc.so.6] (14 samples, 0.92%)</title><rect x="38.5827%" y="885" width="0.9186%" height="15" fill="rgb(236,150,34)" fg:x="588" fg:w="14"/><text x="38.8327%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.79%)</title><rect x="38.7139%" y="869" width="0.7874%" height="15" fill="rgb(243,228,27)" fg:x="590" fg:w="12"/><text x="38.9639%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="38.7139%" y="853" width="0.7874%" height="15" fill="rgb(245,77,44)" fg:x="590" fg:w="12"/><text x="38.9639%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.79%)</title><rect x="38.7139%" y="837" width="0.7874%" height="15" fill="rgb(235,214,42)" fg:x="590" fg:w="12"/><text x="38.9639%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (12 samples, 0.79%)</title><rect x="38.7139%" y="821" width="0.7874%" height="15" fill="rgb(221,74,3)" fg:x="590" fg:w="12"/><text x="38.9639%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt; (12 samples, 0.79%)</title><rect x="38.7139%" y="805" width="0.7874%" height="15" fill="rgb(206,121,29)" fg:x="590" fg:w="12"/><text x="38.9639%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (12 samples, 0.79%)</title><rect x="38.7139%" y="789" width="0.7874%" height="15" fill="rgb(249,131,53)" fg:x="590" fg:w="12"/><text x="38.9639%" y="799.50"></text></g><g><title>rustc_codegen_ssa::back::write::finish_intra_module_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (10 samples, 0.66%)</title><rect x="38.8451%" y="773" width="0.6562%" height="15" fill="rgb(236,170,29)" fg:x="592" fg:w="10"/><text x="39.0951%" y="783.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (10 samples, 0.66%)</title><rect x="38.8451%" y="757" width="0.6562%" height="15" fill="rgb(247,96,15)" fg:x="592" fg:w="10"/><text x="39.0951%" y="767.50"></text></g><g><title>rustc_codegen_llvm::back::write::write_output_file (9 samples, 0.59%)</title><rect x="38.9108%" y="741" width="0.5906%" height="15" fill="rgb(211,210,7)" fg:x="593" fg:w="9"/><text x="39.1608%" y="751.50"></text></g><g><title>LLVMRustWriteOutputFile (9 samples, 0.59%)</title><rect x="38.9108%" y="725" width="0.5906%" height="15" fill="rgb(240,88,50)" fg:x="593" fg:w="9"/><text x="39.1608%" y="735.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (8 samples, 0.52%)</title><rect x="38.9764%" y="709" width="0.5249%" height="15" fill="rgb(209,229,26)" fg:x="594" fg:w="8"/><text x="39.2264%" y="719.50"></text></g><g><title>llvm::FPPassManager::runOnModule (7 samples, 0.46%)</title><rect x="39.0420%" y="693" width="0.4593%" height="15" fill="rgb(210,68,23)" fg:x="595" fg:w="7"/><text x="39.2920%" y="703.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.20%)</title><rect x="39.3045%" y="677" width="0.1969%" height="15" fill="rgb(229,180,13)" fg:x="599" fg:w="3"/><text x="39.5545%" y="687.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.20%)</title><rect x="39.3045%" y="661" width="0.1969%" height="15" fill="rgb(236,53,44)" fg:x="599" fg:w="3"/><text x="39.5545%" y="671.50"></text></g><g><title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.07%)</title><rect x="39.4357%" y="645" width="0.0656%" height="15" fill="rgb(244,214,29)" fg:x="601" fg:w="1"/><text x="39.6857%" y="655.50"></text></g><g><title>llvm::SelectionDAG::Combine (1 samples, 0.07%)</title><rect x="39.4357%" y="629" width="0.0656%" height="15" fill="rgb(220,75,29)" fg:x="601" fg:w="1"/><text x="39.6857%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="39.5013%" y="885" width="0.0656%" height="15" fill="rgb(214,183,37)" fg:x="602" fg:w="1"/><text x="39.7513%" y="895.50"></text></g><g><title>llvm::DenseMap&lt;llvm::MCFragment*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;llvm::MCFragment*, void&gt;, llvm::detail::DenseSetPair&lt;llvm::MCFragment*&gt; &gt;::grow (1 samples, 0.07%)</title><rect x="39.5013%" y="869" width="0.0656%" height="15" fill="rgb(239,117,29)" fg:x="602" fg:w="1"/><text x="39.7513%" y="879.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.07%)</title><rect x="39.5669%" y="805" width="0.0656%" height="15" fill="rgb(237,171,35)" fg:x="603" fg:w="1"/><text x="39.8169%" y="815.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.07%)</title><rect x="39.5669%" y="789" width="0.0656%" height="15" fill="rgb(229,178,53)" fg:x="603" fg:w="1"/><text x="39.8169%" y="799.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="39.5669%" y="773" width="0.0656%" height="15" fill="rgb(210,102,19)" fg:x="603" fg:w="1"/><text x="39.8169%" y="783.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="39.5669%" y="757" width="0.0656%" height="15" fill="rgb(235,127,22)" fg:x="603" fg:w="1"/><text x="39.8169%" y="767.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="39.5669%" y="741" width="0.0656%" height="15" fill="rgb(244,31,31)" fg:x="603" fg:w="1"/><text x="39.8169%" y="751.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="39.5669%" y="725" width="0.0656%" height="15" fill="rgb(231,43,21)" fg:x="603" fg:w="1"/><text x="39.8169%" y="735.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.07%)</title><rect x="39.5669%" y="709" width="0.0656%" height="15" fill="rgb(217,131,35)" fg:x="603" fg:w="1"/><text x="39.8169%" y="719.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="39.5669%" y="693" width="0.0656%" height="15" fill="rgb(221,149,4)" fg:x="603" fg:w="1"/><text x="39.8169%" y="703.50"></text></g><g><title>extent_split_impl (1 samples, 0.07%)</title><rect x="39.5669%" y="677" width="0.0656%" height="15" fill="rgb(232,170,28)" fg:x="603" fg:w="1"/><text x="39.8169%" y="687.50"></text></g><g><title>_rjem_je_base_alloc_edata (1 samples, 0.07%)</title><rect x="39.5669%" y="661" width="0.0656%" height="15" fill="rgb(238,56,10)" fg:x="603" fg:w="1"/><text x="39.8169%" y="671.50"></text></g><g><title>base_alloc_impl (1 samples, 0.07%)</title><rect x="39.5669%" y="645" width="0.0656%" height="15" fill="rgb(235,196,14)" fg:x="603" fg:w="1"/><text x="39.8169%" y="655.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.20%)</title><rect x="39.5669%" y="885" width="0.1969%" height="15" fill="rgb(216,45,48)" fg:x="603" fg:w="3"/><text x="39.8169%" y="895.50"></text></g><g><title>realloc (3 samples, 0.20%)</title><rect x="39.5669%" y="869" width="0.1969%" height="15" fill="rgb(238,213,17)" fg:x="603" fg:w="3"/><text x="39.8169%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (3 samples, 0.20%)</title><rect x="39.5669%" y="853" width="0.1969%" height="15" fill="rgb(212,13,2)" fg:x="603" fg:w="3"/><text x="39.8169%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (3 samples, 0.20%)</title><rect x="39.5669%" y="837" width="0.1969%" height="15" fill="rgb(240,114,20)" fg:x="603" fg:w="3"/><text x="39.8169%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (3 samples, 0.20%)</title><rect x="39.5669%" y="821" width="0.1969%" height="15" fill="rgb(228,41,40)" fg:x="603" fg:w="3"/><text x="39.8169%" y="831.50"></text></g><g><title>arena_choose (2 samples, 0.13%)</title><rect x="39.6325%" y="805" width="0.1312%" height="15" fill="rgb(244,132,35)" fg:x="604" fg:w="2"/><text x="39.8825%" y="815.50"></text></g><g><title>arena_choose_impl (2 samples, 0.13%)</title><rect x="39.6325%" y="789" width="0.1312%" height="15" fill="rgb(253,189,4)" fg:x="604" fg:w="2"/><text x="39.8825%" y="799.50"></text></g><g><title>_rjem_je_arena_choose_hard (2 samples, 0.13%)</title><rect x="39.6325%" y="773" width="0.1312%" height="15" fill="rgb(224,37,19)" fg:x="604" fg:w="2"/><text x="39.8825%" y="783.50"></text></g><g><title>_rjem_je_arena_new (1 samples, 0.07%)</title><rect x="39.6982%" y="757" width="0.0656%" height="15" fill="rgb(235,223,18)" fg:x="605" fg:w="1"/><text x="39.9482%" y="767.50"></text></g><g><title>_rjem_je_pa_shard_init (1 samples, 0.07%)</title><rect x="39.6982%" y="741" width="0.0656%" height="15" fill="rgb(235,163,25)" fg:x="605" fg:w="1"/><text x="39.9482%" y="751.50"></text></g><g><title>_rjem_je_pac_init (1 samples, 0.07%)</title><rect x="39.6982%" y="725" width="0.0656%" height="15" fill="rgb(217,145,28)" fg:x="605" fg:w="1"/><text x="39.9482%" y="735.50"></text></g><g><title>_rjem_je_ecache_init (1 samples, 0.07%)</title><rect x="39.6982%" y="709" width="0.0656%" height="15" fill="rgb(223,223,32)" fg:x="605" fg:w="1"/><text x="39.9482%" y="719.50"></text></g><g><title>_rjem_je_eset_init (1 samples, 0.07%)</title><rect x="39.6982%" y="693" width="0.0656%" height="15" fill="rgb(227,189,39)" fg:x="605" fg:w="1"/><text x="39.9482%" y="703.50"></text></g><g><title>eset_bin_stats_init (1 samples, 0.07%)</title><rect x="39.6982%" y="677" width="0.0656%" height="15" fill="rgb(248,10,22)" fg:x="605" fg:w="1"/><text x="39.9482%" y="687.50"></text></g><g><title>atomic_store_zu (1 samples, 0.07%)</title><rect x="39.6982%" y="661" width="0.0656%" height="15" fill="rgb(248,46,39)" fg:x="605" fg:w="1"/><text x="39.9482%" y="671.50"></text></g><g><title>opt_xplsfxp260j (19 samples, 1.25%)</title><rect x="38.5827%" y="901" width="1.2467%" height="15" fill="rgb(248,113,48)" fg:x="588" fg:w="19"/><text x="38.8327%" y="911.50"></text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="39.7638%" y="885" width="0.0656%" height="15" fill="rgb(245,16,25)" fg:x="606" fg:w="1"/><text x="40.0138%" y="895.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (2 samples, 0.13%)</title><rect x="39.8294%" y="869" width="0.1312%" height="15" fill="rgb(249,152,16)" fg:x="607" fg:w="2"/><text x="40.0794%" y="879.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.07%)</title><rect x="39.8950%" y="853" width="0.0656%" height="15" fill="rgb(250,16,1)" fg:x="608" fg:w="1"/><text x="40.1450%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="39.8950%" y="837" width="0.0656%" height="15" fill="rgb(249,138,3)" fg:x="608" fg:w="1"/><text x="40.1450%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.07%)</title><rect x="39.8950%" y="821" width="0.0656%" height="15" fill="rgb(227,71,41)" fg:x="608" fg:w="1"/><text x="40.1450%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="39.8950%" y="805" width="0.0656%" height="15" fill="rgb(209,184,23)" fg:x="608" fg:w="1"/><text x="40.1450%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="39.8950%" y="789" width="0.0656%" height="15" fill="rgb(223,215,31)" fg:x="608" fg:w="1"/><text x="40.1450%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="39.8950%" y="773" width="0.0656%" height="15" fill="rgb(210,146,28)" fg:x="608" fg:w="1"/><text x="40.1450%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="39.8950%" y="757" width="0.0656%" height="15" fill="rgb(209,183,41)" fg:x="608" fg:w="1"/><text x="40.1450%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="39.8950%" y="741" width="0.0656%" height="15" fill="rgb(209,224,45)" fg:x="608" fg:w="1"/><text x="40.1450%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="39.8950%" y="725" width="0.0656%" height="15" fill="rgb(224,209,51)" fg:x="608" fg:w="1"/><text x="40.1450%" y="735.50"></text></g><g><title>&lt;std::sys::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="39.9606%" y="869" width="0.1312%" height="15" fill="rgb(223,17,39)" fg:x="609" fg:w="2"/><text x="40.2106%" y="879.50"></text></g><g><title>closedir (2 samples, 0.13%)</title><rect x="40.0919%" y="869" width="0.1312%" height="15" fill="rgb(234,204,37)" fg:x="611" fg:w="2"/><text x="40.3419%" y="879.50"></text></g><g><title>[[heap]] (7 samples, 0.46%)</title><rect x="39.8294%" y="885" width="0.4593%" height="15" fill="rgb(236,120,5)" fg:x="607" fg:w="7"/><text x="40.0794%" y="895.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.07%)</title><rect x="40.2231%" y="869" width="0.0656%" height="15" fill="rgb(248,97,27)" fg:x="613" fg:w="1"/><text x="40.4731%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="40.2887%" y="869" width="0.1312%" height="15" fill="rgb(240,66,17)" fg:x="614" fg:w="2"/><text x="40.5387%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.20%)</title><rect x="40.4199%" y="869" width="0.1969%" height="15" fill="rgb(210,79,3)" fg:x="616" fg:w="3"/><text x="40.6699%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="40.5512%" y="853" width="0.0656%" height="15" fill="rgb(214,176,27)" fg:x="618" fg:w="1"/><text x="40.8012%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="40.5512%" y="837" width="0.0656%" height="15" fill="rgb(235,185,3)" fg:x="618" fg:w="1"/><text x="40.8012%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="40.5512%" y="821" width="0.0656%" height="15" fill="rgb(227,24,12)" fg:x="618" fg:w="1"/><text x="40.8012%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="40.5512%" y="805" width="0.0656%" height="15" fill="rgb(252,169,48)" fg:x="618" fg:w="1"/><text x="40.8012%" y="815.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="40.5512%" y="789" width="0.0656%" height="15" fill="rgb(212,65,1)" fg:x="618" fg:w="1"/><text x="40.8012%" y="799.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.07%)</title><rect x="40.5512%" y="773" width="0.0656%" height="15" fill="rgb(242,39,24)" fg:x="618" fg:w="1"/><text x="40.8012%" y="783.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.07%)</title><rect x="40.5512%" y="757" width="0.0656%" height="15" fill="rgb(249,32,23)" fg:x="618" fg:w="1"/><text x="40.8012%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="40.5512%" y="741" width="0.0656%" height="15" fill="rgb(251,195,23)" fg:x="618" fg:w="1"/><text x="40.8012%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="40.5512%" y="725" width="0.0656%" height="15" fill="rgb(236,174,8)" fg:x="618" fg:w="1"/><text x="40.8012%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="40.5512%" y="709" width="0.0656%" height="15" fill="rgb(220,197,8)" fg:x="618" fg:w="1"/><text x="40.8012%" y="719.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="40.6168%" y="869" width="0.3937%" height="15" fill="rgb(240,108,37)" fg:x="619" fg:w="6"/><text x="40.8668%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="40.6168%" y="853" width="0.3937%" height="15" fill="rgb(232,176,24)" fg:x="619" fg:w="6"/><text x="40.8668%" y="863.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="40.6168%" y="837" width="0.3937%" height="15" fill="rgb(243,35,29)" fg:x="619" fg:w="6"/><text x="40.8668%" y="847.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (6 samples, 0.39%)</title><rect x="40.6168%" y="821" width="0.3937%" height="15" fill="rgb(210,37,18)" fg:x="619" fg:w="6"/><text x="40.8668%" y="831.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.33%)</title><rect x="40.6824%" y="805" width="0.3281%" height="15" fill="rgb(224,184,40)" fg:x="620" fg:w="5"/><text x="40.9324%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.33%)</title><rect x="40.6824%" y="789" width="0.3281%" height="15" fill="rgb(236,39,29)" fg:x="620" fg:w="5"/><text x="40.9324%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.33%)</title><rect x="40.6824%" y="773" width="0.3281%" height="15" fill="rgb(232,48,39)" fg:x="620" fg:w="5"/><text x="40.9324%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.33%)</title><rect x="40.6824%" y="757" width="0.3281%" height="15" fill="rgb(236,34,42)" fg:x="620" fg:w="5"/><text x="40.9324%" y="767.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="41.0105%" y="869" width="0.0656%" height="15" fill="rgb(243,106,37)" fg:x="625" fg:w="1"/><text x="41.2605%" y="879.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (1 samples, 0.07%)</title><rect x="41.1417%" y="853" width="0.0656%" height="15" fill="rgb(218,96,6)" fg:x="627" fg:w="1"/><text x="41.3917%" y="863.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="41.0761%" y="869" width="0.1969%" height="15" fill="rgb(235,130,12)" fg:x="626" fg:w="3"/><text x="41.3261%" y="879.50"></text></g><g><title>std::sys::unix::os::set_errno (1 samples, 0.07%)</title><rect x="41.2073%" y="853" width="0.0656%" height="15" fill="rgb(231,95,0)" fg:x="628" fg:w="1"/><text x="41.4573%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="41.2730%" y="869" width="0.0656%" height="15" fill="rgb(228,12,23)" fg:x="629" fg:w="1"/><text x="41.5230%" y="879.50"></text></g><g><title>__close_nocancel (1 samples, 0.07%)</title><rect x="41.3386%" y="869" width="0.0656%" height="15" fill="rgb(216,12,1)" fg:x="630" fg:w="1"/><text x="41.5886%" y="879.50"></text></g><g><title>getdents64 (2 samples, 0.13%)</title><rect x="41.4042%" y="869" width="0.1312%" height="15" fill="rgb(219,59,3)" fg:x="631" fg:w="2"/><text x="41.6542%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="41.5354%" y="869" width="0.0656%" height="15" fill="rgb(215,208,46)" fg:x="633" fg:w="1"/><text x="41.7854%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="41.5354%" y="853" width="0.0656%" height="15" fill="rgb(254,224,29)" fg:x="633" fg:w="1"/><text x="41.7854%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="41.5354%" y="837" width="0.0656%" height="15" fill="rgb(232,14,29)" fg:x="633" fg:w="1"/><text x="41.7854%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="41.5354%" y="821" width="0.0656%" height="15" fill="rgb(208,45,52)" fg:x="633" fg:w="1"/><text x="41.7854%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.07%)</title><rect x="41.5354%" y="805" width="0.0656%" height="15" fill="rgb(234,191,28)" fg:x="633" fg:w="1"/><text x="41.7854%" y="815.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.07%)</title><rect x="41.5354%" y="789" width="0.0656%" height="15" fill="rgb(244,67,43)" fg:x="633" fg:w="1"/><text x="41.7854%" y="799.50"></text></g><g><title>open64 (2 samples, 0.13%)</title><rect x="41.6010%" y="869" width="0.1312%" height="15" fill="rgb(236,189,24)" fg:x="634" fg:w="2"/><text x="41.8510%" y="879.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.07%)</title><rect x="41.7323%" y="869" width="0.0656%" height="15" fill="rgb(239,214,33)" fg:x="636" fg:w="1"/><text x="41.9823%" y="879.50"></text></g><g><title>std::fs::DirEntry::file_name (1 samples, 0.07%)</title><rect x="41.7979%" y="869" width="0.0656%" height="15" fill="rgb(226,176,41)" fg:x="637" fg:w="1"/><text x="42.0479%" y="879.50"></text></g><g><title>std::sys::unix::fs::DirEntry::file_name (1 samples, 0.07%)</title><rect x="41.7979%" y="853" width="0.0656%" height="15" fill="rgb(248,47,8)" fg:x="637" fg:w="1"/><text x="42.0479%" y="863.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.07%)</title><rect x="41.7979%" y="837" width="0.0656%" height="15" fill="rgb(218,81,44)" fg:x="637" fg:w="1"/><text x="42.0479%" y="847.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.07%)</title><rect x="41.7979%" y="821" width="0.0656%" height="15" fill="rgb(213,98,6)" fg:x="637" fg:w="1"/><text x="42.0479%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="41.7979%" y="805" width="0.0656%" height="15" fill="rgb(222,85,22)" fg:x="637" fg:w="1"/><text x="42.0479%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="41.7979%" y="789" width="0.0656%" height="15" fill="rgb(239,46,39)" fg:x="637" fg:w="1"/><text x="42.0479%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="41.7979%" y="773" width="0.0656%" height="15" fill="rgb(237,12,29)" fg:x="637" fg:w="1"/><text x="42.0479%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="41.7979%" y="757" width="0.0656%" height="15" fill="rgb(214,77,8)" fg:x="637" fg:w="1"/><text x="42.0479%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="41.7979%" y="741" width="0.0656%" height="15" fill="rgb(217,168,37)" fg:x="637" fg:w="1"/><text x="42.0479%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="41.7979%" y="725" width="0.0656%" height="15" fill="rgb(221,217,23)" fg:x="637" fg:w="1"/><text x="42.0479%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="41.7979%" y="709" width="0.0656%" height="15" fill="rgb(243,229,36)" fg:x="637" fg:w="1"/><text x="42.0479%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="41.7979%" y="693" width="0.0656%" height="15" fill="rgb(251,163,40)" fg:x="637" fg:w="1"/><text x="42.0479%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="41.7979%" y="677" width="0.0656%" height="15" fill="rgb(237,222,12)" fg:x="637" fg:w="1"/><text x="42.0479%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="41.7979%" y="661" width="0.0656%" height="15" fill="rgb(248,132,6)" fg:x="637" fg:w="1"/><text x="42.0479%" y="671.50"></text></g><g><title>std::fs::OpenOptions::_open (7 samples, 0.46%)</title><rect x="41.8635%" y="869" width="0.4593%" height="15" fill="rgb(227,167,50)" fg:x="638" fg:w="7"/><text x="42.1135%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::open (4 samples, 0.26%)</title><rect x="42.0604%" y="853" width="0.2625%" height="15" fill="rgb(242,84,37)" fg:x="641" fg:w="4"/><text x="42.3104%" y="863.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.26%)</title><rect x="42.0604%" y="837" width="0.2625%" height="15" fill="rgb(212,4,50)" fg:x="641" fg:w="4"/><text x="42.3104%" y="847.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.26%)</title><rect x="42.0604%" y="821" width="0.2625%" height="15" fill="rgb(230,228,32)" fg:x="641" fg:w="4"/><text x="42.3104%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.07%)</title><rect x="42.2572%" y="805" width="0.0656%" height="15" fill="rgb(248,217,23)" fg:x="644" fg:w="1"/><text x="42.5072%" y="815.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.07%)</title><rect x="42.3228%" y="869" width="0.0656%" height="15" fill="rgb(238,197,32)" fg:x="645" fg:w="1"/><text x="42.5728%" y="879.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.07%)</title><rect x="42.3228%" y="853" width="0.0656%" height="15" fill="rgb(236,106,1)" fg:x="645" fg:w="1"/><text x="42.5728%" y="863.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.07%)</title><rect x="42.3885%" y="869" width="0.0656%" height="15" fill="rgb(219,228,13)" fg:x="646" fg:w="1"/><text x="42.6385%" y="879.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.07%)</title><rect x="42.3885%" y="853" width="0.0656%" height="15" fill="rgb(238,30,35)" fg:x="646" fg:w="1"/><text x="42.6385%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.07%)</title><rect x="42.3885%" y="837" width="0.0656%" height="15" fill="rgb(236,70,23)" fg:x="646" fg:w="1"/><text x="42.6385%" y="847.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.07%)</title><rect x="42.3885%" y="821" width="0.0656%" height="15" fill="rgb(249,104,48)" fg:x="646" fg:w="1"/><text x="42.6385%" y="831.50"></text></g><g><title>std::io::default_read_to_string (2 samples, 0.13%)</title><rect x="42.4541%" y="869" width="0.1312%" height="15" fill="rgb(254,117,50)" fg:x="647" fg:w="2"/><text x="42.7041%" y="879.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.13%)</title><rect x="42.4541%" y="853" width="0.1312%" height="15" fill="rgb(223,152,4)" fg:x="647" fg:w="2"/><text x="42.7041%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::open_c (3 samples, 0.20%)</title><rect x="42.5853%" y="869" width="0.1969%" height="15" fill="rgb(245,6,2)" fg:x="649" fg:w="3"/><text x="42.8353%" y="879.50"></text></g><g><title>std::sys::unix::cvt_r (3 samples, 0.20%)</title><rect x="42.5853%" y="853" width="0.1969%" height="15" fill="rgb(249,150,24)" fg:x="649" fg:w="3"/><text x="42.8353%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (3 samples, 0.20%)</title><rect x="42.5853%" y="837" width="0.1969%" height="15" fill="rgb(228,185,42)" fg:x="649" fg:w="3"/><text x="42.8353%" y="847.50"></text></g><g><title>std::path::Path::to_path_buf (2 samples, 0.13%)</title><rect x="42.7822%" y="853" width="0.1312%" height="15" fill="rgb(226,39,33)" fg:x="652" fg:w="2"/><text x="43.0322%" y="863.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (2 samples, 0.13%)</title><rect x="42.7822%" y="837" width="0.1312%" height="15" fill="rgb(221,166,19)" fg:x="652" fg:w="2"/><text x="43.0322%" y="847.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (2 samples, 0.13%)</title><rect x="42.7822%" y="821" width="0.1312%" height="15" fill="rgb(209,109,2)" fg:x="652" fg:w="2"/><text x="43.0322%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="42.7822%" y="805" width="0.1312%" height="15" fill="rgb(252,216,26)" fg:x="652" fg:w="2"/><text x="43.0322%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.13%)</title><rect x="42.7822%" y="789" width="0.1312%" height="15" fill="rgb(227,173,36)" fg:x="652" fg:w="2"/><text x="43.0322%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="42.7822%" y="773" width="0.1312%" height="15" fill="rgb(209,90,7)" fg:x="652" fg:w="2"/><text x="43.0322%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.13%)</title><rect x="42.7822%" y="757" width="0.1312%" height="15" fill="rgb(250,194,11)" fg:x="652" fg:w="2"/><text x="43.0322%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="42.7822%" y="741" width="0.1312%" height="15" fill="rgb(220,72,50)" fg:x="652" fg:w="2"/><text x="43.0322%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="42.7822%" y="725" width="0.1312%" height="15" fill="rgb(222,106,48)" fg:x="652" fg:w="2"/><text x="43.0322%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="42.7822%" y="709" width="0.1312%" height="15" fill="rgb(216,220,45)" fg:x="652" fg:w="2"/><text x="43.0322%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.13%)</title><rect x="42.7822%" y="693" width="0.1312%" height="15" fill="rgb(234,112,18)" fg:x="652" fg:w="2"/><text x="43.0322%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="42.7822%" y="677" width="0.1312%" height="15" fill="rgb(206,179,9)" fg:x="652" fg:w="2"/><text x="43.0322%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="42.7822%" y="661" width="0.1312%" height="15" fill="rgb(215,115,40)" fg:x="652" fg:w="2"/><text x="43.0322%" y="671.50"></text></g><g><title>std::sys::unix::fs::readdir (3 samples, 0.20%)</title><rect x="42.7822%" y="869" width="0.1969%" height="15" fill="rgb(222,69,34)" fg:x="652" fg:w="3"/><text x="43.0322%" y="879.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.07%)</title><rect x="42.9134%" y="853" width="0.0656%" height="15" fill="rgb(209,161,10)" fg:x="654" fg:w="1"/><text x="43.1634%" y="863.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.07%)</title><rect x="42.9134%" y="837" width="0.0656%" height="15" fill="rgb(217,6,38)" fg:x="654" fg:w="1"/><text x="43.1634%" y="847.50"></text></g><g><title>std::sys::unix::fs::readdir::{{closure}} (1 samples, 0.07%)</title><rect x="42.9134%" y="821" width="0.0656%" height="15" fill="rgb(229,229,48)" fg:x="654" fg:w="1"/><text x="43.1634%" y="831.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.07%)</title><rect x="42.9790%" y="869" width="0.0656%" height="15" fill="rgb(225,21,28)" fg:x="655" fg:w="1"/><text x="43.2290%" y="879.50"></text></g><g><title>[[stack]] (43 samples, 2.82%)</title><rect x="40.2887%" y="885" width="2.8215%" height="15" fill="rgb(206,33,13)" fg:x="614" fg:w="43"/><text x="40.5387%" y="895.50">[[..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.07%)</title><rect x="43.0446%" y="869" width="0.0656%" height="15" fill="rgb(242,178,17)" fg:x="656" fg:w="1"/><text x="43.2946%" y="879.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.07%)</title><rect x="43.1102%" y="869" width="0.0656%" height="15" fill="rgb(220,162,5)" fg:x="657" fg:w="1"/><text x="43.3602%" y="879.50"></text></g><g><title>__close (3 samples, 0.20%)</title><rect x="43.1759%" y="869" width="0.1969%" height="15" fill="rgb(210,33,43)" fg:x="658" fg:w="3"/><text x="43.4259%" y="879.50"></text></g><g><title>[anon] (5 samples, 0.33%)</title><rect x="43.1102%" y="885" width="0.3281%" height="15" fill="rgb(216,116,54)" fg:x="657" fg:w="5"/><text x="43.3602%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="43.3727%" y="869" width="0.0656%" height="15" fill="rgb(249,92,24)" fg:x="661" fg:w="1"/><text x="43.6227%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.39%)</title><rect x="43.4383%" y="885" width="0.3937%" height="15" fill="rgb(231,189,14)" fg:x="662" fg:w="6"/><text x="43.6883%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="43.7664%" y="869" width="0.0656%" height="15" fill="rgb(230,8,41)" fg:x="667" fg:w="1"/><text x="44.0164%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="43.7664%" y="853" width="0.0656%" height="15" fill="rgb(249,7,27)" fg:x="667" fg:w="1"/><text x="44.0164%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="43.7664%" y="837" width="0.0656%" height="15" fill="rgb(232,86,5)" fg:x="667" fg:w="1"/><text x="44.0164%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="43.7664%" y="821" width="0.0656%" height="15" fill="rgb(224,175,18)" fg:x="667" fg:w="1"/><text x="44.0164%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.20%)</title><rect x="43.8320%" y="869" width="0.1969%" height="15" fill="rgb(220,129,12)" fg:x="668" fg:w="3"/><text x="44.0820%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="44.0289%" y="869" width="0.0656%" height="15" fill="rgb(210,19,36)" fg:x="671" fg:w="1"/><text x="44.2789%" y="879.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="44.0945%" y="869" width="0.0656%" height="15" fill="rgb(219,96,14)" fg:x="672" fg:w="1"/><text x="44.3445%" y="879.50"></text></g><g><title>__open64_nocancel (1 samples, 0.07%)</title><rect x="44.1601%" y="869" width="0.0656%" height="15" fill="rgb(249,106,1)" fg:x="673" fg:w="1"/><text x="44.4101%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.20%)</title><rect x="44.2257%" y="869" width="0.1969%" height="15" fill="rgb(249,155,20)" fg:x="674" fg:w="3"/><text x="44.4757%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.4226%" y="869" width="0.0656%" height="15" fill="rgb(244,168,9)" fg:x="677" fg:w="1"/><text x="44.6726%" y="879.50"></text></g><g><title>opendir (2 samples, 0.13%)</title><rect x="44.4882%" y="869" width="0.1312%" height="15" fill="rgb(216,23,50)" fg:x="678" fg:w="2"/><text x="44.7382%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2 samples, 0.13%)</title><rect x="44.9475%" y="821" width="0.1312%" height="15" fill="rgb(224,219,20)" fg:x="685" fg:w="2"/><text x="45.1975%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (2 samples, 0.13%)</title><rect x="44.9475%" y="805" width="0.1312%" height="15" fill="rgb(222,156,15)" fg:x="685" fg:w="2"/><text x="45.1975%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.13%)</title><rect x="44.9475%" y="789" width="0.1312%" height="15" fill="rgb(231,97,17)" fg:x="685" fg:w="2"/><text x="45.1975%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.13%)</title><rect x="44.9475%" y="773" width="0.1312%" height="15" fill="rgb(218,70,48)" fg:x="685" fg:w="2"/><text x="45.1975%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="44.9475%" y="757" width="0.1312%" height="15" fill="rgb(212,196,52)" fg:x="685" fg:w="2"/><text x="45.1975%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.13%)</title><rect x="44.9475%" y="741" width="0.1312%" height="15" fill="rgb(243,203,18)" fg:x="685" fg:w="2"/><text x="45.1975%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.13%)</title><rect x="44.9475%" y="725" width="0.1312%" height="15" fill="rgb(252,125,41)" fg:x="685" fg:w="2"/><text x="45.1975%" y="735.50"></text></g><g><title>proc_probe::explore_children (6 samples, 0.39%)</title><rect x="44.7507%" y="853" width="0.3937%" height="15" fill="rgb(223,180,33)" fg:x="682" fg:w="6"/><text x="45.0007%" y="863.50"></text></g><g><title>proc_probe::list_children (6 samples, 0.39%)</title><rect x="44.7507%" y="837" width="0.3937%" height="15" fill="rgb(254,159,46)" fg:x="682" fg:w="6"/><text x="45.0007%" y="847.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="45.0787%" y="821" width="0.0656%" height="15" fill="rgb(254,38,10)" fg:x="687" fg:w="1"/><text x="45.3287%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="45.2756%" y="837" width="0.0656%" height="15" fill="rgb(208,217,32)" fg:x="690" fg:w="1"/><text x="45.5256%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (3 samples, 0.20%)</title><rect x="45.3412%" y="837" width="0.1969%" height="15" fill="rgb(221,120,13)" fg:x="691" fg:w="3"/><text x="45.5912%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (3 samples, 0.20%)</title><rect x="45.3412%" y="821" width="0.1969%" height="15" fill="rgb(246,54,52)" fg:x="691" fg:w="3"/><text x="45.5912%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (3 samples, 0.20%)</title><rect x="45.3412%" y="805" width="0.1969%" height="15" fill="rgb(242,34,25)" fg:x="691" fg:w="3"/><text x="45.5912%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (3 samples, 0.20%)</title><rect x="45.3412%" y="789" width="0.1969%" height="15" fill="rgb(247,209,9)" fg:x="691" fg:w="3"/><text x="45.5912%" y="799.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="45.3412%" y="773" width="0.1969%" height="15" fill="rgb(228,71,26)" fg:x="691" fg:w="3"/><text x="45.5912%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (3 samples, 0.20%)</title><rect x="45.5381%" y="821" width="0.1969%" height="15" fill="rgb(222,145,49)" fg:x="694" fg:w="3"/><text x="45.7881%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (2 samples, 0.13%)</title><rect x="45.6037%" y="805" width="0.1312%" height="15" fill="rgb(218,121,17)" fg:x="695" fg:w="2"/><text x="45.8537%" y="815.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="45.6037%" y="789" width="0.1312%" height="15" fill="rgb(244,50,7)" fg:x="695" fg:w="2"/><text x="45.8537%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="45.6037%" y="773" width="0.1312%" height="15" fill="rgb(246,229,37)" fg:x="695" fg:w="2"/><text x="45.8537%" y="783.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="45.6037%" y="757" width="0.1312%" height="15" fill="rgb(225,18,5)" fg:x="695" fg:w="2"/><text x="45.8537%" y="767.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (2 samples, 0.13%)</title><rect x="45.6037%" y="741" width="0.1312%" height="15" fill="rgb(213,204,8)" fg:x="695" fg:w="2"/><text x="45.8537%" y="751.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.13%)</title><rect x="45.6037%" y="725" width="0.1312%" height="15" fill="rgb(238,103,6)" fg:x="695" fg:w="2"/><text x="45.8537%" y="735.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.13%)</title><rect x="45.6037%" y="709" width="0.1312%" height="15" fill="rgb(222,25,35)" fg:x="695" fg:w="2"/><text x="45.8537%" y="719.50"></text></g><g><title>proc_probe::parse_line (9 samples, 0.59%)</title><rect x="45.5381%" y="837" width="0.5906%" height="15" fill="rgb(213,203,35)" fg:x="694" fg:w="9"/><text x="45.7881%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.39%)</title><rect x="45.7349%" y="821" width="0.3937%" height="15" fill="rgb(221,79,53)" fg:x="697" fg:w="6"/><text x="45.9849%" y="831.50"></text></g><g><title>proc_probe::main (24 samples, 1.57%)</title><rect x="44.6194%" y="869" width="1.5748%" height="15" fill="rgb(243,200,35)" fg:x="680" fg:w="24"/><text x="44.8694%" y="879.50"></text></g><g><title>proc_probe::measure (16 samples, 1.05%)</title><rect x="45.1444%" y="853" width="1.0499%" height="15" fill="rgb(248,60,25)" fg:x="688" fg:w="16"/><text x="45.3944%" y="863.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="46.1286%" y="837" width="0.0656%" height="15" fill="rgb(227,53,46)" fg:x="703" fg:w="1"/><text x="46.3786%" y="847.50"></text></g><g><title>read (5 samples, 0.33%)</title><rect x="46.1942%" y="869" width="0.3281%" height="15" fill="rgb(216,120,32)" fg:x="704" fg:w="5"/><text x="46.4442%" y="879.50"></text></g><g><title>statx (3 samples, 0.20%)</title><rect x="46.5223%" y="869" width="0.1969%" height="15" fill="rgb(220,134,1)" fg:x="709" fg:w="3"/><text x="46.7723%" y="879.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.07%)</title><rect x="46.7192%" y="869" width="0.0656%" height="15" fill="rgb(237,168,5)" fg:x="712" fg:w="1"/><text x="46.9692%" y="879.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.07%)</title><rect x="46.7848%" y="869" width="0.0656%" height="15" fill="rgb(231,100,33)" fg:x="713" fg:w="1"/><text x="47.0348%" y="879.50"></text></g><g><title>std::io::default_read_to_end (2 samples, 0.13%)</title><rect x="46.8504%" y="869" width="0.1312%" height="15" fill="rgb(236,177,47)" fg:x="714" fg:w="2"/><text x="47.1004%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::open_c (2 samples, 0.13%)</title><rect x="46.9816%" y="869" width="0.1312%" height="15" fill="rgb(235,7,49)" fg:x="716" fg:w="2"/><text x="47.2316%" y="879.50"></text></g><g><title>[unknown] (51 samples, 3.35%)</title><rect x="43.8320%" y="885" width="3.3465%" height="15" fill="rgb(232,119,22)" fg:x="668" fg:w="51"/><text x="44.0820%" y="895.50">[un..</text></g><g><title>wait4 (1 samples, 0.07%)</title><rect x="47.1129%" y="869" width="0.0656%" height="15" fill="rgb(254,73,53)" fg:x="718" fg:w="1"/><text x="47.3629%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="47.3753%" y="613" width="0.0656%" height="15" fill="rgb(251,35,20)" fg:x="722" fg:w="1"/><text x="47.6253%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="47.3753%" y="597" width="0.0656%" height="15" fill="rgb(241,119,20)" fg:x="722" fg:w="1"/><text x="47.6253%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.13%)</title><rect x="47.4409%" y="597" width="0.1312%" height="15" fill="rgb(207,102,14)" fg:x="723" fg:w="2"/><text x="47.6909%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.13%)</title><rect x="47.4409%" y="581" width="0.1312%" height="15" fill="rgb(248,201,50)" fg:x="723" fg:w="2"/><text x="47.6909%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.13%)</title><rect x="47.4409%" y="565" width="0.1312%" height="15" fill="rgb(222,185,44)" fg:x="723" fg:w="2"/><text x="47.6909%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.13%)</title><rect x="47.4409%" y="549" width="0.1312%" height="15" fill="rgb(218,107,18)" fg:x="723" fg:w="2"/><text x="47.6909%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.13%)</title><rect x="47.4409%" y="533" width="0.1312%" height="15" fill="rgb(237,177,39)" fg:x="723" fg:w="2"/><text x="47.6909%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.13%)</title><rect x="47.4409%" y="517" width="0.1312%" height="15" fill="rgb(246,69,6)" fg:x="723" fg:w="2"/><text x="47.6909%" y="527.50"></text></g><g><title>realloc (2 samples, 0.13%)</title><rect x="47.4409%" y="501" width="0.1312%" height="15" fill="rgb(234,208,37)" fg:x="723" fg:w="2"/><text x="47.6909%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="47.4409%" y="485" width="0.1312%" height="15" fill="rgb(225,4,6)" fg:x="723" fg:w="2"/><text x="47.6909%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="47.4409%" y="469" width="0.1312%" height="15" fill="rgb(233,45,0)" fg:x="723" fg:w="2"/><text x="47.6909%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.26%)</title><rect x="47.4409%" y="613" width="0.2625%" height="15" fill="rgb(226,136,5)" fg:x="723" fg:w="4"/><text x="47.6909%" y="623.50"></text></g><g><title>core::ptr::write (2 samples, 0.13%)</title><rect x="47.5722%" y="597" width="0.1312%" height="15" fill="rgb(211,91,47)" fg:x="725" fg:w="2"/><text x="47.8222%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.26%)</title><rect x="47.7034%" y="597" width="0.2625%" height="15" fill="rgb(242,88,51)" fg:x="727" fg:w="4"/><text x="47.9534%" y="607.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="47.9003%" y="581" width="0.0656%" height="15" fill="rgb(230,91,28)" fg:x="730" fg:w="1"/><text x="48.1503%" y="591.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.20%)</title><rect x="48.0315%" y="565" width="0.1969%" height="15" fill="rgb(254,186,29)" fg:x="732" fg:w="3"/><text x="48.2815%" y="575.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="48.2283%" y="485" width="0.1969%" height="15" fill="rgb(238,6,4)" fg:x="735" fg:w="3"/><text x="48.4783%" y="495.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (3 samples, 0.20%)</title><rect x="48.2283%" y="469" width="0.1969%" height="15" fill="rgb(221,151,16)" fg:x="735" fg:w="3"/><text x="48.4783%" y="479.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.13%)</title><rect x="48.2940%" y="453" width="0.1312%" height="15" fill="rgb(251,143,52)" fg:x="736" fg:w="2"/><text x="48.5440%" y="463.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.07%)</title><rect x="48.3596%" y="437" width="0.0656%" height="15" fill="rgb(206,90,15)" fg:x="737" fg:w="1"/><text x="48.6096%" y="447.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.07%)</title><rect x="48.3596%" y="421" width="0.0656%" height="15" fill="rgb(218,35,8)" fg:x="737" fg:w="1"/><text x="48.6096%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.52%)</title><rect x="48.0315%" y="581" width="0.5249%" height="15" fill="rgb(239,215,6)" fg:x="732" fg:w="8"/><text x="48.2815%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.33%)</title><rect x="48.2283%" y="565" width="0.3281%" height="15" fill="rgb(245,116,39)" fg:x="735" fg:w="5"/><text x="48.4783%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.33%)</title><rect x="48.2283%" y="549" width="0.3281%" height="15" fill="rgb(242,65,28)" fg:x="735" fg:w="5"/><text x="48.4783%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.33%)</title><rect x="48.2283%" y="533" width="0.3281%" height="15" fill="rgb(252,132,53)" fg:x="735" fg:w="5"/><text x="48.4783%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (5 samples, 0.33%)</title><rect x="48.2283%" y="517" width="0.3281%" height="15" fill="rgb(224,159,50)" fg:x="735" fg:w="5"/><text x="48.4783%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.33%)</title><rect x="48.2283%" y="501" width="0.3281%" height="15" fill="rgb(224,93,4)" fg:x="735" fg:w="5"/><text x="48.4783%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2 samples, 0.13%)</title><rect x="48.4252%" y="485" width="0.1312%" height="15" fill="rgb(208,81,34)" fg:x="738" fg:w="2"/><text x="48.6752%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.13%)</title><rect x="48.4252%" y="469" width="0.1312%" height="15" fill="rgb(233,92,54)" fg:x="738" fg:w="2"/><text x="48.6752%" y="479.50"></text></g><g><title>proc_probe::list_children::{{closure}} (2 samples, 0.13%)</title><rect x="48.4252%" y="453" width="0.1312%" height="15" fill="rgb(237,21,14)" fg:x="738" fg:w="2"/><text x="48.6752%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.13%)</title><rect x="48.4252%" y="437" width="0.1312%" height="15" fill="rgb(249,128,51)" fg:x="738" fg:w="2"/><text x="48.6752%" y="447.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (2 samples, 0.13%)</title><rect x="48.4252%" y="421" width="0.1312%" height="15" fill="rgb(223,129,24)" fg:x="738" fg:w="2"/><text x="48.6752%" y="431.50"></text></g><g><title>core::num::from_str_radix (2 samples, 0.13%)</title><rect x="48.4252%" y="405" width="0.1312%" height="15" fill="rgb(231,168,25)" fg:x="738" fg:w="2"/><text x="48.6752%" y="415.50"></text></g><g><title>&lt;u32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.07%)</title><rect x="48.4908%" y="389" width="0.0656%" height="15" fill="rgb(224,39,20)" fg:x="739" fg:w="1"/><text x="48.7408%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.20%)</title><rect x="48.5564%" y="581" width="0.1969%" height="15" fill="rgb(225,152,53)" fg:x="740" fg:w="3"/><text x="48.8064%" y="591.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.07%)</title><rect x="48.7533%" y="565" width="0.0656%" height="15" fill="rgb(252,17,24)" fg:x="743" fg:w="1"/><text x="49.0033%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="48.7533%" y="549" width="0.0656%" height="15" fill="rgb(250,114,30)" fg:x="743" fg:w="1"/><text x="49.0033%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="48.7533%" y="533" width="0.0656%" height="15" fill="rgb(229,5,4)" fg:x="743" fg:w="1"/><text x="49.0033%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="48.7533%" y="517" width="0.0656%" height="15" fill="rgb(225,176,49)" fg:x="743" fg:w="1"/><text x="49.0033%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="48.7533%" y="501" width="0.0656%" height="15" fill="rgb(224,221,49)" fg:x="743" fg:w="1"/><text x="49.0033%" y="511.50"></text></g><g><title>core::mem::zeroed (1 samples, 0.07%)</title><rect x="49.0814%" y="501" width="0.0656%" height="15" fill="rgb(253,169,27)" fg:x="748" fg:w="1"/><text x="49.3314%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (1 samples, 0.07%)</title><rect x="49.0814%" y="485" width="0.0656%" height="15" fill="rgb(211,206,16)" fg:x="748" fg:w="1"/><text x="49.3314%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.07%)</title><rect x="49.0814%" y="469" width="0.0656%" height="15" fill="rgb(244,87,35)" fg:x="748" fg:w="1"/><text x="49.3314%" y="479.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.07%)</title><rect x="49.0814%" y="453" width="0.0656%" height="15" fill="rgb(246,28,10)" fg:x="748" fg:w="1"/><text x="49.3314%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (3 samples, 0.20%)</title><rect x="49.1470%" y="501" width="0.1969%" height="15" fill="rgb(229,12,44)" fg:x="749" fg:w="3"/><text x="49.3970%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.20%)</title><rect x="49.1470%" y="485" width="0.1969%" height="15" fill="rgb(210,145,37)" fg:x="749" fg:w="3"/><text x="49.3970%" y="495.50"></text></g><g><title>std::fs::File::metadata (13 samples, 0.85%)</title><rect x="48.8845%" y="549" width="0.8530%" height="15" fill="rgb(227,112,52)" fg:x="745" fg:w="13"/><text x="49.1345%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (13 samples, 0.85%)</title><rect x="48.8845%" y="533" width="0.8530%" height="15" fill="rgb(238,155,34)" fg:x="745" fg:w="13"/><text x="49.1345%" y="543.50"></text></g><g><title>std::sys::unix::fs::try_statx (13 samples, 0.85%)</title><rect x="48.8845%" y="517" width="0.8530%" height="15" fill="rgb(239,226,36)" fg:x="745" fg:w="13"/><text x="49.1345%" y="527.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.39%)</title><rect x="49.3438%" y="501" width="0.3937%" height="15" fill="rgb(230,16,23)" fg:x="752" fg:w="6"/><text x="49.5938%" y="511.50"></text></g><g><title>statx (6 samples, 0.39%)</title><rect x="49.3438%" y="485" width="0.3937%" height="15" fill="rgb(236,171,36)" fg:x="752" fg:w="6"/><text x="49.5938%" y="495.50"></text></g><g><title>std::fs::buffer_capacity_required (20 samples, 1.31%)</title><rect x="48.8189%" y="565" width="1.3123%" height="15" fill="rgb(221,22,14)" fg:x="744" fg:w="20"/><text x="49.0689%" y="575.50"></text></g><g><title>std::io::Seek::stream_position (6 samples, 0.39%)</title><rect x="49.7375%" y="549" width="0.3937%" height="15" fill="rgb(242,43,11)" fg:x="758" fg:w="6"/><text x="49.9875%" y="559.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (6 samples, 0.39%)</title><rect x="49.7375%" y="533" width="0.3937%" height="15" fill="rgb(232,69,23)" fg:x="758" fg:w="6"/><text x="49.9875%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::seek (6 samples, 0.39%)</title><rect x="49.7375%" y="517" width="0.3937%" height="15" fill="rgb(216,180,54)" fg:x="758" fg:w="6"/><text x="49.9875%" y="527.50"></text></g><g><title>llseek (6 samples, 0.39%)</title><rect x="49.7375%" y="501" width="0.3937%" height="15" fill="rgb(216,5,24)" fg:x="758" fg:w="6"/><text x="49.9875%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (33 samples, 2.17%)</title><rect x="48.7533%" y="581" width="2.1654%" height="15" fill="rgb(225,89,9)" fg:x="743" fg:w="33"/><text x="49.0033%" y="591.50">&lt;..</text></g><g><title>std::io::default_read_to_string (12 samples, 0.79%)</title><rect x="50.1312%" y="565" width="0.7874%" height="15" fill="rgb(243,75,33)" fg:x="764" fg:w="12"/><text x="50.3812%" y="575.50"></text></g><g><title>std::io::append_to_string (12 samples, 0.79%)</title><rect x="50.1312%" y="549" width="0.7874%" height="15" fill="rgb(247,141,45)" fg:x="764" fg:w="12"/><text x="50.3812%" y="559.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (11 samples, 0.72%)</title><rect x="50.1969%" y="533" width="0.7218%" height="15" fill="rgb(232,177,36)" fg:x="765" fg:w="11"/><text x="50.4469%" y="543.50"></text></g><g><title>std::io::default_read_to_end (11 samples, 0.72%)</title><rect x="50.1969%" y="517" width="0.7218%" height="15" fill="rgb(219,125,36)" fg:x="765" fg:w="11"/><text x="50.4469%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (8 samples, 0.52%)</title><rect x="50.3937%" y="501" width="0.5249%" height="15" fill="rgb(227,94,9)" fg:x="768" fg:w="8"/><text x="50.6437%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (8 samples, 0.52%)</title><rect x="50.3937%" y="485" width="0.5249%" height="15" fill="rgb(240,34,52)" fg:x="768" fg:w="8"/><text x="50.6437%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (8 samples, 0.52%)</title><rect x="50.3937%" y="469" width="0.5249%" height="15" fill="rgb(216,45,12)" fg:x="768" fg:w="8"/><text x="50.6437%" y="479.50"></text></g><g><title>read (8 samples, 0.52%)</title><rect x="50.3937%" y="453" width="0.5249%" height="15" fill="rgb(246,21,19)" fg:x="768" fg:w="8"/><text x="50.6437%" y="463.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (6 samples, 0.39%)</title><rect x="51.0499%" y="549" width="0.3937%" height="15" fill="rgb(213,98,42)" fg:x="778" fg:w="6"/><text x="51.2999%" y="559.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (6 samples, 0.39%)</title><rect x="51.0499%" y="533" width="0.3937%" height="15" fill="rgb(250,136,47)" fg:x="778" fg:w="6"/><text x="51.2999%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.39%)</title><rect x="51.0499%" y="517" width="0.3937%" height="15" fill="rgb(251,124,27)" fg:x="778" fg:w="6"/><text x="51.2999%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.39%)</title><rect x="51.0499%" y="501" width="0.3937%" height="15" fill="rgb(229,180,14)" fg:x="778" fg:w="6"/><text x="51.2999%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.39%)</title><rect x="51.0499%" y="485" width="0.3937%" height="15" fill="rgb(245,216,25)" fg:x="778" fg:w="6"/><text x="51.2999%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="51.0499%" y="469" width="0.3937%" height="15" fill="rgb(251,43,5)" fg:x="778" fg:w="6"/><text x="51.2999%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.39%)</title><rect x="51.0499%" y="453" width="0.3937%" height="15" fill="rgb(250,128,24)" fg:x="778" fg:w="6"/><text x="51.2999%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.39%)</title><rect x="51.0499%" y="437" width="0.3937%" height="15" fill="rgb(217,117,27)" fg:x="778" fg:w="6"/><text x="51.2999%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.39%)</title><rect x="51.0499%" y="421" width="0.3937%" height="15" fill="rgb(245,147,4)" fg:x="778" fg:w="6"/><text x="51.2999%" y="431.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.39%)</title><rect x="51.0499%" y="405" width="0.3937%" height="15" fill="rgb(242,201,35)" fg:x="778" fg:w="6"/><text x="51.2999%" y="415.50"></text></g><g><title>malloc (6 samples, 0.39%)</title><rect x="51.0499%" y="389" width="0.3937%" height="15" fill="rgb(218,181,1)" fg:x="778" fg:w="6"/><text x="51.2999%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="51.4436%" y="549" width="0.0656%" height="15" fill="rgb(222,6,29)" fg:x="784" fg:w="1"/><text x="51.6936%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.07%)</title><rect x="51.4436%" y="533" width="0.0656%" height="15" fill="rgb(208,186,3)" fg:x="784" fg:w="1"/><text x="51.6936%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.07%)</title><rect x="51.4436%" y="517" width="0.0656%" height="15" fill="rgb(216,36,26)" fg:x="784" fg:w="1"/><text x="51.6936%" y="527.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (3 samples, 0.20%)</title><rect x="51.5092%" y="549" width="0.1969%" height="15" fill="rgb(248,201,23)" fg:x="785" fg:w="3"/><text x="51.7592%" y="559.50"></text></g><g><title>[libc.so.6] (3 samples, 0.20%)</title><rect x="51.5092%" y="533" width="0.1969%" height="15" fill="rgb(251,170,31)" fg:x="785" fg:w="3"/><text x="51.7592%" y="543.50"></text></g><g><title>readdir64 (22 samples, 1.44%)</title><rect x="51.7060%" y="549" width="1.4436%" height="15" fill="rgb(207,110,25)" fg:x="788" fg:w="22"/><text x="51.9560%" y="559.50"></text></g><g><title>getdents64 (4 samples, 0.26%)</title><rect x="52.8871%" y="533" width="0.2625%" height="15" fill="rgb(250,54,15)" fg:x="806" fg:w="4"/><text x="53.1371%" y="543.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.07%)</title><rect x="53.1496%" y="549" width="0.0656%" height="15" fill="rgb(227,68,33)" fg:x="810" fg:w="1"/><text x="53.3996%" y="559.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 2.62%)</title><rect x="50.9186%" y="565" width="2.6247%" height="15" fill="rgb(238,34,41)" fg:x="776" fg:w="40"/><text x="51.1686%" y="575.50">&lt;s..</text></g><g><title>std::sys::unix::os::set_errno (5 samples, 0.33%)</title><rect x="53.2152%" y="549" width="0.3281%" height="15" fill="rgb(220,11,15)" fg:x="811" fg:w="5"/><text x="53.4652%" y="559.50"></text></g><g><title>__errno_location (5 samples, 0.33%)</title><rect x="53.2152%" y="533" width="0.3281%" height="15" fill="rgb(246,111,35)" fg:x="811" fg:w="5"/><text x="53.4652%" y="543.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 2.95%)</title><rect x="50.9186%" y="581" width="2.9528%" height="15" fill="rgb(209,88,53)" fg:x="776" fg:w="45"/><text x="51.1686%" y="591.50">&lt;st..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.33%)</title><rect x="53.5433%" y="565" width="0.3281%" height="15" fill="rgb(231,185,47)" fg:x="816" fg:w="5"/><text x="53.7933%" y="575.50"></text></g><g><title>alloc::string::String::clear (1 samples, 0.07%)</title><rect x="53.8714%" y="581" width="0.0656%" height="15" fill="rgb(233,154,1)" fg:x="821" fg:w="1"/><text x="54.1214%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.07%)</title><rect x="53.8714%" y="565" width="0.0656%" height="15" fill="rgb(225,15,46)" fg:x="821" fg:w="1"/><text x="54.1214%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="54.0682%" y="453" width="0.1312%" height="15" fill="rgb(211,135,41)" fg:x="824" fg:w="2"/><text x="54.3182%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="54.1339%" y="437" width="0.0656%" height="15" fill="rgb(208,54,0)" fg:x="825" fg:w="1"/><text x="54.3839%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="54.1339%" y="421" width="0.0656%" height="15" fill="rgb(244,136,14)" fg:x="825" fg:w="1"/><text x="54.3839%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.07%)</title><rect x="54.1339%" y="405" width="0.0656%" height="15" fill="rgb(241,56,14)" fg:x="825" fg:w="1"/><text x="54.3839%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.46%)</title><rect x="54.0682%" y="549" width="0.4593%" height="15" fill="rgb(205,80,24)" fg:x="824" fg:w="7"/><text x="54.3182%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.46%)</title><rect x="54.0682%" y="533" width="0.4593%" height="15" fill="rgb(220,57,4)" fg:x="824" fg:w="7"/><text x="54.3182%" y="543.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.46%)</title><rect x="54.0682%" y="517" width="0.4593%" height="15" fill="rgb(226,193,50)" fg:x="824" fg:w="7"/><text x="54.3182%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.46%)</title><rect x="54.0682%" y="501" width="0.4593%" height="15" fill="rgb(231,168,22)" fg:x="824" fg:w="7"/><text x="54.3182%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.46%)</title><rect x="54.0682%" y="485" width="0.4593%" height="15" fill="rgb(254,215,14)" fg:x="824" fg:w="7"/><text x="54.3182%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.46%)</title><rect x="54.0682%" y="469" width="0.4593%" height="15" fill="rgb(211,115,16)" fg:x="824" fg:w="7"/><text x="54.3182%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.33%)</title><rect x="54.1995%" y="453" width="0.3281%" height="15" fill="rgb(236,210,16)" fg:x="826" fg:w="5"/><text x="54.4495%" y="463.50"></text></g><g><title>[libc.so.6] (5 samples, 0.33%)</title><rect x="54.1995%" y="437" width="0.3281%" height="15" fill="rgb(221,94,12)" fg:x="826" fg:w="5"/><text x="54.4495%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="54.5276%" y="549" width="0.1969%" height="15" fill="rgb(235,218,49)" fg:x="831" fg:w="3"/><text x="54.7776%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="54.5276%" y="533" width="0.1969%" height="15" fill="rgb(217,114,14)" fg:x="831" fg:w="3"/><text x="54.7776%" y="543.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.07%)</title><rect x="54.7244%" y="549" width="0.0656%" height="15" fill="rgb(216,145,22)" fg:x="834" fg:w="1"/><text x="54.9744%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.07%)</title><rect x="54.7900%" y="549" width="0.0656%" height="15" fill="rgb(217,112,39)" fg:x="835" fg:w="1"/><text x="55.0400%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (15 samples, 0.98%)</title><rect x="53.9370%" y="581" width="0.9843%" height="15" fill="rgb(225,85,32)" fg:x="822" fg:w="15"/><text x="54.1870%" y="591.50"></text></g><g><title>core::fmt::write (15 samples, 0.98%)</title><rect x="53.9370%" y="565" width="0.9843%" height="15" fill="rgb(245,209,47)" fg:x="822" fg:w="15"/><text x="54.1870%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.07%)</title><rect x="54.8556%" y="549" width="0.0656%" height="15" fill="rgb(218,220,15)" fg:x="836" fg:w="1"/><text x="55.1056%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.07%)</title><rect x="54.8556%" y="533" width="0.0656%" height="15" fill="rgb(222,202,31)" fg:x="836" fg:w="1"/><text x="55.1056%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.07%)</title><rect x="54.9213%" y="581" width="0.0656%" height="15" fill="rgb(243,203,4)" fg:x="837" fg:w="1"/><text x="55.1713%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.07%)</title><rect x="54.9213%" y="565" width="0.0656%" height="15" fill="rgb(237,92,17)" fg:x="837" fg:w="1"/><text x="55.1713%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="54.9213%" y="549" width="0.0656%" height="15" fill="rgb(231,119,7)" fg:x="837" fg:w="1"/><text x="55.1713%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="54.9213%" y="533" width="0.0656%" height="15" fill="rgb(237,82,41)" fg:x="837" fg:w="1"/><text x="55.1713%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="54.9213%" y="517" width="0.0656%" height="15" fill="rgb(226,81,48)" fg:x="837" fg:w="1"/><text x="55.1713%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="54.9213%" y="501" width="0.0656%" height="15" fill="rgb(234,70,51)" fg:x="837" fg:w="1"/><text x="55.1713%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="54.9213%" y="485" width="0.0656%" height="15" fill="rgb(251,86,4)" fg:x="837" fg:w="1"/><text x="55.1713%" y="495.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="54.9213%" y="469" width="0.0656%" height="15" fill="rgb(244,144,28)" fg:x="837" fg:w="1"/><text x="55.1713%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="54.9213%" y="453" width="0.0656%" height="15" fill="rgb(232,161,39)" fg:x="837" fg:w="1"/><text x="55.1713%" y="463.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="54.9869%" y="533" width="0.0656%" height="15" fill="rgb(247,34,51)" fg:x="838" fg:w="1"/><text x="55.2369%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (2 samples, 0.13%)</title><rect x="54.9869%" y="549" width="0.1312%" height="15" fill="rgb(225,132,2)" fg:x="838" fg:w="2"/><text x="55.2369%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.07%)</title><rect x="55.0525%" y="533" width="0.0656%" height="15" fill="rgb(209,159,44)" fg:x="839" fg:w="1"/><text x="55.3025%" y="543.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.07%)</title><rect x="55.0525%" y="517" width="0.0656%" height="15" fill="rgb(251,214,1)" fg:x="839" fg:w="1"/><text x="55.3025%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="55.0525%" y="501" width="0.0656%" height="15" fill="rgb(247,84,47)" fg:x="839" fg:w="1"/><text x="55.3025%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="55.0525%" y="485" width="0.0656%" height="15" fill="rgb(240,111,43)" fg:x="839" fg:w="1"/><text x="55.3025%" y="495.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="55.0525%" y="469" width="0.0656%" height="15" fill="rgb(215,214,35)" fg:x="839" fg:w="1"/><text x="55.3025%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="55.0525%" y="453" width="0.0656%" height="15" fill="rgb(248,207,23)" fg:x="839" fg:w="1"/><text x="55.3025%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::DirEntry&gt; (4 samples, 0.26%)</title><rect x="54.9869%" y="581" width="0.2625%" height="15" fill="rgb(214,186,4)" fg:x="838" fg:w="4"/><text x="55.2369%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::DirEntry&gt; (4 samples, 0.26%)</title><rect x="54.9869%" y="565" width="0.2625%" height="15" fill="rgb(220,133,22)" fg:x="838" fg:w="4"/><text x="55.2369%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (2 samples, 0.13%)</title><rect x="55.1181%" y="549" width="0.1312%" height="15" fill="rgb(239,134,19)" fg:x="840" fg:w="2"/><text x="55.3681%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="55.1181%" y="533" width="0.1312%" height="15" fill="rgb(250,140,9)" fg:x="840" fg:w="2"/><text x="55.3681%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.13%)</title><rect x="55.1181%" y="517" width="0.1312%" height="15" fill="rgb(225,59,14)" fg:x="840" fg:w="2"/><text x="55.3681%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.13%)</title><rect x="55.1181%" y="501" width="0.1312%" height="15" fill="rgb(214,152,51)" fg:x="840" fg:w="2"/><text x="55.3681%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (10 samples, 0.66%)</title><rect x="55.2493%" y="581" width="0.6562%" height="15" fill="rgb(251,227,43)" fg:x="842" fg:w="10"/><text x="55.4993%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (10 samples, 0.66%)</title><rect x="55.2493%" y="565" width="0.6562%" height="15" fill="rgb(241,96,17)" fg:x="842" fg:w="10"/><text x="55.4993%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (10 samples, 0.66%)</title><rect x="55.2493%" y="549" width="0.6562%" height="15" fill="rgb(234,198,43)" fg:x="842" fg:w="10"/><text x="55.4993%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (10 samples, 0.66%)</title><rect x="55.2493%" y="533" width="0.6562%" height="15" fill="rgb(220,108,29)" fg:x="842" fg:w="10"/><text x="55.4993%" y="543.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (10 samples, 0.66%)</title><rect x="55.2493%" y="517" width="0.6562%" height="15" fill="rgb(226,163,33)" fg:x="842" fg:w="10"/><text x="55.4993%" y="527.50"></text></g><g><title>__close (8 samples, 0.52%)</title><rect x="55.3806%" y="501" width="0.5249%" height="15" fill="rgb(205,194,45)" fg:x="844" fg:w="8"/><text x="55.6306%" y="511.50"></text></g><g><title>core::mem::drop (1 samples, 0.07%)</title><rect x="55.9055%" y="501" width="0.0656%" height="15" fill="rgb(206,143,44)" fg:x="852" fg:w="1"/><text x="56.1555%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (1 samples, 0.07%)</title><rect x="55.9055%" y="485" width="0.0656%" height="15" fill="rgb(236,136,36)" fg:x="852" fg:w="1"/><text x="56.1555%" y="495.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="55.9055%" y="469" width="0.0656%" height="15" fill="rgb(249,172,42)" fg:x="852" fg:w="1"/><text x="56.1555%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.07%)</title><rect x="55.9055%" y="453" width="0.0656%" height="15" fill="rgb(216,139,23)" fg:x="852" fg:w="1"/><text x="56.1555%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.07%)</title><rect x="55.9055%" y="437" width="0.0656%" height="15" fill="rgb(207,166,20)" fg:x="852" fg:w="1"/><text x="56.1555%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (2 samples, 0.13%)</title><rect x="55.9711%" y="485" width="0.1312%" height="15" fill="rgb(210,209,22)" fg:x="853" fg:w="2"/><text x="56.2211%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2 samples, 0.13%)</title><rect x="55.9711%" y="469" width="0.1312%" height="15" fill="rgb(232,118,20)" fg:x="853" fg:w="2"/><text x="56.2211%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (2 samples, 0.13%)</title><rect x="55.9711%" y="453" width="0.1312%" height="15" fill="rgb(238,113,42)" fg:x="853" fg:w="2"/><text x="56.2211%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.13%)</title><rect x="55.9711%" y="437" width="0.1312%" height="15" fill="rgb(231,42,5)" fg:x="853" fg:w="2"/><text x="56.2211%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.13%)</title><rect x="55.9711%" y="421" width="0.1312%" height="15" fill="rgb(243,166,24)" fg:x="853" fg:w="2"/><text x="56.2211%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="55.9711%" y="405" width="0.1312%" height="15" fill="rgb(237,226,12)" fg:x="853" fg:w="2"/><text x="56.2211%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.13%)</title><rect x="55.9711%" y="389" width="0.1312%" height="15" fill="rgb(229,133,24)" fg:x="853" fg:w="2"/><text x="56.2211%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.13%)</title><rect x="55.9711%" y="373" width="0.1312%" height="15" fill="rgb(238,33,43)" fg:x="853" fg:w="2"/><text x="56.2211%" y="383.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="55.9711%" y="357" width="0.1312%" height="15" fill="rgb(227,59,38)" fg:x="853" fg:w="2"/><text x="56.2211%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="55.9711%" y="341" width="0.1312%" height="15" fill="rgb(230,97,0)" fg:x="853" fg:w="2"/><text x="56.2211%" y="351.50"></text></g><g><title>__close_nocancel (1 samples, 0.07%)</title><rect x="56.1024%" y="453" width="0.0656%" height="15" fill="rgb(250,173,50)" fg:x="855" fg:w="1"/><text x="56.3524%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.39%)</title><rect x="55.9055%" y="517" width="0.3937%" height="15" fill="rgb(240,15,50)" fg:x="852" fg:w="6"/><text x="56.1555%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::InnerReadDir&gt; (5 samples, 0.33%)</title><rect x="55.9711%" y="501" width="0.3281%" height="15" fill="rgb(221,93,22)" fg:x="853" fg:w="5"/><text x="56.2211%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::Dir&gt; (3 samples, 0.20%)</title><rect x="56.1024%" y="485" width="0.1969%" height="15" fill="rgb(245,180,53)" fg:x="855" fg:w="3"/><text x="56.3524%" y="495.50"></text></g><g><title>&lt;std::sys::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="56.1024%" y="469" width="0.1969%" height="15" fill="rgb(231,88,51)" fg:x="855" fg:w="3"/><text x="56.3524%" y="479.50"></text></g><g><title>closedir (2 samples, 0.13%)</title><rect x="56.1680%" y="453" width="0.1312%" height="15" fill="rgb(240,58,21)" fg:x="856" fg:w="2"/><text x="56.4180%" y="463.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="56.1680%" y="437" width="0.1312%" height="15" fill="rgb(237,21,10)" fg:x="856" fg:w="2"/><text x="56.4180%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="56.1680%" y="421" width="0.1312%" height="15" fill="rgb(218,43,11)" fg:x="856" fg:w="2"/><text x="56.4180%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::ReadDir&gt; (7 samples, 0.46%)</title><rect x="55.9055%" y="581" width="0.4593%" height="15" fill="rgb(218,221,29)" fg:x="852" fg:w="7"/><text x="56.1555%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::ReadDir&gt; (7 samples, 0.46%)</title><rect x="55.9055%" y="565" width="0.4593%" height="15" fill="rgb(214,118,42)" fg:x="852" fg:w="7"/><text x="56.1555%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (7 samples, 0.46%)</title><rect x="55.9055%" y="549" width="0.4593%" height="15" fill="rgb(251,200,26)" fg:x="852" fg:w="7"/><text x="56.1555%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.46%)</title><rect x="55.9055%" y="533" width="0.4593%" height="15" fill="rgb(237,101,39)" fg:x="852" fg:w="7"/><text x="56.1555%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.07%)</title><rect x="56.2992%" y="517" width="0.0656%" height="15" fill="rgb(251,117,11)" fg:x="858" fg:w="1"/><text x="56.5492%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.07%)</title><rect x="56.2992%" y="501" width="0.0656%" height="15" fill="rgb(216,223,23)" fg:x="858" fg:w="1"/><text x="56.5492%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.07%)</title><rect x="56.3648%" y="581" width="0.0656%" height="15" fill="rgb(251,54,12)" fg:x="859" fg:w="1"/><text x="56.6148%" y="591.50"></text></g><g><title>std::ffi::os_str::OsStr::to_str (1 samples, 0.07%)</title><rect x="56.4304%" y="581" width="0.0656%" height="15" fill="rgb(254,176,54)" fg:x="860" fg:w="1"/><text x="56.6804%" y="591.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.07%)</title><rect x="56.4304%" y="565" width="0.0656%" height="15" fill="rgb(210,32,8)" fg:x="860" fg:w="1"/><text x="56.6804%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.07%)</title><rect x="56.4304%" y="549" width="0.0656%" height="15" fill="rgb(235,52,38)" fg:x="860" fg:w="1"/><text x="56.6804%" y="559.50"></text></g><g><title>std::ffi::os_str::OsString::as_os_str (1 samples, 0.07%)</title><rect x="56.4961%" y="581" width="0.0656%" height="15" fill="rgb(231,4,44)" fg:x="861" fg:w="1"/><text x="56.7461%" y="591.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="56.4961%" y="565" width="0.0656%" height="15" fill="rgb(249,2,32)" fg:x="861" fg:w="1"/><text x="56.7461%" y="575.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.07%)</title><rect x="56.4961%" y="549" width="0.0656%" height="15" fill="rgb(224,65,26)" fg:x="861" fg:w="1"/><text x="56.7461%" y="559.50"></text></g><g><title>std::sys::unix::os_str::Buf::as_slice (1 samples, 0.07%)</title><rect x="56.4961%" y="533" width="0.0656%" height="15" fill="rgb(250,73,40)" fg:x="861" fg:w="1"/><text x="56.7461%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="56.4961%" y="517" width="0.0656%" height="15" fill="rgb(253,177,16)" fg:x="861" fg:w="1"/><text x="56.7461%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.07%)</title><rect x="56.4961%" y="501" width="0.0656%" height="15" fill="rgb(217,32,34)" fg:x="861" fg:w="1"/><text x="56.7461%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="56.4961%" y="485" width="0.0656%" height="15" fill="rgb(212,7,10)" fg:x="861" fg:w="1"/><text x="56.7461%" y="495.50"></text></g><g><title>std::fs::DirEntry::file_name (1 samples, 0.07%)</title><rect x="56.5617%" y="581" width="0.0656%" height="15" fill="rgb(245,89,8)" fg:x="862" fg:w="1"/><text x="56.8117%" y="591.50"></text></g><g><title>std::sys::unix::fs::DirEntry::file_name (1 samples, 0.07%)</title><rect x="56.5617%" y="565" width="0.0656%" height="15" fill="rgb(237,16,53)" fg:x="862" fg:w="1"/><text x="56.8117%" y="575.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.07%)</title><rect x="56.5617%" y="549" width="0.0656%" height="15" fill="rgb(250,204,30)" fg:x="862" fg:w="1"/><text x="56.8117%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (6 samples, 0.39%)</title><rect x="56.6273%" y="533" width="0.3937%" height="15" fill="rgb(208,77,27)" fg:x="863" fg:w="6"/><text x="56.8773%" y="543.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (3 samples, 0.20%)</title><rect x="57.0210%" y="485" width="0.1969%" height="15" fill="rgb(250,204,28)" fg:x="869" fg:w="3"/><text x="57.2710%" y="495.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.20%)</title><rect x="57.0210%" y="469" width="0.1969%" height="15" fill="rgb(244,63,21)" fg:x="869" fg:w="3"/><text x="57.2710%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned (3 samples, 0.20%)</title><rect x="57.0210%" y="453" width="0.1969%" height="15" fill="rgb(236,85,44)" fg:x="869" fg:w="3"/><text x="57.2710%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.07%)</title><rect x="57.1522%" y="437" width="0.0656%" height="15" fill="rgb(215,98,4)" fg:x="871" fg:w="1"/><text x="57.4022%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.07%)</title><rect x="57.1522%" y="421" width="0.0656%" height="15" fill="rgb(235,38,11)" fg:x="871" fg:w="1"/><text x="57.4022%" y="431.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.07%)</title><rect x="57.2835%" y="437" width="0.0656%" height="15" fill="rgb(254,186,25)" fg:x="873" fg:w="1"/><text x="57.5335%" y="447.50"></text></g><g><title>std::fs::File::open (20 samples, 1.31%)</title><rect x="56.6273%" y="581" width="1.3123%" height="15" fill="rgb(225,55,31)" fg:x="863" fg:w="20"/><text x="56.8773%" y="591.50"></text></g><g><title>std::fs::OpenOptions::open (20 samples, 1.31%)</title><rect x="56.6273%" y="565" width="1.3123%" height="15" fill="rgb(211,15,21)" fg:x="863" fg:w="20"/><text x="56.8773%" y="575.50"></text></g><g><title>std::fs::OpenOptions::_open (20 samples, 1.31%)</title><rect x="56.6273%" y="549" width="1.3123%" height="15" fill="rgb(215,187,41)" fg:x="863" fg:w="20"/><text x="56.8773%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::open (14 samples, 0.92%)</title><rect x="57.0210%" y="533" width="0.9186%" height="15" fill="rgb(248,69,32)" fg:x="869" fg:w="14"/><text x="57.2710%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (14 samples, 0.92%)</title><rect x="57.0210%" y="517" width="0.9186%" height="15" fill="rgb(252,102,52)" fg:x="869" fg:w="14"/><text x="57.2710%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (14 samples, 0.92%)</title><rect x="57.0210%" y="501" width="0.9186%" height="15" fill="rgb(253,140,32)" fg:x="869" fg:w="14"/><text x="57.2710%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (11 samples, 0.72%)</title><rect x="57.2178%" y="485" width="0.7218%" height="15" fill="rgb(216,56,42)" fg:x="872" fg:w="11"/><text x="57.4678%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c (11 samples, 0.72%)</title><rect x="57.2178%" y="469" width="0.7218%" height="15" fill="rgb(216,184,14)" fg:x="872" fg:w="11"/><text x="57.4678%" y="479.50"></text></g><g><title>std::sys::unix::cvt_r (10 samples, 0.66%)</title><rect x="57.2835%" y="453" width="0.6562%" height="15" fill="rgb(237,187,27)" fg:x="873" fg:w="10"/><text x="57.5335%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (9 samples, 0.59%)</title><rect x="57.3491%" y="437" width="0.5906%" height="15" fill="rgb(219,65,3)" fg:x="874" fg:w="9"/><text x="57.5991%" y="447.50"></text></g><g><title>open64 (9 samples, 0.59%)</title><rect x="57.3491%" y="421" width="0.5906%" height="15" fill="rgb(245,83,25)" fg:x="874" fg:w="9"/><text x="57.5991%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.26%)</title><rect x="57.9396%" y="437" width="0.2625%" height="15" fill="rgb(214,205,45)" fg:x="883" fg:w="4"/><text x="58.1896%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.26%)</title><rect x="57.9396%" y="421" width="0.2625%" height="15" fill="rgb(241,20,18)" fg:x="883" fg:w="4"/><text x="58.1896%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.26%)</title><rect x="57.9396%" y="405" width="0.2625%" height="15" fill="rgb(232,163,23)" fg:x="883" fg:w="4"/><text x="58.1896%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.26%)</title><rect x="57.9396%" y="389" width="0.2625%" height="15" fill="rgb(214,5,46)" fg:x="883" fg:w="4"/><text x="58.1896%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.26%)</title><rect x="57.9396%" y="373" width="0.2625%" height="15" fill="rgb(229,78,17)" fg:x="883" fg:w="4"/><text x="58.1896%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.26%)</title><rect x="57.9396%" y="357" width="0.2625%" height="15" fill="rgb(248,89,10)" fg:x="883" fg:w="4"/><text x="58.1896%" y="367.50"></text></g><g><title>malloc (4 samples, 0.26%)</title><rect x="57.9396%" y="341" width="0.2625%" height="15" fill="rgb(248,54,15)" fg:x="883" fg:w="4"/><text x="58.1896%" y="351.50"></text></g><g><title>std::path::Path::to_path_buf (5 samples, 0.33%)</title><rect x="57.9396%" y="549" width="0.3281%" height="15" fill="rgb(223,116,6)" fg:x="883" fg:w="5"/><text x="58.1896%" y="559.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (5 samples, 0.33%)</title><rect x="57.9396%" y="533" width="0.3281%" height="15" fill="rgb(205,125,38)" fg:x="883" fg:w="5"/><text x="58.1896%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (5 samples, 0.33%)</title><rect x="57.9396%" y="517" width="0.3281%" height="15" fill="rgb(251,78,38)" fg:x="883" fg:w="5"/><text x="58.1896%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.33%)</title><rect x="57.9396%" y="501" width="0.3281%" height="15" fill="rgb(253,78,28)" fg:x="883" fg:w="5"/><text x="58.1896%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.33%)</title><rect x="57.9396%" y="485" width="0.3281%" height="15" fill="rgb(209,120,3)" fg:x="883" fg:w="5"/><text x="58.1896%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.33%)</title><rect x="57.9396%" y="469" width="0.3281%" height="15" fill="rgb(238,229,9)" fg:x="883" fg:w="5"/><text x="58.1896%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.33%)</title><rect x="57.9396%" y="453" width="0.3281%" height="15" fill="rgb(253,159,18)" fg:x="883" fg:w="5"/><text x="58.1896%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="58.2021%" y="437" width="0.0656%" height="15" fill="rgb(244,42,34)" fg:x="887" fg:w="1"/><text x="58.4521%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="58.2021%" y="421" width="0.0656%" height="15" fill="rgb(224,8,7)" fg:x="887" fg:w="1"/><text x="58.4521%" y="431.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.07%)</title><rect x="58.3333%" y="517" width="0.0656%" height="15" fill="rgb(210,201,45)" fg:x="889" fg:w="1"/><text x="58.5833%" y="527.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.07%)</title><rect x="58.3333%" y="501" width="0.0656%" height="15" fill="rgb(252,185,21)" fg:x="889" fg:w="1"/><text x="58.5833%" y="511.50"></text></g><g><title>[libc.so.6] (12 samples, 0.79%)</title><rect x="58.3990%" y="485" width="0.7874%" height="15" fill="rgb(223,131,1)" fg:x="890" fg:w="12"/><text x="58.6490%" y="495.50"></text></g><g><title>malloc (10 samples, 0.66%)</title><rect x="58.5302%" y="469" width="0.6562%" height="15" fill="rgb(245,141,16)" fg:x="892" fg:w="10"/><text x="58.7802%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 0.26%)</title><rect x="58.9239%" y="453" width="0.2625%" height="15" fill="rgb(229,55,45)" fg:x="898" fg:w="4"/><text x="59.1739%" y="463.50"></text></g><g><title>[libc.so.6] (14 samples, 0.92%)</title><rect x="58.3990%" y="501" width="0.9186%" height="15" fill="rgb(208,92,15)" fg:x="890" fg:w="14"/><text x="58.6490%" y="511.50"></text></g><g><title>fstatat64 (2 samples, 0.13%)</title><rect x="59.1864%" y="485" width="0.1312%" height="15" fill="rgb(234,185,47)" fg:x="902" fg:w="2"/><text x="59.4364%" y="495.50"></text></g><g><title>proc_probe::explore_children (188 samples, 12.34%)</title><rect x="47.7034%" y="613" width="12.3360%" height="15" fill="rgb(253,104,50)" fg:x="727" fg:w="188"/><text x="47.9534%" y="623.50">proc_probe::explor..</text></g><g><title>proc_probe::list_children (184 samples, 12.07%)</title><rect x="47.9659%" y="597" width="12.0735%" height="15" fill="rgb(205,70,7)" fg:x="731" fg:w="184"/><text x="48.2159%" y="607.50">proc_probe::list_c..</text></g><g><title>std::fs::read_dir (32 samples, 2.10%)</title><rect x="57.9396%" y="581" width="2.0997%" height="15" fill="rgb(240,178,43)" fg:x="883" fg:w="32"/><text x="58.1896%" y="591.50">s..</text></g><g><title>std::sys::unix::fs::readdir (32 samples, 2.10%)</title><rect x="57.9396%" y="565" width="2.0997%" height="15" fill="rgb(214,112,2)" fg:x="883" fg:w="32"/><text x="58.1896%" y="575.50">s..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (27 samples, 1.77%)</title><rect x="58.2677%" y="549" width="1.7717%" height="15" fill="rgb(206,46,17)" fg:x="888" fg:w="27"/><text x="58.5177%" y="559.50">s..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (27 samples, 1.77%)</title><rect x="58.2677%" y="533" width="1.7717%" height="15" fill="rgb(225,220,16)" fg:x="888" fg:w="27"/><text x="58.5177%" y="543.50">s..</text></g><g><title>std::sys::unix::fs::readdir::{{closure}} (25 samples, 1.64%)</title><rect x="58.3990%" y="517" width="1.6404%" height="15" fill="rgb(238,65,40)" fg:x="890" fg:w="25"/><text x="58.6490%" y="527.50"></text></g><g><title>opendir (11 samples, 0.72%)</title><rect x="59.3176%" y="501" width="0.7218%" height="15" fill="rgb(230,151,21)" fg:x="904" fg:w="11"/><text x="59.5676%" y="511.50"></text></g><g><title>__open64_nocancel (8 samples, 0.52%)</title><rect x="59.5144%" y="485" width="0.5249%" height="15" fill="rgb(218,58,49)" fg:x="907" fg:w="8"/><text x="59.7644%" y="495.50"></text></g><g><title>libc::unix::linux_like::linux::makedev (2 samples, 0.13%)</title><rect x="60.1050%" y="517" width="0.1312%" height="15" fill="rgb(219,179,14)" fg:x="916" fg:w="2"/><text x="60.3550%" y="527.50"></text></g><g><title>std::fs::buffer_capacity_required (5 samples, 0.33%)</title><rect x="60.1050%" y="581" width="0.3281%" height="15" fill="rgb(223,72,1)" fg:x="916" fg:w="5"/><text x="60.3550%" y="591.50"></text></g><g><title>std::fs::File::metadata (5 samples, 0.33%)</title><rect x="60.1050%" y="565" width="0.3281%" height="15" fill="rgb(238,126,10)" fg:x="916" fg:w="5"/><text x="60.3550%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (5 samples, 0.33%)</title><rect x="60.1050%" y="549" width="0.3281%" height="15" fill="rgb(224,206,38)" fg:x="916" fg:w="5"/><text x="60.3550%" y="559.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.33%)</title><rect x="60.1050%" y="533" width="0.3281%" height="15" fill="rgb(212,201,54)" fg:x="916" fg:w="5"/><text x="60.3550%" y="543.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.20%)</title><rect x="60.2362%" y="517" width="0.1969%" height="15" fill="rgb(218,154,48)" fg:x="918" fg:w="3"/><text x="60.4862%" y="527.50"></text></g><g><title>statx (3 samples, 0.20%)</title><rect x="60.2362%" y="501" width="0.1969%" height="15" fill="rgb(232,93,24)" fg:x="918" fg:w="3"/><text x="60.4862%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Guard&gt; (1 samples, 0.07%)</title><rect x="60.4331%" y="549" width="0.0656%" height="15" fill="rgb(245,30,21)" fg:x="921" fg:w="1"/><text x="60.6831%" y="559.50"></text></g><g><title>&lt;std::io::Guard as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="60.4331%" y="533" width="0.0656%" height="15" fill="rgb(242,148,29)" fg:x="921" fg:w="1"/><text x="60.6831%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.07%)</title><rect x="60.4331%" y="517" width="0.0656%" height="15" fill="rgb(244,153,54)" fg:x="921" fg:w="1"/><text x="60.6831%" y="527.50"></text></g><g><title>core::str::converts::from_utf8 (4 samples, 0.26%)</title><rect x="60.4987%" y="549" width="0.2625%" height="15" fill="rgb(252,87,22)" fg:x="922" fg:w="4"/><text x="60.7487%" y="559.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.20%)</title><rect x="60.5643%" y="533" width="0.1969%" height="15" fill="rgb(210,51,29)" fg:x="923" fg:w="3"/><text x="60.8143%" y="543.50"></text></g><g><title>core::str::validations::contains_nonascii (1 samples, 0.07%)</title><rect x="60.6955%" y="517" width="0.0656%" height="15" fill="rgb(242,136,47)" fg:x="925" fg:w="1"/><text x="60.9455%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (32 samples, 2.10%)</title><rect x="60.1050%" y="597" width="2.0997%" height="15" fill="rgb(238,68,4)" fg:x="916" fg:w="32"/><text x="60.3550%" y="607.50">&lt;..</text></g><g><title>std::io::default_read_to_string (27 samples, 1.77%)</title><rect x="60.4331%" y="581" width="1.7717%" height="15" fill="rgb(242,161,30)" fg:x="921" fg:w="27"/><text x="60.6831%" y="591.50">s..</text></g><g><title>std::io::append_to_string (27 samples, 1.77%)</title><rect x="60.4331%" y="565" width="1.7717%" height="15" fill="rgb(218,58,44)" fg:x="921" fg:w="27"/><text x="60.6831%" y="575.50">s..</text></g><g><title>std::io::default_read_to_string::{{closure}} (22 samples, 1.44%)</title><rect x="60.7612%" y="549" width="1.4436%" height="15" fill="rgb(252,125,32)" fg:x="926" fg:w="22"/><text x="61.0112%" y="559.50"></text></g><g><title>std::io::default_read_to_end (22 samples, 1.44%)</title><rect x="60.7612%" y="533" width="1.4436%" height="15" fill="rgb(219,178,0)" fg:x="926" fg:w="22"/><text x="61.0112%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (21 samples, 1.38%)</title><rect x="60.8268%" y="517" width="1.3780%" height="15" fill="rgb(213,152,7)" fg:x="927" fg:w="21"/><text x="61.0768%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (21 samples, 1.38%)</title><rect x="60.8268%" y="501" width="1.3780%" height="15" fill="rgb(249,109,34)" fg:x="927" fg:w="21"/><text x="61.0768%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (21 samples, 1.38%)</title><rect x="60.8268%" y="485" width="1.3780%" height="15" fill="rgb(232,96,21)" fg:x="927" fg:w="21"/><text x="61.0768%" y="495.50"></text></g><g><title>read (21 samples, 1.38%)</title><rect x="60.8268%" y="469" width="1.3780%" height="15" fill="rgb(228,27,39)" fg:x="927" fg:w="21"/><text x="61.0768%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.46%)</title><rect x="62.5328%" y="565" width="0.4593%" height="15" fill="rgb(211,182,52)" fg:x="953" fg:w="7"/><text x="62.7828%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.39%)</title><rect x="62.5984%" y="549" width="0.3937%" height="15" fill="rgb(234,178,38)" fg:x="954" fg:w="6"/><text x="62.8484%" y="559.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.39%)</title><rect x="62.5984%" y="533" width="0.3937%" height="15" fill="rgb(221,111,3)" fg:x="954" fg:w="6"/><text x="62.8484%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.39%)</title><rect x="62.5984%" y="517" width="0.3937%" height="15" fill="rgb(228,175,21)" fg:x="954" fg:w="6"/><text x="62.8484%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.39%)</title><rect x="62.5984%" y="501" width="0.3937%" height="15" fill="rgb(228,174,43)" fg:x="954" fg:w="6"/><text x="62.8484%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.39%)</title><rect x="62.5984%" y="485" width="0.3937%" height="15" fill="rgb(211,191,0)" fg:x="954" fg:w="6"/><text x="62.8484%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.39%)</title><rect x="62.5984%" y="469" width="0.3937%" height="15" fill="rgb(253,117,3)" fg:x="954" fg:w="6"/><text x="62.8484%" y="479.50"></text></g><g><title>[libc.so.6] (6 samples, 0.39%)</title><rect x="62.5984%" y="453" width="0.3937%" height="15" fill="rgb(241,127,19)" fg:x="954" fg:w="6"/><text x="62.8484%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (13 samples, 0.85%)</title><rect x="62.2047%" y="597" width="0.8530%" height="15" fill="rgb(218,103,12)" fg:x="948" fg:w="13"/><text x="62.4547%" y="607.50"></text></g><g><title>core::fmt::write (13 samples, 0.85%)</title><rect x="62.2047%" y="581" width="0.8530%" height="15" fill="rgb(236,214,43)" fg:x="948" fg:w="13"/><text x="62.4547%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.07%)</title><rect x="62.9921%" y="565" width="0.0656%" height="15" fill="rgb(244,144,19)" fg:x="960" fg:w="1"/><text x="63.2421%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.07%)</title><rect x="62.9921%" y="549" width="0.0656%" height="15" fill="rgb(246,188,10)" fg:x="960" fg:w="1"/><text x="63.2421%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="62.9921%" y="533" width="0.0656%" height="15" fill="rgb(212,193,33)" fg:x="960" fg:w="1"/><text x="63.2421%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.07%)</title><rect x="63.0577%" y="597" width="0.0656%" height="15" fill="rgb(241,51,29)" fg:x="961" fg:w="1"/><text x="63.3077%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.07%)</title><rect x="63.0577%" y="581" width="0.0656%" height="15" fill="rgb(211,58,19)" fg:x="961" fg:w="1"/><text x="63.3077%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.07%)</title><rect x="63.0577%" y="565" width="0.0656%" height="15" fill="rgb(229,111,26)" fg:x="961" fg:w="1"/><text x="63.3077%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.07%)</title><rect x="63.0577%" y="549" width="0.0656%" height="15" fill="rgb(213,115,40)" fg:x="961" fg:w="1"/><text x="63.3077%" y="559.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="63.0577%" y="533" width="0.0656%" height="15" fill="rgb(209,56,44)" fg:x="961" fg:w="1"/><text x="63.3077%" y="543.50"></text></g><g><title>__close (1 samples, 0.07%)</title><rect x="63.0577%" y="517" width="0.0656%" height="15" fill="rgb(230,108,32)" fg:x="961" fg:w="1"/><text x="63.3077%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.20%)</title><rect x="63.1234%" y="597" width="0.1969%" height="15" fill="rgb(216,165,31)" fg:x="962" fg:w="3"/><text x="63.3734%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::lines (1 samples, 0.07%)</title><rect x="63.3202%" y="597" width="0.0656%" height="15" fill="rgb(218,122,21)" fg:x="965" fg:w="1"/><text x="63.5702%" y="607.50"></text></g><g><title>core::time::Duration::as_micros (1 samples, 0.07%)</title><rect x="63.3858%" y="597" width="0.0656%" height="15" fill="rgb(223,224,47)" fg:x="966" fg:w="1"/><text x="63.6358%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="63.4514%" y="485" width="0.0656%" height="15" fill="rgb(238,102,44)" fg:x="967" fg:w="1"/><text x="63.7014%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="63.4514%" y="469" width="0.0656%" height="15" fill="rgb(236,46,40)" fg:x="967" fg:w="1"/><text x="63.7014%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="63.4514%" y="453" width="0.0656%" height="15" fill="rgb(247,202,50)" fg:x="967" fg:w="1"/><text x="63.7014%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="63.4514%" y="437" width="0.0656%" height="15" fill="rgb(209,99,20)" fg:x="967" fg:w="1"/><text x="63.7014%" y="447.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="63.4514%" y="565" width="0.1312%" height="15" fill="rgb(252,27,34)" fg:x="967" fg:w="2"/><text x="63.7014%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="63.4514%" y="549" width="0.1312%" height="15" fill="rgb(215,206,23)" fg:x="967" fg:w="2"/><text x="63.7014%" y="559.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="63.4514%" y="533" width="0.1312%" height="15" fill="rgb(212,135,36)" fg:x="967" fg:w="2"/><text x="63.7014%" y="543.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (2 samples, 0.13%)</title><rect x="63.4514%" y="517" width="0.1312%" height="15" fill="rgb(240,189,1)" fg:x="967" fg:w="2"/><text x="63.7014%" y="527.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.13%)</title><rect x="63.4514%" y="501" width="0.1312%" height="15" fill="rgb(242,56,20)" fg:x="967" fg:w="2"/><text x="63.7014%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.07%)</title><rect x="63.5171%" y="485" width="0.0656%" height="15" fill="rgb(247,132,33)" fg:x="968" fg:w="1"/><text x="63.7671%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.07%)</title><rect x="63.5171%" y="469" width="0.0656%" height="15" fill="rgb(208,149,11)" fg:x="968" fg:w="1"/><text x="63.7671%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.07%)</title><rect x="63.5171%" y="453" width="0.0656%" height="15" fill="rgb(211,33,11)" fg:x="968" fg:w="1"/><text x="63.7671%" y="463.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.13%)</title><rect x="63.8451%" y="421" width="0.1312%" height="15" fill="rgb(221,29,38)" fg:x="973" fg:w="2"/><text x="64.0951%" y="431.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (2 samples, 0.13%)</title><rect x="63.8451%" y="405" width="0.1312%" height="15" fill="rgb(206,182,49)" fg:x="973" fg:w="2"/><text x="64.0951%" y="415.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (2 samples, 0.13%)</title><rect x="63.8451%" y="389" width="0.1312%" height="15" fill="rgb(216,140,1)" fg:x="973" fg:w="2"/><text x="64.0951%" y="399.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (2 samples, 0.13%)</title><rect x="63.8451%" y="373" width="0.1312%" height="15" fill="rgb(232,57,40)" fg:x="973" fg:w="2"/><text x="64.0951%" y="383.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.66%)</title><rect x="63.5827%" y="565" width="0.6562%" height="15" fill="rgb(224,186,18)" fg:x="969" fg:w="10"/><text x="63.8327%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.66%)</title><rect x="63.5827%" y="549" width="0.6562%" height="15" fill="rgb(215,121,11)" fg:x="969" fg:w="10"/><text x="63.8327%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 0.66%)</title><rect x="63.5827%" y="533" width="0.6562%" height="15" fill="rgb(245,147,10)" fg:x="969" fg:w="10"/><text x="63.8327%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.66%)</title><rect x="63.5827%" y="517" width="0.6562%" height="15" fill="rgb(238,153,13)" fg:x="969" fg:w="10"/><text x="63.8327%" y="527.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.52%)</title><rect x="63.7139%" y="501" width="0.5249%" height="15" fill="rgb(233,108,0)" fg:x="971" fg:w="8"/><text x="63.9639%" y="511.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (8 samples, 0.52%)</title><rect x="63.7139%" y="485" width="0.5249%" height="15" fill="rgb(212,157,17)" fg:x="971" fg:w="8"/><text x="63.9639%" y="495.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.39%)</title><rect x="63.8451%" y="469" width="0.3937%" height="15" fill="rgb(225,213,38)" fg:x="973" fg:w="6"/><text x="64.0951%" y="479.50"></text></g><g><title>core::str::pattern::Searcher::next_match (6 samples, 0.39%)</title><rect x="63.8451%" y="453" width="0.3937%" height="15" fill="rgb(248,16,11)" fg:x="973" fg:w="6"/><text x="64.0951%" y="463.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (6 samples, 0.39%)</title><rect x="63.8451%" y="437" width="0.3937%" height="15" fill="rgb(241,33,4)" fg:x="973" fg:w="6"/><text x="64.0951%" y="447.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="63.9764%" y="421" width="0.2625%" height="15" fill="rgb(222,26,43)" fg:x="975" fg:w="4"/><text x="64.2264%" y="431.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="64.0420%" y="405" width="0.1969%" height="15" fill="rgb(243,29,36)" fg:x="976" fg:w="3"/><text x="64.2920%" y="415.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.20%)</title><rect x="64.0420%" y="389" width="0.1969%" height="15" fill="rgb(241,9,27)" fg:x="976" fg:w="3"/><text x="64.2920%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="64.1076%" y="373" width="0.1312%" height="15" fill="rgb(205,117,26)" fg:x="977" fg:w="2"/><text x="64.3576%" y="383.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.13%)</title><rect x="64.1076%" y="357" width="0.1312%" height="15" fill="rgb(209,80,39)" fg:x="977" fg:w="2"/><text x="64.3576%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="64.5669%" y="469" width="0.0656%" height="15" fill="rgb(239,155,6)" fg:x="984" fg:w="1"/><text x="64.8169%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="64.5669%" y="453" width="0.0656%" height="15" fill="rgb(212,104,12)" fg:x="984" fg:w="1"/><text x="64.8169%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="64.5669%" y="437" width="0.0656%" height="15" fill="rgb(234,204,3)" fg:x="984" fg:w="1"/><text x="64.8169%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="64.5669%" y="421" width="0.0656%" height="15" fill="rgb(251,218,7)" fg:x="984" fg:w="1"/><text x="64.8169%" y="431.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.07%)</title><rect x="64.6982%" y="437" width="0.0656%" height="15" fill="rgb(221,81,32)" fg:x="986" fg:w="1"/><text x="64.9482%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="64.6982%" y="421" width="0.0656%" height="15" fill="rgb(214,152,26)" fg:x="986" fg:w="1"/><text x="64.9482%" y="431.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.72%)</title><rect x="64.2388%" y="549" width="0.7218%" height="15" fill="rgb(223,22,3)" fg:x="979" fg:w="11"/><text x="64.4888%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.72%)</title><rect x="64.2388%" y="533" width="0.7218%" height="15" fill="rgb(207,174,7)" fg:x="979" fg:w="11"/><text x="64.4888%" y="543.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.72%)</title><rect x="64.2388%" y="517" width="0.7218%" height="15" fill="rgb(224,19,52)" fg:x="979" fg:w="11"/><text x="64.4888%" y="527.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (11 samples, 0.72%)</title><rect x="64.2388%" y="501" width="0.7218%" height="15" fill="rgb(228,24,14)" fg:x="979" fg:w="11"/><text x="64.4888%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (11 samples, 0.72%)</title><rect x="64.2388%" y="485" width="0.7218%" height="15" fill="rgb(230,153,43)" fg:x="979" fg:w="11"/><text x="64.4888%" y="495.50"></text></g><g><title>core::slice::memchr::memchr (5 samples, 0.33%)</title><rect x="64.6325%" y="469" width="0.3281%" height="15" fill="rgb(231,106,12)" fg:x="985" fg:w="5"/><text x="64.8825%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned (5 samples, 0.33%)</title><rect x="64.6325%" y="453" width="0.3281%" height="15" fill="rgb(215,92,2)" fg:x="985" fg:w="5"/><text x="64.8825%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.20%)</title><rect x="64.7638%" y="437" width="0.1969%" height="15" fill="rgb(249,143,25)" fg:x="987" fg:w="3"/><text x="65.0138%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (27 samples, 1.77%)</title><rect x="63.4514%" y="581" width="1.7717%" height="15" fill="rgb(252,7,35)" fg:x="967" fg:w="27"/><text x="63.7014%" y="591.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (15 samples, 0.98%)</title><rect x="64.2388%" y="565" width="0.9843%" height="15" fill="rgb(216,69,40)" fg:x="979" fg:w="15"/><text x="64.4888%" y="575.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="64.9606%" y="549" width="0.2625%" height="15" fill="rgb(240,36,33)" fg:x="990" fg:w="4"/><text x="65.2106%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="65.0262%" y="533" width="0.1969%" height="15" fill="rgb(231,128,14)" fg:x="991" fg:w="3"/><text x="65.2762%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.20%)</title><rect x="65.0262%" y="517" width="0.1969%" height="15" fill="rgb(245,143,14)" fg:x="991" fg:w="3"/><text x="65.2762%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.20%)</title><rect x="65.0262%" y="501" width="0.1969%" height="15" fill="rgb(222,130,28)" fg:x="991" fg:w="3"/><text x="65.2762%" y="511.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="65.1575%" y="485" width="0.0656%" height="15" fill="rgb(212,10,48)" fg:x="993" fg:w="1"/><text x="65.4075%" y="495.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.07%)</title><rect x="65.1575%" y="469" width="0.0656%" height="15" fill="rgb(254,118,45)" fg:x="993" fg:w="1"/><text x="65.4075%" y="479.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.07%)</title><rect x="65.1575%" y="453" width="0.0656%" height="15" fill="rgb(228,6,45)" fg:x="993" fg:w="1"/><text x="65.4075%" y="463.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1 samples, 0.07%)</title><rect x="65.1575%" y="437" width="0.0656%" height="15" fill="rgb(241,18,35)" fg:x="993" fg:w="1"/><text x="65.4075%" y="447.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.07%)</title><rect x="65.1575%" y="421" width="0.0656%" height="15" fill="rgb(227,214,53)" fg:x="993" fg:w="1"/><text x="65.4075%" y="431.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="65.1575%" y="405" width="0.0656%" height="15" fill="rgb(224,107,51)" fg:x="993" fg:w="1"/><text x="65.4075%" y="415.50"></text></g><g><title>proc_probe::parse_line (32 samples, 2.10%)</title><rect x="63.4514%" y="597" width="2.0997%" height="15" fill="rgb(248,60,28)" fg:x="967" fg:w="32"/><text x="63.7014%" y="607.50">p..</text></g><g><title>core::str::&lt;impl str&gt;::parse (5 samples, 0.33%)</title><rect x="65.2231%" y="581" width="0.3281%" height="15" fill="rgb(249,101,23)" fg:x="994" fg:w="5"/><text x="65.4731%" y="591.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (5 samples, 0.33%)</title><rect x="65.2231%" y="565" width="0.3281%" height="15" fill="rgb(228,51,19)" fg:x="994" fg:w="5"/><text x="65.4731%" y="575.50"></text></g><g><title>core::num::from_str_radix (5 samples, 0.33%)</title><rect x="65.2231%" y="549" width="0.3281%" height="15" fill="rgb(213,20,6)" fg:x="994" fg:w="5"/><text x="65.4731%" y="559.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.07%)</title><rect x="65.4856%" y="533" width="0.0656%" height="15" fill="rgb(212,124,10)" fg:x="998" fg:w="1"/><text x="65.7356%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.07%)</title><rect x="65.5512%" y="549" width="0.0656%" height="15" fill="rgb(248,3,40)" fg:x="999" fg:w="1"/><text x="65.8012%" y="559.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.07%)</title><rect x="65.6168%" y="501" width="0.0656%" height="15" fill="rgb(223,178,23)" fg:x="1000" fg:w="1"/><text x="65.8668%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.07%)</title><rect x="65.6168%" y="485" width="0.0656%" height="15" fill="rgb(240,132,45)" fg:x="1000" fg:w="1"/><text x="65.8668%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.07%)</title><rect x="65.6168%" y="469" width="0.0656%" height="15" fill="rgb(245,164,36)" fg:x="1000" fg:w="1"/><text x="65.8668%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.07%)</title><rect x="65.6168%" y="453" width="0.0656%" height="15" fill="rgb(231,188,53)" fg:x="1000" fg:w="1"/><text x="65.8668%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.20%)</title><rect x="65.6824%" y="501" width="0.1969%" height="15" fill="rgb(237,198,39)" fg:x="1001" fg:w="3"/><text x="65.9324%" y="511.50"></text></g><g><title>[libc.so.6] (3 samples, 0.20%)</title><rect x="65.6824%" y="485" width="0.1969%" height="15" fill="rgb(223,120,35)" fg:x="1001" fg:w="3"/><text x="65.9324%" y="495.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.13%)</title><rect x="66.0105%" y="453" width="0.1312%" height="15" fill="rgb(253,107,49)" fg:x="1006" fg:w="2"/><text x="66.2605%" y="463.50"></text></g><g><title>std::sys::unix::cvt_r (5 samples, 0.33%)</title><rect x="66.0105%" y="469" width="0.3281%" height="15" fill="rgb(216,44,31)" fg:x="1006" fg:w="5"/><text x="66.2605%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (3 samples, 0.20%)</title><rect x="66.1417%" y="453" width="0.1969%" height="15" fill="rgb(253,87,21)" fg:x="1008" fg:w="3"/><text x="66.3917%" y="463.50"></text></g><g><title>open64 (3 samples, 0.20%)</title><rect x="66.1417%" y="437" width="0.1969%" height="15" fill="rgb(226,18,2)" fg:x="1008" fg:w="3"/><text x="66.3917%" y="447.50"></text></g><g><title>std::fs::File::open (13 samples, 0.85%)</title><rect x="65.5512%" y="597" width="0.8530%" height="15" fill="rgb(216,8,46)" fg:x="999" fg:w="13"/><text x="65.8012%" y="607.50"></text></g><g><title>std::fs::OpenOptions::open (13 samples, 0.85%)</title><rect x="65.5512%" y="581" width="0.8530%" height="15" fill="rgb(226,140,39)" fg:x="999" fg:w="13"/><text x="65.8012%" y="591.50"></text></g><g><title>std::fs::OpenOptions::_open (13 samples, 0.85%)</title><rect x="65.5512%" y="565" width="0.8530%" height="15" fill="rgb(221,194,54)" fg:x="999" fg:w="13"/><text x="65.8012%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::open (12 samples, 0.79%)</title><rect x="65.6168%" y="549" width="0.7874%" height="15" fill="rgb(213,92,11)" fg:x="1000" fg:w="12"/><text x="65.8668%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (12 samples, 0.79%)</title><rect x="65.6168%" y="533" width="0.7874%" height="15" fill="rgb(229,162,46)" fg:x="1000" fg:w="12"/><text x="65.8668%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (12 samples, 0.79%)</title><rect x="65.6168%" y="517" width="0.7874%" height="15" fill="rgb(214,111,36)" fg:x="1000" fg:w="12"/><text x="65.8668%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (8 samples, 0.52%)</title><rect x="65.8793%" y="501" width="0.5249%" height="15" fill="rgb(207,6,21)" fg:x="1004" fg:w="8"/><text x="66.1293%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::open_c (8 samples, 0.52%)</title><rect x="65.8793%" y="485" width="0.5249%" height="15" fill="rgb(213,127,38)" fg:x="1004" fg:w="8"/><text x="66.1293%" y="495.50"></text></g><g><title>std::sys::unix::fs::OpenOptions::get_access_mode (1 samples, 0.07%)</title><rect x="66.3386%" y="469" width="0.0656%" height="15" fill="rgb(238,118,32)" fg:x="1011" fg:w="1"/><text x="66.5886%" y="479.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.13%)</title><rect x="66.4042%" y="581" width="0.1312%" height="15" fill="rgb(240,139,39)" fg:x="1012" fg:w="2"/><text x="66.6542%" y="591.50"></text></g><g><title>std::time::Instant::duration_since (2 samples, 0.13%)</title><rect x="66.4042%" y="565" width="0.1312%" height="15" fill="rgb(235,10,37)" fg:x="1012" fg:w="2"/><text x="66.6542%" y="575.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.13%)</title><rect x="66.4042%" y="549" width="0.1312%" height="15" fill="rgb(249,171,38)" fg:x="1012" fg:w="2"/><text x="66.6542%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (2 samples, 0.13%)</title><rect x="66.4042%" y="533" width="0.1312%" height="15" fill="rgb(242,144,32)" fg:x="1012" fg:w="2"/><text x="66.6542%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (2 samples, 0.13%)</title><rect x="66.4042%" y="517" width="0.1312%" height="15" fill="rgb(217,117,21)" fg:x="1012" fg:w="2"/><text x="66.6542%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.07%)</title><rect x="66.4698%" y="501" width="0.0656%" height="15" fill="rgb(249,87,1)" fg:x="1013" fg:w="1"/><text x="66.7198%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.07%)</title><rect x="66.4698%" y="485" width="0.0656%" height="15" fill="rgb(248,196,48)" fg:x="1013" fg:w="1"/><text x="66.7198%" y="495.50"></text></g><g><title>proc_probe::measure (106 samples, 6.96%)</title><rect x="60.0394%" y="613" width="6.9554%" height="15" fill="rgb(251,206,33)" fg:x="915" fg:w="106"/><text x="60.2894%" y="623.50">proc_prob..</text></g><g><title>std::time::Instant::elapsed (9 samples, 0.59%)</title><rect x="66.4042%" y="597" width="0.5906%" height="15" fill="rgb(232,141,28)" fg:x="1012" fg:w="9"/><text x="66.6542%" y="607.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.46%)</title><rect x="66.5354%" y="581" width="0.4593%" height="15" fill="rgb(209,167,14)" fg:x="1014" fg:w="7"/><text x="66.7854%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.46%)</title><rect x="66.5354%" y="565" width="0.4593%" height="15" fill="rgb(225,11,50)" fg:x="1014" fg:w="7"/><text x="66.7854%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.46%)</title><rect x="66.5354%" y="549" width="0.4593%" height="15" fill="rgb(209,50,20)" fg:x="1014" fg:w="7"/><text x="66.7854%" y="559.50"></text></g><g><title>clock_gettime (7 samples, 0.46%)</title><rect x="66.5354%" y="533" width="0.4593%" height="15" fill="rgb(212,17,46)" fg:x="1014" fg:w="7"/><text x="66.7854%" y="543.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="66.9291%" y="517" width="0.0656%" height="15" fill="rgb(216,101,39)" fg:x="1020" fg:w="1"/><text x="67.1791%" y="527.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="66.9291%" y="501" width="0.0656%" height="15" fill="rgb(212,228,48)" fg:x="1020" fg:w="1"/><text x="67.1791%" y="511.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.07%)</title><rect x="66.9948%" y="341" width="0.0656%" height="15" fill="rgb(250,6,50)" fg:x="1021" fg:w="1"/><text x="67.2448%" y="351.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (1 samples, 0.07%)</title><rect x="66.9948%" y="325" width="0.0656%" height="15" fill="rgb(250,160,48)" fg:x="1021" fg:w="1"/><text x="67.2448%" y="335.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.07%)</title><rect x="67.1916%" y="213" width="0.0656%" height="15" fill="rgb(244,216,33)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="223.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (1 samples, 0.07%)</title><rect x="67.1916%" y="197" width="0.0656%" height="15" fill="rgb(207,157,5)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="207.50"></text></g><g><title>serde_json::ser::indent (1 samples, 0.07%)</title><rect x="67.1916%" y="181" width="0.0656%" height="15" fill="rgb(228,199,8)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="191.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.07%)</title><rect x="67.1916%" y="165" width="0.0656%" height="15" fill="rgb(227,80,20)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="175.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.07%)</title><rect x="67.1916%" y="149" width="0.0656%" height="15" fill="rgb(222,9,33)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="159.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.07%)</title><rect x="67.1916%" y="133" width="0.0656%" height="15" fill="rgb(239,44,28)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="67.1916%" y="117" width="0.0656%" height="15" fill="rgb(249,187,43)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="67.1916%" y="101" width="0.0656%" height="15" fill="rgb(216,141,28)" fg:x="1024" fg:w="1"/><text x="67.4416%" y="111.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.26%)</title><rect x="67.0604%" y="325" width="0.2625%" height="15" fill="rgb(230,154,53)" fg:x="1022" fg:w="4"/><text x="67.3104%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.26%)</title><rect x="67.0604%" y="309" width="0.2625%" height="15" fill="rgb(227,82,4)" fg:x="1022" fg:w="4"/><text x="67.3104%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.26%)</title><rect x="67.0604%" y="293" width="0.2625%" height="15" fill="rgb(220,107,16)" fg:x="1022" fg:w="4"/><text x="67.3104%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.26%)</title><rect x="67.0604%" y="277" width="0.2625%" height="15" fill="rgb(207,187,2)" fg:x="1022" fg:w="4"/><text x="67.3104%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.13%)</title><rect x="67.1916%" y="261" width="0.1312%" height="15" fill="rgb(210,162,52)" fg:x="1024" fg:w="2"/><text x="67.4416%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.13%)</title><rect x="67.1916%" y="245" width="0.1312%" height="15" fill="rgb(217,216,49)" fg:x="1024" fg:w="2"/><text x="67.4416%" y="255.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.13%)</title><rect x="67.1916%" y="229" width="0.1312%" height="15" fill="rgb(218,146,49)" fg:x="1024" fg:w="2"/><text x="67.4416%" y="239.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="67.2572%" y="213" width="0.0656%" height="15" fill="rgb(216,55,40)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="67.2572%" y="197" width="0.0656%" height="15" fill="rgb(208,196,21)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="207.50"></text></g><g><title>common::_::&lt;impl serde::ser::Serialize for common::Sample&gt;::serialize (1 samples, 0.07%)</title><rect x="67.2572%" y="181" width="0.0656%" height="15" fill="rgb(242,117,42)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="191.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="67.2572%" y="165" width="0.0656%" height="15" fill="rgb(210,11,23)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="175.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="67.2572%" y="149" width="0.0656%" height="15" fill="rgb(217,110,2)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="159.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="67.2572%" y="133" width="0.0656%" height="15" fill="rgb(229,77,54)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="143.50"></text></g><g><title>common::_::&lt;impl serde::ser::Serialize for common::SampleValue&gt;::serialize (1 samples, 0.07%)</title><rect x="67.2572%" y="117" width="0.0656%" height="15" fill="rgb(218,53,16)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="127.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="67.2572%" y="101" width="0.0656%" height="15" fill="rgb(215,38,13)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="111.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="67.2572%" y="85" width="0.0656%" height="15" fill="rgb(235,42,18)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="95.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.07%)</title><rect x="67.2572%" y="69" width="0.0656%" height="15" fill="rgb(219,66,54)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="79.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (1 samples, 0.07%)</title><rect x="67.2572%" y="53" width="0.0656%" height="15" fill="rgb(222,205,4)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="63.50"></text></g><g><title>serde_json::ser::indent (1 samples, 0.07%)</title><rect x="67.2572%" y="37" width="0.0656%" height="15" fill="rgb(227,213,46)" fg:x="1025" fg:w="1"/><text x="67.5072%" y="47.50"></text></g><g><title>proc_probe::serialize_result (6 samples, 0.39%)</title><rect x="66.9948%" y="613" width="0.3937%" height="15" fill="rgb(250,145,42)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="623.50"></text></g><g><title>serde_json::ser::to_writer_pretty (6 samples, 0.39%)</title><rect x="66.9948%" y="597" width="0.3937%" height="15" fill="rgb(219,15,2)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="607.50"></text></g><g><title>common::_::&lt;impl serde::ser::Serialize for common::SaveFile&gt;::serialize (6 samples, 0.39%)</title><rect x="66.9948%" y="581" width="0.3937%" height="15" fill="rgb(231,181,52)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="591.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.39%)</title><rect x="66.9948%" y="565" width="0.3937%" height="15" fill="rgb(235,1,42)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.39%)</title><rect x="66.9948%" y="549" width="0.3937%" height="15" fill="rgb(249,88,27)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="559.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.39%)</title><rect x="66.9948%" y="533" width="0.3937%" height="15" fill="rgb(235,145,16)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.39%)</title><rect x="66.9948%" y="517" width="0.3937%" height="15" fill="rgb(237,114,19)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.39%)</title><rect x="66.9948%" y="501" width="0.3937%" height="15" fill="rgb(238,51,50)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.39%)</title><rect x="66.9948%" y="485" width="0.3937%" height="15" fill="rgb(205,194,25)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.39%)</title><rect x="66.9948%" y="469" width="0.3937%" height="15" fill="rgb(215,203,17)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (6 samples, 0.39%)</title><rect x="66.9948%" y="453" width="0.3937%" height="15" fill="rgb(233,112,49)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (6 samples, 0.39%)</title><rect x="66.9948%" y="437" width="0.3937%" height="15" fill="rgb(241,130,26)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="447.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.39%)</title><rect x="66.9948%" y="421" width="0.3937%" height="15" fill="rgb(252,223,19)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.39%)</title><rect x="66.9948%" y="405" width="0.3937%" height="15" fill="rgb(211,95,25)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="415.50"></text></g><g><title>common::_::&lt;impl serde::ser::Serialize for common::Round&gt;::serialize (6 samples, 0.39%)</title><rect x="66.9948%" y="389" width="0.3937%" height="15" fill="rgb(251,182,27)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="399.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.39%)</title><rect x="66.9948%" y="373" width="0.3937%" height="15" fill="rgb(238,24,4)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.39%)</title><rect x="66.9948%" y="357" width="0.3937%" height="15" fill="rgb(224,220,25)" fg:x="1021" fg:w="6"/><text x="67.2448%" y="367.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.33%)</title><rect x="67.0604%" y="341" width="0.3281%" height="15" fill="rgb(239,133,26)" fg:x="1022" fg:w="5"/><text x="67.3104%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.07%)</title><rect x="67.3228%" y="325" width="0.0656%" height="15" fill="rgb(211,94,48)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.07%)</title><rect x="67.3228%" y="309" width="0.0656%" height="15" fill="rgb(239,87,6)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="319.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (1 samples, 0.07%)</title><rect x="67.3228%" y="293" width="0.0656%" height="15" fill="rgb(227,62,0)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="303.50"></text></g><g><title>itoa::Buffer::format (1 samples, 0.07%)</title><rect x="67.3228%" y="277" width="0.0656%" height="15" fill="rgb(211,226,4)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="287.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (1 samples, 0.07%)</title><rect x="67.3228%" y="261" width="0.0656%" height="15" fill="rgb(253,38,52)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="67.3228%" y="245" width="0.0656%" height="15" fill="rgb(229,126,40)" fg:x="1026" fg:w="1"/><text x="67.5728%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.07%)</title><rect x="67.3885%" y="581" width="0.0656%" height="15" fill="rgb(229,165,44)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="67.3885%" y="565" width="0.0656%" height="15" fill="rgb(247,95,47)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="67.3885%" y="549" width="0.0656%" height="15" fill="rgb(216,140,30)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="67.3885%" y="533" width="0.0656%" height="15" fill="rgb(246,214,8)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="67.3885%" y="517" width="0.0656%" height="15" fill="rgb(227,224,15)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="67.3885%" y="501" width="0.0656%" height="15" fill="rgb(233,175,4)" fg:x="1027" fg:w="1"/><text x="67.6385%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.20%)</title><rect x="67.4541%" y="533" width="0.1969%" height="15" fill="rgb(221,66,45)" fg:x="1028" fg:w="3"/><text x="67.7041%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.20%)</title><rect x="67.4541%" y="517" width="0.1969%" height="15" fill="rgb(221,178,18)" fg:x="1028" fg:w="3"/><text x="67.7041%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.20%)</title><rect x="67.4541%" y="501" width="0.1969%" height="15" fill="rgb(213,81,29)" fg:x="1028" fg:w="3"/><text x="67.7041%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.26%)</title><rect x="67.4541%" y="581" width="0.2625%" height="15" fill="rgb(220,89,49)" fg:x="1028" fg:w="4"/><text x="67.7041%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.26%)</title><rect x="67.4541%" y="565" width="0.2625%" height="15" fill="rgb(227,60,33)" fg:x="1028" fg:w="4"/><text x="67.7041%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.26%)</title><rect x="67.4541%" y="549" width="0.2625%" height="15" fill="rgb(205,113,12)" fg:x="1028" fg:w="4"/><text x="67.7041%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="67.6509%" y="533" width="0.0656%" height="15" fill="rgb(211,32,1)" fg:x="1031" fg:w="1"/><text x="67.9009%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="67.6509%" y="517" width="0.0656%" height="15" fill="rgb(246,2,12)" fg:x="1031" fg:w="1"/><text x="67.9009%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.39%)</title><rect x="67.3885%" y="613" width="0.3937%" height="15" fill="rgb(243,37,27)" fg:x="1027" fg:w="6"/><text x="67.6385%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.39%)</title><rect x="67.3885%" y="597" width="0.3937%" height="15" fill="rgb(248,211,31)" fg:x="1027" fg:w="6"/><text x="67.6385%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.07%)</title><rect x="67.7165%" y="581" width="0.0656%" height="15" fill="rgb(242,146,47)" fg:x="1032" fg:w="1"/><text x="67.9665%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.07%)</title><rect x="67.7165%" y="565" width="0.0656%" height="15" fill="rgb(206,70,20)" fg:x="1032" fg:w="1"/><text x="67.9665%" y="575.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.07%)</title><rect x="67.7822%" y="533" width="0.0656%" height="15" fill="rgb(215,10,51)" fg:x="1033" fg:w="1"/><text x="68.0322%" y="543.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="67.7822%" y="517" width="0.0656%" height="15" fill="rgb(243,178,53)" fg:x="1033" fg:w="1"/><text x="68.0322%" y="527.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="67.7822%" y="501" width="0.0656%" height="15" fill="rgb(233,221,20)" fg:x="1033" fg:w="1"/><text x="68.0322%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="67.7822%" y="485" width="0.0656%" height="15" fill="rgb(218,95,35)" fg:x="1033" fg:w="1"/><text x="68.0322%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (3 samples, 0.20%)</title><rect x="67.7822%" y="597" width="0.1969%" height="15" fill="rgb(229,13,5)" fg:x="1033" fg:w="3"/><text x="68.0322%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new (3 samples, 0.20%)</title><rect x="67.7822%" y="581" width="0.1969%" height="15" fill="rgb(252,164,30)" fg:x="1033" fg:w="3"/><text x="68.0322%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.20%)</title><rect x="67.7822%" y="565" width="0.1969%" height="15" fill="rgb(232,68,36)" fg:x="1033" fg:w="3"/><text x="68.0322%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.20%)</title><rect x="67.7822%" y="549" width="0.1969%" height="15" fill="rgb(219,59,54)" fg:x="1033" fg:w="3"/><text x="68.0322%" y="559.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (2 samples, 0.13%)</title><rect x="67.8478%" y="533" width="0.1312%" height="15" fill="rgb(250,92,33)" fg:x="1034" fg:w="2"/><text x="68.0978%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.13%)</title><rect x="67.8478%" y="517" width="0.1312%" height="15" fill="rgb(229,162,54)" fg:x="1034" fg:w="2"/><text x="68.0978%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.20%)</title><rect x="68.1102%" y="501" width="0.1969%" height="15" fill="rgb(244,114,52)" fg:x="1038" fg:w="3"/><text x="68.3602%" y="511.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.20%)</title><rect x="68.1102%" y="485" width="0.1969%" height="15" fill="rgb(212,211,43)" fg:x="1038" fg:w="3"/><text x="68.3602%" y="495.50"></text></g><g><title>[libc.so.6] (3 samples, 0.20%)</title><rect x="68.1102%" y="469" width="0.1969%" height="15" fill="rgb(226,147,8)" fg:x="1038" fg:w="3"/><text x="68.3602%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="68.3071%" y="421" width="0.0656%" height="15" fill="rgb(226,23,13)" fg:x="1041" fg:w="1"/><text x="68.5571%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="68.3071%" y="405" width="0.0656%" height="15" fill="rgb(240,63,4)" fg:x="1041" fg:w="1"/><text x="68.5571%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (17 samples, 1.12%)</title><rect x="67.7822%" y="613" width="1.1155%" height="15" fill="rgb(221,1,32)" fg:x="1033" fg:w="17"/><text x="68.0322%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (14 samples, 0.92%)</title><rect x="67.9790%" y="597" width="0.9186%" height="15" fill="rgb(242,117,10)" fg:x="1036" fg:w="14"/><text x="68.2290%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (14 samples, 0.92%)</title><rect x="67.9790%" y="581" width="0.9186%" height="15" fill="rgb(249,172,44)" fg:x="1036" fg:w="14"/><text x="68.2290%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (12 samples, 0.79%)</title><rect x="68.1102%" y="565" width="0.7874%" height="15" fill="rgb(244,46,45)" fg:x="1038" fg:w="12"/><text x="68.3602%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (12 samples, 0.79%)</title><rect x="68.1102%" y="549" width="0.7874%" height="15" fill="rgb(206,43,17)" fg:x="1038" fg:w="12"/><text x="68.3602%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (12 samples, 0.79%)</title><rect x="68.1102%" y="533" width="0.7874%" height="15" fill="rgb(239,218,39)" fg:x="1038" fg:w="12"/><text x="68.3602%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (12 samples, 0.79%)</title><rect x="68.1102%" y="517" width="0.7874%" height="15" fill="rgb(208,169,54)" fg:x="1038" fg:w="12"/><text x="68.3602%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (9 samples, 0.59%)</title><rect x="68.3071%" y="501" width="0.5906%" height="15" fill="rgb(247,25,42)" fg:x="1041" fg:w="9"/><text x="68.5571%" y="511.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.59%)</title><rect x="68.3071%" y="485" width="0.5906%" height="15" fill="rgb(226,23,31)" fg:x="1041" fg:w="9"/><text x="68.5571%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.59%)</title><rect x="68.3071%" y="469" width="0.5906%" height="15" fill="rgb(247,16,28)" fg:x="1041" fg:w="9"/><text x="68.5571%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.59%)</title><rect x="68.3071%" y="453" width="0.5906%" height="15" fill="rgb(231,147,38)" fg:x="1041" fg:w="9"/><text x="68.5571%" y="463.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.59%)</title><rect x="68.3071%" y="437" width="0.5906%" height="15" fill="rgb(253,81,48)" fg:x="1041" fg:w="9"/><text x="68.5571%" y="447.50"></text></g><g><title>malloc (8 samples, 0.52%)</title><rect x="68.3727%" y="421" width="0.5249%" height="15" fill="rgb(249,222,43)" fg:x="1042" fg:w="8"/><text x="68.6227%" y="431.50"></text></g><g><title>[libc.so.6] (8 samples, 0.52%)</title><rect x="68.3727%" y="405" width="0.5249%" height="15" fill="rgb(221,3,27)" fg:x="1042" fg:w="8"/><text x="68.6227%" y="415.50"></text></g><g><title>std::process::Child::try_wait (2 samples, 0.13%)</title><rect x="68.8976%" y="613" width="0.1312%" height="15" fill="rgb(228,180,5)" fg:x="1050" fg:w="2"/><text x="69.1476%" y="623.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::try_wait (2 samples, 0.13%)</title><rect x="68.8976%" y="597" width="0.1312%" height="15" fill="rgb(227,131,42)" fg:x="1050" fg:w="2"/><text x="69.1476%" y="607.50"></text></g><g><title>wait4 (2 samples, 0.13%)</title><rect x="68.8976%" y="581" width="0.1312%" height="15" fill="rgb(212,3,39)" fg:x="1050" fg:w="2"/><text x="69.1476%" y="591.50"></text></g><g><title>proc_probe (449 samples, 29.46%)</title><rect x="39.8294%" y="901" width="29.4619%" height="15" fill="rgb(226,45,5)" fg:x="607" fg:w="449"/><text x="40.0794%" y="911.50">proc_probe</text></g><g><title>_start (337 samples, 22.11%)</title><rect x="47.1785%" y="885" width="22.1129%" height="15" fill="rgb(215,167,45)" fg:x="719" fg:w="337"/><text x="47.4285%" y="895.50">_start</text></g><g><title>__libc_start_main (337 samples, 22.11%)</title><rect x="47.1785%" y="869" width="22.1129%" height="15" fill="rgb(250,218,53)" fg:x="719" fg:w="337"/><text x="47.4285%" y="879.50">__libc_start_main</text></g><g><title>[libc.so.6] (337 samples, 22.11%)</title><rect x="47.1785%" y="853" width="22.1129%" height="15" fill="rgb(207,140,0)" fg:x="719" fg:w="337"/><text x="47.4285%" y="863.50">[libc.so.6]</text></g><g><title>main (337 samples, 22.11%)</title><rect x="47.1785%" y="837" width="22.1129%" height="15" fill="rgb(238,133,51)" fg:x="719" fg:w="337"/><text x="47.4285%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (337 samples, 22.11%)</title><rect x="47.1785%" y="821" width="22.1129%" height="15" fill="rgb(218,203,53)" fg:x="719" fg:w="337"/><text x="47.4285%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (337 samples, 22.11%)</title><rect x="47.1785%" y="805" width="22.1129%" height="15" fill="rgb(226,184,25)" fg:x="719" fg:w="337"/><text x="47.4285%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (337 samples, 22.11%)</title><rect x="47.1785%" y="789" width="22.1129%" height="15" fill="rgb(231,121,21)" fg:x="719" fg:w="337"/><text x="47.4285%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (337 samples, 22.11%)</title><rect x="47.1785%" y="773" width="22.1129%" height="15" fill="rgb(251,14,34)" fg:x="719" fg:w="337"/><text x="47.4285%" y="783.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (337 samples, 22.11%)</title><rect x="47.1785%" y="757" width="22.1129%" height="15" fill="rgb(249,193,11)" fg:x="719" fg:w="337"/><text x="47.4285%" y="767.50">std::rt::lang_start_internal::{{clo..</text></g><g><title>std::panic::catch_unwind (337 samples, 22.11%)</title><rect x="47.1785%" y="741" width="22.1129%" height="15" fill="rgb(220,172,37)" fg:x="719" fg:w="337"/><text x="47.4285%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (337 samples, 22.11%)</title><rect x="47.1785%" y="725" width="22.1129%" height="15" fill="rgb(231,229,43)" fg:x="719" fg:w="337"/><text x="47.4285%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (337 samples, 22.11%)</title><rect x="47.1785%" y="709" width="22.1129%" height="15" fill="rgb(250,161,5)" fg:x="719" fg:w="337"/><text x="47.4285%" y="719.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (337 samples, 22.11%)</title><rect x="47.1785%" y="693" width="22.1129%" height="15" fill="rgb(218,225,18)" fg:x="719" fg:w="337"/><text x="47.4285%" y="703.50">core::ops::function::impls::&lt;impl c..</text></g><g><title>std::rt::lang_start::{{closure}} (337 samples, 22.11%)</title><rect x="47.1785%" y="677" width="22.1129%" height="15" fill="rgb(245,45,42)" fg:x="719" fg:w="337"/><text x="47.4285%" y="687.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (337 samples, 22.11%)</title><rect x="47.1785%" y="661" width="22.1129%" height="15" fill="rgb(211,115,1)" fg:x="719" fg:w="337"/><text x="47.4285%" y="671.50">std::sys_common::backtrace::__rust_..</text></g><g><title>core::ops::function::FnOnce::call_once (337 samples, 22.11%)</title><rect x="47.1785%" y="645" width="22.1129%" height="15" fill="rgb(248,133,52)" fg:x="719" fg:w="337"/><text x="47.4285%" y="655.50">core::ops::function::FnOnce::call_o..</text></g><g><title>proc_probe::main (337 samples, 22.11%)</title><rect x="47.1785%" y="629" width="22.1129%" height="15" fill="rgb(238,100,21)" fg:x="719" fg:w="337"/><text x="47.4285%" y="639.50">proc_probe::main</text></g><g><title>std::time::Instant::elapsed (4 samples, 0.26%)</title><rect x="69.0289%" y="613" width="0.2625%" height="15" fill="rgb(247,144,11)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="623.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.26%)</title><rect x="69.0289%" y="597" width="0.2625%" height="15" fill="rgb(206,164,16)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.26%)</title><rect x="69.0289%" y="581" width="0.2625%" height="15" fill="rgb(222,34,3)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.26%)</title><rect x="69.0289%" y="565" width="0.2625%" height="15" fill="rgb(248,82,4)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="575.50"></text></g><g><title>clock_gettime (4 samples, 0.26%)</title><rect x="69.0289%" y="549" width="0.2625%" height="15" fill="rgb(228,81,46)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="559.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.26%)</title><rect x="69.0289%" y="533" width="0.2625%" height="15" fill="rgb(227,67,47)" fg:x="1052" fg:w="4"/><text x="69.2789%" y="543.50"></text></g><g><title>[[vdso]] (3 samples, 0.20%)</title><rect x="69.0945%" y="517" width="0.1969%" height="15" fill="rgb(215,93,53)" fg:x="1053" fg:w="3"/><text x="69.3445%" y="527.50"></text></g><g><title>&lt;jobserver::HelperState&gt;::for_each_request::&lt;jobserver::imp::spawn_helper::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="69.2913%" y="885" width="0.0656%" height="15" fill="rgb(248,194,39)" fg:x="1056" fg:w="1"/><text x="69.5413%" y="895.50"></text></g><g><title>&lt;rustc_data_structures::graph::iterate::TriColorDepthFirstSearch&lt;rustc_middle::mir::basic_blocks::BasicBlocks&gt;&gt;::run_from_start::&lt;rustc_data_structures::graph::iterate::CycleDetector&gt; (1 samples, 0.07%)</title><rect x="69.3570%" y="885" width="0.0656%" height="15" fill="rgb(215,5,19)" fg:x="1057" fg:w="1"/><text x="69.6070%" y="895.50"></text></g><g><title>[[heap]] (1 samples, 0.07%)</title><rect x="69.4226%" y="885" width="0.0656%" height="15" fill="rgb(226,215,51)" fg:x="1058" fg:w="1"/><text x="69.6726%" y="895.50"></text></g><g><title>toml::tokens::Tokenizer::eat_whitespace (1 samples, 0.07%)</title><rect x="69.4226%" y="869" width="0.0656%" height="15" fill="rgb(225,56,26)" fg:x="1058" fg:w="1"/><text x="69.6726%" y="879.50"></text></g><g><title>[[stack]] (1 samples, 0.07%)</title><rect x="69.4882%" y="885" width="0.0656%" height="15" fill="rgb(222,75,29)" fg:x="1059" fg:w="1"/><text x="69.7382%" y="895.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.07%)</title><rect x="69.4882%" y="869" width="0.0656%" height="15" fill="rgb(236,139,6)" fg:x="1059" fg:w="1"/><text x="69.7382%" y="879.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::try_normalize_generic_arg_after_erasing_regions (1 samples, 0.07%)</title><rect x="69.5538%" y="869" width="0.0656%" height="15" fill="rgb(223,137,36)" fg:x="1060" fg:w="1"/><text x="69.8038%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_variant_part_di_node::{closure#1}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="69.6194%" y="869" width="0.0656%" height="15" fill="rgb(226,99,2)" fg:x="1061" fg:w="1"/><text x="69.8694%" y="879.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::inhabited_predicate_adt, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="69.6850%" y="869" width="0.0656%" height="15" fill="rgb(206,133,23)" fg:x="1062" fg:w="1"/><text x="69.9350%" y="879.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="69.7507%" y="869" width="0.0656%" height="15" fill="rgb(243,173,15)" fg:x="1063" fg:w="1"/><text x="70.0007%" y="879.50"></text></g><g><title>[libc.so.6] (120 samples, 7.87%)</title><rect x="69.8163%" y="869" width="7.8740%" height="15" fill="rgb(228,69,28)" fg:x="1064" fg:w="120"/><text x="70.0663%" y="879.50">[libc.so.6]</text></g><g><title>_rjem_je_eset_remove (1 samples, 0.07%)</title><rect x="77.6903%" y="869" width="0.0656%" height="15" fill="rgb(212,51,22)" fg:x="1184" fg:w="1"/><text x="77.9403%" y="879.50"></text></g><g><title>base_alloc_impl (1 samples, 0.07%)</title><rect x="77.7559%" y="869" width="0.0656%" height="15" fill="rgb(227,113,0)" fg:x="1185" fg:w="1"/><text x="78.0059%" y="879.50"></text></g><g><title>llvm::X86GenMCSubtargetInfo::~X86GenMCSubtargetInfo (1 samples, 0.07%)</title><rect x="77.8215%" y="869" width="0.0656%" height="15" fill="rgb(252,84,27)" fg:x="1186" fg:w="1"/><text x="78.0715%" y="879.50"></text></g><g><title>[anon] (128 samples, 8.40%)</title><rect x="69.5538%" y="885" width="8.3990%" height="15" fill="rgb(223,145,39)" fg:x="1060" fg:w="128"/><text x="69.8038%" y="895.50">[anon]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="77.8871%" y="869" width="0.0656%" height="15" fill="rgb(239,219,30)" fg:x="1187" fg:w="1"/><text x="78.1371%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12 samples, 0.79%)</title><rect x="77.9528%" y="885" width="0.7874%" height="15" fill="rgb(224,196,39)" fg:x="1188" fg:w="12"/><text x="78.2028%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.20%)</title><rect x="78.5433%" y="869" width="0.1969%" height="15" fill="rgb(205,35,43)" fg:x="1197" fg:w="3"/><text x="78.7933%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.13%)</title><rect x="78.6089%" y="853" width="0.1312%" height="15" fill="rgb(228,201,21)" fg:x="1198" fg:w="2"/><text x="78.8589%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.13%)</title><rect x="78.6089%" y="837" width="0.1312%" height="15" fill="rgb(237,118,16)" fg:x="1198" fg:w="2"/><text x="78.8589%" y="847.50"></text></g><g><title>_rjem_je_jemalloc_postfork_child (1 samples, 0.07%)</title><rect x="79.7900%" y="869" width="0.0656%" height="15" fill="rgb(241,17,19)" fg:x="1216" fg:w="1"/><text x="80.0400%" y="879.50"></text></g><g><title>_rjem_je_tsd_postfork_child (1 samples, 0.07%)</title><rect x="79.7900%" y="853" width="0.0656%" height="15" fill="rgb(214,10,25)" fg:x="1216" fg:w="1"/><text x="80.0400%" y="863.50"></text></g><g><title>_rjem_je_malloc_mutex_postfork_child (1 samples, 0.07%)</title><rect x="79.7900%" y="837" width="0.0656%" height="15" fill="rgb(238,37,29)" fg:x="1216" fg:w="1"/><text x="80.0400%" y="847.50"></text></g><g><title>_rjem_je_malloc_mutex_init (1 samples, 0.07%)</title><rect x="79.7900%" y="821" width="0.0656%" height="15" fill="rgb(253,83,25)" fg:x="1216" fg:w="1"/><text x="80.0400%" y="831.50"></text></g><g><title>pthread_mutexattr_init@plt (1 samples, 0.07%)</title><rect x="79.7900%" y="805" width="0.0656%" height="15" fill="rgb(234,192,12)" fg:x="1216" fg:w="1"/><text x="80.0400%" y="815.50"></text></g><g><title>rustup::dist::manifest::Manifest::validate_targeted_package (1 samples, 0.07%)</title><rect x="79.8556%" y="741" width="0.0656%" height="15" fill="rgb(241,216,45)" fg:x="1217" fg:w="1"/><text x="80.1056%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="79.9213%" y="725" width="0.0656%" height="15" fill="rgb(242,22,33)" fg:x="1218" fg:w="1"/><text x="80.1713%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="79.9213%" y="709" width="0.0656%" height="15" fill="rgb(231,105,49)" fg:x="1218" fg:w="1"/><text x="80.1713%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="79.9213%" y="693" width="0.0656%" height="15" fill="rgb(218,204,15)" fg:x="1218" fg:w="1"/><text x="80.1713%" y="703.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::from_toml (2 samples, 0.13%)</title><rect x="79.9213%" y="741" width="0.1312%" height="15" fill="rgb(235,138,41)" fg:x="1218" fg:w="2"/><text x="80.1713%" y="751.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::toml_to_components (1 samples, 0.07%)</title><rect x="79.9869%" y="725" width="0.0656%" height="15" fill="rgb(246,0,9)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="79.9869%" y="709" width="0.0656%" height="15" fill="rgb(210,74,4)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="79.9869%" y="693" width="0.0656%" height="15" fill="rgb(250,60,41)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="79.9869%" y="677" width="0.0656%" height="15" fill="rgb(220,115,12)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="79.9869%" y="661" width="0.0656%" height="15" fill="rgb(237,100,13)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="79.9869%" y="645" width="0.0656%" height="15" fill="rgb(213,55,26)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="79.9869%" y="629" width="0.0656%" height="15" fill="rgb(216,17,4)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="79.9869%" y="613" width="0.0656%" height="15" fill="rgb(220,153,47)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="79.9869%" y="597" width="0.0656%" height="15" fill="rgb(215,131,9)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="79.9869%" y="581" width="0.0656%" height="15" fill="rgb(233,46,42)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="79.9869%" y="565" width="0.0656%" height="15" fill="rgb(226,86,7)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="79.9869%" y="549" width="0.0656%" height="15" fill="rgb(239,226,21)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="79.9869%" y="533" width="0.0656%" height="15" fill="rgb(244,137,22)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="79.9869%" y="517" width="0.0656%" height="15" fill="rgb(211,139,35)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.07%)</title><rect x="79.9869%" y="501" width="0.0656%" height="15" fill="rgb(214,62,50)" fg:x="1219" fg:w="1"/><text x="80.2369%" y="511.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.1837%" y="709" width="0.0656%" height="15" fill="rgb(212,113,44)" fg:x="1222" fg:w="1"/><text x="80.4337%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="80.2493%" y="709" width="0.0656%" height="15" fill="rgb(226,150,43)" fg:x="1223" fg:w="1"/><text x="80.4993%" y="719.50"></text></g><g><title>toml::de::Deserializer::dotted_key (1 samples, 0.07%)</title><rect x="80.3150%" y="709" width="0.0656%" height="15" fill="rgb(250,71,37)" fg:x="1224" fg:w="1"/><text x="80.5650%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (1 samples, 0.07%)</title><rect x="80.3150%" y="693" width="0.0656%" height="15" fill="rgb(219,76,19)" fg:x="1224" fg:w="1"/><text x="80.5650%" y="703.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.07%)</title><rect x="80.3150%" y="677" width="0.0656%" height="15" fill="rgb(250,39,11)" fg:x="1224" fg:w="1"/><text x="80.5650%" y="687.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.3150%" y="661" width="0.0656%" height="15" fill="rgb(230,64,31)" fg:x="1224" fg:w="1"/><text x="80.5650%" y="671.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.3806%" y="661" width="0.0656%" height="15" fill="rgb(208,222,23)" fg:x="1225" fg:w="1"/><text x="80.6306%" y="671.50"></text></g><g><title>toml::de::Deserializer::value (2 samples, 0.13%)</title><rect x="80.3806%" y="709" width="0.1312%" height="15" fill="rgb(227,125,18)" fg:x="1225" fg:w="2"/><text x="80.6306%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.13%)</title><rect x="80.3806%" y="693" width="0.1312%" height="15" fill="rgb(234,210,9)" fg:x="1225" fg:w="2"/><text x="80.6306%" y="703.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (2 samples, 0.13%)</title><rect x="80.3806%" y="677" width="0.1312%" height="15" fill="rgb(217,127,24)" fg:x="1225" fg:w="2"/><text x="80.6306%" y="687.50"></text></g><g><title>toml::tokens::Tokenizer::basic_string::{{closure}} (1 samples, 0.07%)</title><rect x="80.4462%" y="661" width="0.0656%" height="15" fill="rgb(239,141,48)" fg:x="1226" fg:w="1"/><text x="80.6962%" y="671.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (2 samples, 0.13%)</title><rect x="80.5118%" y="709" width="0.1312%" height="15" fill="rgb(227,109,8)" fg:x="1227" fg:w="2"/><text x="80.7618%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.07%)</title><rect x="80.5774%" y="693" width="0.0656%" height="15" fill="rgb(235,184,23)" fg:x="1228" fg:w="1"/><text x="80.8274%" y="703.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.07%)</title><rect x="80.6430%" y="709" width="0.0656%" height="15" fill="rgb(227,226,48)" fg:x="1229" fg:w="1"/><text x="80.8930%" y="719.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.6430%" y="693" width="0.0656%" height="15" fill="rgb(206,150,11)" fg:x="1229" fg:w="1"/><text x="80.8930%" y="703.50"></text></g><g><title>toml::de::Deserializer::tables (14 samples, 0.92%)</title><rect x="80.0525%" y="725" width="0.9186%" height="15" fill="rgb(254,2,33)" fg:x="1220" fg:w="14"/><text x="80.3025%" y="735.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (4 samples, 0.26%)</title><rect x="80.7087%" y="709" width="0.2625%" height="15" fill="rgb(243,160,20)" fg:x="1230" fg:w="4"/><text x="80.9587%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::next (3 samples, 0.20%)</title><rect x="80.7743%" y="693" width="0.1969%" height="15" fill="rgb(218,208,30)" fg:x="1231" fg:w="3"/><text x="81.0243%" y="703.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.9055%" y="677" width="0.0656%" height="15" fill="rgb(224,120,49)" fg:x="1233" fg:w="1"/><text x="81.1555%" y="687.50"></text></g><g><title>toml::de::build_table_indices (2 samples, 0.13%)</title><rect x="80.9711%" y="725" width="0.1312%" height="15" fill="rgb(246,12,2)" fg:x="1234" fg:w="2"/><text x="81.2211%" y="735.50"></text></g><g><title>main (23 samples, 1.51%)</title><rect x="79.8556%" y="869" width="1.5092%" height="15" fill="rgb(236,117,3)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 1.51%)</title><rect x="79.8556%" y="853" width="1.5092%" height="15" fill="rgb(216,128,52)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="863.50"></text></g><g><title>rustup_init::main (23 samples, 1.51%)</title><rect x="79.8556%" y="837" width="1.5092%" height="15" fill="rgb(246,145,19)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="847.50"></text></g><g><title>rustup::cli::proxy_mode::main (23 samples, 1.51%)</title><rect x="79.8556%" y="821" width="1.5092%" height="15" fill="rgb(222,11,46)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="831.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (23 samples, 1.51%)</title><rect x="79.8556%" y="805" width="1.5092%" height="15" fill="rgb(245,82,36)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="815.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (23 samples, 1.51%)</title><rect x="79.8556%" y="789" width="1.5092%" height="15" fill="rgb(250,73,51)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="799.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (23 samples, 1.51%)</title><rect x="79.8556%" y="773" width="1.5092%" height="15" fill="rgb(221,189,23)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="783.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (23 samples, 1.51%)</title><rect x="79.8556%" y="757" width="1.5092%" height="15" fill="rgb(210,33,7)" fg:x="1217" fg:w="23"/><text x="80.1056%" y="767.50"></text></g><g><title>toml::de::from_str (20 samples, 1.31%)</title><rect x="80.0525%" y="741" width="1.3123%" height="15" fill="rgb(210,107,22)" fg:x="1220" fg:w="20"/><text x="80.3025%" y="751.50"></text></g><g><title>toml::de::build_table_pindices (4 samples, 0.26%)</title><rect x="81.1024%" y="725" width="0.2625%" height="15" fill="rgb(222,116,37)" fg:x="1236" fg:w="4"/><text x="81.3524%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.13%)</title><rect x="81.2336%" y="709" width="0.1312%" height="15" fill="rgb(254,17,48)" fg:x="1238" fg:w="2"/><text x="81.4836%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.13%)</title><rect x="81.2336%" y="693" width="0.1312%" height="15" fill="rgb(224,36,32)" fg:x="1238" fg:w="2"/><text x="81.4836%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;(usize, u16)&gt;&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="81.4304%" y="789" width="0.0656%" height="15" fill="rgb(232,90,46)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow::&lt;alloc::alloc::Global&gt; (1 samples, 0.07%)</title><rect x="81.4304%" y="773" width="0.0656%" height="15" fill="rgb(241,66,40)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="783.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="81.4304%" y="757" width="0.0656%" height="15" fill="rgb(249,184,29)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="767.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="81.4304%" y="741" width="0.0656%" height="15" fill="rgb(231,181,1)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="751.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="81.4304%" y="725" width="0.0656%" height="15" fill="rgb(224,94,2)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="735.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="81.4304%" y="709" width="0.0656%" height="15" fill="rgb(229,170,15)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="719.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="81.4304%" y="693" width="0.0656%" height="15" fill="rgb(240,127,35)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="703.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="81.4304%" y="677" width="0.0656%" height="15" fill="rgb(248,196,34)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="687.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="81.4304%" y="661" width="0.0656%" height="15" fill="rgb(236,137,7)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="671.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="81.4304%" y="645" width="0.0656%" height="15" fill="rgb(235,127,16)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="655.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="81.4304%" y="629" width="0.0656%" height="15" fill="rgb(250,192,54)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="639.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="81.4304%" y="613" width="0.0656%" height="15" fill="rgb(218,98,20)" fg:x="1241" fg:w="1"/><text x="81.6804%" y="623.50"></text></g><g><title>&lt;rustc_codegen_ssa::back::write::CodegenContext&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="81.4961%" y="789" width="0.0656%" height="15" fill="rgb(230,176,47)" fg:x="1242" fg:w="1"/><text x="81.7461%" y="799.50"></text></g><g><title>&lt;std::sync::mpmc::list::Channel&lt;alloc::boxed::Box&lt;dyn core::any::Any + core::marker::Send&gt;&gt;&gt;::recv (2 samples, 0.13%)</title><rect x="81.5617%" y="789" width="0.1312%" height="15" fill="rgb(244,2,33)" fg:x="1243" fg:w="2"/><text x="81.8117%" y="799.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="81.6273%" y="773" width="0.0656%" height="15" fill="rgb(231,100,17)" fg:x="1244" fg:w="1"/><text x="81.8773%" y="783.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="81.6273%" y="757" width="0.0656%" height="15" fill="rgb(245,23,12)" fg:x="1244" fg:w="1"/><text x="81.8773%" y="767.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_thread&lt;rustc_codegen_ssa::back::write::start_executing_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#4}, core::result::Result&lt;rustc_codegen_ssa::back::write::CompiledModules, ()&gt;&gt;::{closure#0}, core::result::Result&lt;rustc_codegen_ssa::back::write::CompiledModules, ()&gt;&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (6 samples, 0.39%)</title><rect x="81.3648%" y="821" width="0.3937%" height="15" fill="rgb(249,55,22)" fg:x="1240" fg:w="6"/><text x="81.6148%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_thread&lt;rustc_codegen_ssa::back::write::start_executing_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#4}, core::result::Result&lt;rustc_codegen_ssa::back::write::CompiledModules, ()&gt;&gt;::{closure#0}, core::result::Result&lt;rustc_codegen_ssa::back::write::CompiledModules, ()&gt;&gt; (6 samples, 0.39%)</title><rect x="81.3648%" y="805" width="0.3937%" height="15" fill="rgb(207,134,9)" fg:x="1240" fg:w="6"/><text x="81.6148%" y="815.50"></text></g><g><title>rustc_codegen_ssa::back::write::spawn_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="81.6929%" y="789" width="0.0656%" height="15" fill="rgb(218,134,0)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="81.6929%" y="773" width="0.0656%" height="15" fill="rgb(213,212,33)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="81.6929%" y="757" width="0.0656%" height="15" fill="rgb(252,106,18)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="81.6929%" y="741" width="0.0656%" height="15" fill="rgb(208,126,42)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="81.6929%" y="725" width="0.0656%" height="15" fill="rgb(246,175,29)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="81.6929%" y="709" width="0.0656%" height="15" fill="rgb(215,13,50)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="719.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="81.6929%" y="693" width="0.0656%" height="15" fill="rgb(216,172,15)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="81.6929%" y="677" width="0.0656%" height="15" fill="rgb(212,103,13)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="81.6929%" y="661" width="0.0656%" height="15" fill="rgb(231,171,36)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="81.6929%" y="645" width="0.0656%" height="15" fill="rgb(250,123,20)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="81.6929%" y="629" width="0.0656%" height="15" fill="rgb(212,53,50)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="81.6929%" y="613" width="0.0656%" height="15" fill="rgb(243,54,12)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="81.6929%" y="597" width="0.0656%" height="15" fill="rgb(234,101,34)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="81.6929%" y="581" width="0.0656%" height="15" fill="rgb(254,67,22)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="81.6929%" y="565" width="0.0656%" height="15" fill="rgb(250,35,47)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="81.6929%" y="549" width="0.0656%" height="15" fill="rgb(226,126,38)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="81.6929%" y="533" width="0.0656%" height="15" fill="rgb(216,138,53)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="81.6929%" y="517" width="0.0656%" height="15" fill="rgb(246,199,43)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="527.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="81.6929%" y="501" width="0.0656%" height="15" fill="rgb(232,125,11)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="511.50"></text></g><g><title>thread_alloc_event (1 samples, 0.07%)</title><rect x="81.6929%" y="485" width="0.0656%" height="15" fill="rgb(218,219,45)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="495.50"></text></g><g><title>te_event_advance (1 samples, 0.07%)</title><rect x="81.6929%" y="469" width="0.0656%" height="15" fill="rgb(216,102,54)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="479.50"></text></g><g><title>te_ctx_get (1 samples, 0.07%)</title><rect x="81.6929%" y="453" width="0.0656%" height="15" fill="rgb(250,228,7)" fg:x="1245" fg:w="1"/><text x="81.9429%" y="463.50"></text></g><g><title>&lt;jobserver::imp::Client&gt;::acquire_allow_interrupts (1 samples, 0.07%)</title><rect x="81.7585%" y="773" width="0.0656%" height="15" fill="rgb(226,125,25)" fg:x="1246" fg:w="1"/><text x="82.0085%" y="783.50"></text></g><g><title>&lt;std::sys::unix::fs::File as std::sys_common::AsInner&lt;std::sys::unix::fd::FileDesc&gt;&gt;::as_inner (1 samples, 0.07%)</title><rect x="81.7585%" y="757" width="0.0656%" height="15" fill="rgb(224,165,27)" fg:x="1246" fg:w="1"/><text x="82.0085%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="81.3648%" y="853" width="0.5249%" height="15" fill="rgb(233,86,3)" fg:x="1240" fg:w="8"/><text x="81.6148%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.52%)</title><rect x="81.3648%" y="837" width="0.5249%" height="15" fill="rgb(228,116,20)" fg:x="1240" fg:w="8"/><text x="81.6148%" y="847.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;jobserver::imp::spawn_helper::{closure#1}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (2 samples, 0.13%)</title><rect x="81.7585%" y="821" width="0.1312%" height="15" fill="rgb(209,192,17)" fg:x="1246" fg:w="2"/><text x="82.0085%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;jobserver::imp::spawn_helper::{closure#1}, ()&gt; (2 samples, 0.13%)</title><rect x="81.7585%" y="805" width="0.1312%" height="15" fill="rgb(224,88,34)" fg:x="1246" fg:w="2"/><text x="82.0085%" y="815.50"></text></g><g><title>&lt;jobserver::HelperState&gt;::for_each_request::&lt;jobserver::imp::spawn_helper::{closure#1}::{closure#0}&gt; (2 samples, 0.13%)</title><rect x="81.7585%" y="789" width="0.1312%" height="15" fill="rgb(233,38,6)" fg:x="1246" fg:w="2"/><text x="82.0085%" y="799.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="81.8241%" y="773" width="0.0656%" height="15" fill="rgb(212,59,30)" fg:x="1247" fg:w="1"/><text x="82.0741%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.07%)</title><rect x="81.8241%" y="757" width="0.0656%" height="15" fill="rgb(213,80,3)" fg:x="1247" fg:w="1"/><text x="82.0741%" y="767.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="81.8241%" y="741" width="0.0656%" height="15" fill="rgb(251,178,7)" fg:x="1247" fg:w="1"/><text x="82.0741%" y="751.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.07%)</title><rect x="81.8241%" y="725" width="0.0656%" height="15" fill="rgb(213,154,26)" fg:x="1247" fg:w="1"/><text x="82.0741%" y="735.50"></text></g><g><title>[libc.so.6] (50 samples, 3.28%)</title><rect x="78.7402%" y="885" width="3.2808%" height="15" fill="rgb(238,165,49)" fg:x="1200" fg:w="50"/><text x="78.9902%" y="895.50">[li..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.66%)</title><rect x="81.3648%" y="869" width="0.6562%" height="15" fill="rgb(248,91,46)" fg:x="1240" fg:w="10"/><text x="81.6148%" y="879.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.13%)</title><rect x="81.8898%" y="853" width="0.1312%" height="15" fill="rgb(244,21,52)" fg:x="1248" fg:w="2"/><text x="82.1398%" y="863.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.13%)</title><rect x="81.8898%" y="837" width="0.1312%" height="15" fill="rgb(247,122,20)" fg:x="1248" fg:w="2"/><text x="82.1398%" y="847.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.13%)</title><rect x="81.8898%" y="821" width="0.1312%" height="15" fill="rgb(218,27,9)" fg:x="1248" fg:w="2"/><text x="82.1398%" y="831.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.13%)</title><rect x="81.8898%" y="805" width="0.1312%" height="15" fill="rgb(246,7,6)" fg:x="1248" fg:w="2"/><text x="82.1398%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="82.0210%" y="869" width="0.0656%" height="15" fill="rgb(227,135,54)" fg:x="1250" fg:w="1"/><text x="82.2710%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow::&lt;alloc::alloc::Global&gt; (1 samples, 0.07%)</title><rect x="82.0866%" y="869" width="0.0656%" height="15" fill="rgb(247,14,11)" fg:x="1251" fg:w="1"/><text x="82.3366%" y="879.50"></text></g><g><title>[librustc_driver-7adeb809cd07c1ca.so] (3 samples, 0.20%)</title><rect x="82.0210%" y="885" width="0.1969%" height="15" fill="rgb(206,149,34)" fg:x="1250" fg:w="3"/><text x="82.2710%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="82.1522%" y="869" width="0.0656%" height="15" fill="rgb(227,228,4)" fg:x="1252" fg:w="1"/><text x="82.4022%" y="879.50"></text></g><g><title>[rustc] (1 samples, 0.07%)</title><rect x="82.2178%" y="885" width="0.0656%" height="15" fill="rgb(238,218,28)" fg:x="1253" fg:w="1"/><text x="82.4678%" y="895.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.07%)</title><rect x="82.2178%" y="869" width="0.0656%" height="15" fill="rgb(252,86,40)" fg:x="1253" fg:w="1"/><text x="82.4678%" y="879.50"></text></g><g><title>&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::sty::BoundVariableKind&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="82.2835%" y="869" width="0.0656%" height="15" fill="rgb(251,225,11)" fg:x="1254" fg:w="1"/><text x="82.5335%" y="879.50"></text></g><g><title>&lt;&lt;std::thread::Builder&gt;::spawn_unchecked_&lt;&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::spawn_named_thread&lt;rustc_codegen_ssa::back::write::spawn_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{closure#0}, ()&gt;::{closure#0}, ()&gt;::{closure#1} as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::{shim:vtable#0} (1 samples, 0.07%)</title><rect x="82.3491%" y="869" width="0.0656%" height="15" fill="rgb(206,46,49)" fg:x="1255" fg:w="1"/><text x="82.5991%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;ena::unify::VarValue&lt;rustc_middle::infer::unify_key::RegionVidKey&gt;&gt;&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="82.4147%" y="869" width="0.0656%" height="15" fill="rgb(245,128,24)" fg:x="1256" fg:w="1"/><text x="82.6647%" y="879.50"></text></g><g><title>&lt;jobserver::imp::Client&gt;::acquire_allow_interrupts (1 samples, 0.07%)</title><rect x="82.4803%" y="869" width="0.0656%" height="15" fill="rgb(219,177,34)" fg:x="1257" fg:w="1"/><text x="82.7303%" y="879.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (1 samples, 0.07%)</title><rect x="82.5459%" y="869" width="0.0656%" height="15" fill="rgb(218,60,48)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="879.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="853" width="0.0656%" height="15" fill="rgb(221,11,5)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="863.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="82.5459%" y="837" width="0.0656%" height="15" fill="rgb(220,148,13)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="821" width="0.0656%" height="15" fill="rgb(210,16,3)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="805" width="0.0656%" height="15" fill="rgb(236,80,2)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="815.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="82.5459%" y="789" width="0.0656%" height="15" fill="rgb(239,129,19)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="799.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.07%)</title><rect x="82.5459%" y="773" width="0.0656%" height="15" fill="rgb(220,106,35)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="783.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="757" width="0.0656%" height="15" fill="rgb(252,139,45)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="767.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="741" width="0.0656%" height="15" fill="rgb(229,8,36)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="751.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="725" width="0.0656%" height="15" fill="rgb(230,126,33)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="709" width="0.0656%" height="15" fill="rgb(239,140,21)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="693" width="0.0656%" height="15" fill="rgb(254,104,9)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="677" width="0.0656%" height="15" fill="rgb(239,52,14)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="661" width="0.0656%" height="15" fill="rgb(208,227,44)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="82.5459%" y="645" width="0.0656%" height="15" fill="rgb(246,18,19)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="82.5459%" y="629" width="0.0656%" height="15" fill="rgb(235,228,25)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="613" width="0.0656%" height="15" fill="rgb(240,156,20)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="597" width="0.0656%" height="15" fill="rgb(224,8,20)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="82.5459%" y="581" width="0.0656%" height="15" fill="rgb(214,12,52)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="82.5459%" y="565" width="0.0656%" height="15" fill="rgb(211,220,47)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="82.5459%" y="549" width="0.0656%" height="15" fill="rgb(250,173,5)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="533" width="0.0656%" height="15" fill="rgb(250,125,52)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="517" width="0.0656%" height="15" fill="rgb(209,133,18)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="527.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="82.5459%" y="501" width="0.0656%" height="15" fill="rgb(216,173,22)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="485" width="0.0656%" height="15" fill="rgb(205,3,22)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="495.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.5459%" y="469" width="0.0656%" height="15" fill="rgb(248,22,20)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="479.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::DepGraphData&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::dep_node_index_of_opt (1 samples, 0.07%)</title><rect x="82.5459%" y="453" width="0.0656%" height="15" fill="rgb(233,6,29)" fg:x="1258" fg:w="1"/><text x="82.7959%" y="463.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (1 samples, 0.07%)</title><rect x="82.6115%" y="821" width="0.0656%" height="15" fill="rgb(240,22,54)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="831.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="805" width="0.0656%" height="15" fill="rgb(231,133,32)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="815.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="789" width="0.0656%" height="15" fill="rgb(248,193,4)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="799.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.6115%" y="773" width="0.0656%" height="15" fill="rgb(211,178,46)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="783.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="82.6115%" y="757" width="0.0656%" height="15" fill="rgb(224,5,42)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="767.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="741" width="0.0656%" height="15" fill="rgb(239,176,25)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="751.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="725" width="0.0656%" height="15" fill="rgb(245,187,50)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="735.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.6115%" y="709" width="0.0656%" height="15" fill="rgb(248,24,15)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="719.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="82.6115%" y="693" width="0.0656%" height="15" fill="rgb(205,166,13)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="703.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="677" width="0.0656%" height="15" fill="rgb(208,114,23)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.6115%" y="661" width="0.0656%" height="15" fill="rgb(239,127,18)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="671.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="82.6115%" y="645" width="0.0656%" height="15" fill="rgb(219,154,28)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="655.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="629" width="0.0656%" height="15" fill="rgb(225,157,23)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="639.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="613" width="0.0656%" height="15" fill="rgb(219,8,6)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="623.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.6115%" y="597" width="0.0656%" height="15" fill="rgb(212,47,6)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="607.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="82.6115%" y="581" width="0.0656%" height="15" fill="rgb(224,190,4)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="591.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="82.6115%" y="565" width="0.0656%" height="15" fill="rgb(239,183,29)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="575.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="82.6115%" y="549" width="0.0656%" height="15" fill="rgb(213,57,7)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="559.50"></text></g><g><title>llvm::MDTuple::getImpl (1 samples, 0.07%)</title><rect x="82.6115%" y="533" width="0.0656%" height="15" fill="rgb(216,148,1)" fg:x="1259" fg:w="1"/><text x="82.8615%" y="543.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::compile_codegen_unit (2 samples, 0.13%)</title><rect x="82.6115%" y="869" width="0.1312%" height="15" fill="rgb(236,182,29)" fg:x="1259" fg:w="2"/><text x="82.8615%" y="879.50"></text></g><g><title>rustc_codegen_llvm::base::compile_codegen_unit::module_codegen (2 samples, 0.13%)</title><rect x="82.6115%" y="853" width="0.1312%" height="15" fill="rgb(244,120,48)" fg:x="1259" fg:w="2"/><text x="82.8615%" y="863.50"></text></g><g><title>rustc_codegen_ssa::mir::codegen_mir::&lt;rustc_codegen_llvm::builder::Builder&gt; (2 samples, 0.13%)</title><rect x="82.6115%" y="837" width="0.1312%" height="15" fill="rgb(206,71,34)" fg:x="1259" fg:w="2"/><text x="82.8615%" y="847.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::create_scope_map::make_mir_scope (1 samples, 0.07%)</title><rect x="82.6772%" y="821" width="0.0656%" height="15" fill="rgb(242,32,6)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.6772%" y="805" width="0.0656%" height="15" fill="rgb(241,35,3)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.6772%" y="789" width="0.0656%" height="15" fill="rgb(222,62,19)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="799.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_of_instance (1 samples, 0.07%)</title><rect x="82.6772%" y="773" width="0.0656%" height="15" fill="rgb(223,110,41)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="783.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_new_uncached (1 samples, 0.07%)</title><rect x="82.6772%" y="757" width="0.0656%" height="15" fill="rgb(208,224,4)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="767.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::layout_of (1 samples, 0.07%)</title><rect x="82.6772%" y="741" width="0.0656%" height="15" fill="rgb(241,137,19)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="751.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.6772%" y="725" width="0.0656%" height="15" fill="rgb(244,24,17)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="735.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.6772%" y="709" width="0.0656%" height="15" fill="rgb(245,178,49)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="719.50"></text></g><g><title>rustc_ty_utils::layout::layout_of (1 samples, 0.07%)</title><rect x="82.6772%" y="693" width="0.0656%" height="15" fill="rgb(219,160,38)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="703.50"></text></g><g><title>&lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum::&lt;rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="82.6772%" y="677" width="0.0656%" height="15" fill="rgb(228,137,14)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_abi::LayoutS&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_abi::LayoutS, core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum&lt;rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt;::{closure#6}&gt;, core::option::Option&lt;core::convert::Infallible&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="82.6772%" y="661" width="0.0656%" height="15" fill="rgb(237,134,11)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum&lt;rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt;::{closure#6}&gt;, core::option::Option&lt;core::convert::Infallible&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="82.6772%" y="645" width="0.0656%" height="15" fill="rgb(211,126,44)" fg:x="1260" fg:w="1"/><text x="82.9272%" y="655.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_decl (1 samples, 0.07%)</title><rect x="82.7428%" y="869" width="0.0656%" height="15" fill="rgb(226,171,33)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="879.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_expr_with_expectation_and_args (1 samples, 0.07%)</title><rect x="82.7428%" y="853" width="0.0656%" height="15" fill="rgb(253,99,13)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="863.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_match::{closure#0} (1 samples, 0.07%)</title><rect x="82.7428%" y="837" width="0.0656%" height="15" fill="rgb(244,48,7)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="847.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_expr_with_expectation_and_args (1 samples, 0.07%)</title><rect x="82.7428%" y="821" width="0.0656%" height="15" fill="rgb(244,217,54)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="831.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_call (1 samples, 0.07%)</title><rect x="82.7428%" y="805" width="0.0656%" height="15" fill="rgb(224,15,18)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="815.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_argument_types (1 samples, 0.07%)</title><rect x="82.7428%" y="789" width="0.0656%" height="15" fill="rgb(244,99,12)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="799.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_expr_with_expectation_and_args (1 samples, 0.07%)</title><rect x="82.7428%" y="773" width="0.0656%" height="15" fill="rgb(233,226,8)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="783.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_expr_with_expectation_and_args (1 samples, 0.07%)</title><rect x="82.7428%" y="757" width="0.0656%" height="15" fill="rgb(229,211,3)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="767.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::lookup_method (1 samples, 0.07%)</title><rect x="82.7428%" y="741" width="0.0656%" height="15" fill="rgb(216,140,21)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="751.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::probe::&lt;core::result::Result&lt;rustc_hir_typeck::method::probe::Pick, rustc_hir_typeck::method::MethodError&gt;, &lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::probe_op&lt;&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::probe_for_name::{closure#0}, rustc_hir_typeck::method::probe::Pick&gt;::{closure#4}&gt; (1 samples, 0.07%)</title><rect x="82.7428%" y="725" width="0.0656%" height="15" fill="rgb(234,122,30)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="735.50"></text></g><g><title>&lt;rustc_hir_typeck::method::probe::ProbeContext&gt;::assemble_inherent_candidates (1 samples, 0.07%)</title><rect x="82.7428%" y="709" width="0.0656%" height="15" fill="rgb(236,25,46)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="719.50"></text></g><g><title>&lt;rustc_hir_typeck::method::probe::ProbeContext&gt;::assemble_inherent_impl_candidates_for_type (1 samples, 0.07%)</title><rect x="82.7428%" y="693" width="0.0656%" height="15" fill="rgb(217,52,54)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="703.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::associated_value (1 samples, 0.07%)</title><rect x="82.7428%" y="677" width="0.0656%" height="15" fill="rgb(222,29,26)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="687.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::associated_items (1 samples, 0.07%)</title><rect x="82.7428%" y="661" width="0.0656%" height="15" fill="rgb(216,177,29)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::associated_items, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.7428%" y="645" width="0.0656%" height="15" fill="rgb(247,136,51)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::associated_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.7428%" y="629" width="0.0656%" height="15" fill="rgb(231,47,47)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="639.50"></text></g><g><title>rustc_ty_utils::assoc::associated_items (1 samples, 0.07%)</title><rect x="82.7428%" y="613" width="0.0656%" height="15" fill="rgb(211,192,36)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="623.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::associated_item_def_ids (1 samples, 0.07%)</title><rect x="82.7428%" y="597" width="0.0656%" height="15" fill="rgb(229,156,32)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::associated_item_def_ids, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.7428%" y="581" width="0.0656%" height="15" fill="rgb(248,213,20)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::associated_item_def_ids, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.7428%" y="565" width="0.0656%" height="15" fill="rgb(217,64,7)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="575.50"></text></g><g><title>&lt;[rustc_span::def_id::DefId] as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="82.7428%" y="549" width="0.0656%" height="15" fill="rgb(232,142,8)" fg:x="1261" fg:w="1"/><text x="82.9928%" y="559.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_overloaded_binop (1 samples, 0.07%)</title><rect x="82.8084%" y="869" width="0.0656%" height="15" fill="rgb(224,92,44)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="879.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::lookup_op_method (1 samples, 0.07%)</title><rect x="82.8084%" y="853" width="0.0656%" height="15" fill="rgb(214,169,17)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="863.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::lookup_method_in_trait (1 samples, 0.07%)</title><rect x="82.8084%" y="837" width="0.0656%" height="15" fill="rgb(210,59,37)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="847.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt&gt;::predicate_may_hold (1 samples, 0.07%)</title><rect x="82.8084%" y="821" width="0.0656%" height="15" fill="rgb(214,116,48)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::evaluate_obligation, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="805" width="0.0656%" height="15" fill="rgb(244,191,6)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::evaluate_obligation, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 2]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 2]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="789" width="0.0656%" height="15" fill="rgb(241,50,52)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="799.50"></text></g><g><title>rustc_traits::evaluate_obligation::evaluate_obligation (1 samples, 0.07%)</title><rect x="82.8084%" y="773" width="0.0656%" height="15" fill="rgb(236,75,39)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="783.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_predicate_recursively (1 samples, 0.07%)</title><rect x="82.8084%" y="757" width="0.0656%" height="15" fill="rgb(236,99,0)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="767.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_stack (1 samples, 0.07%)</title><rect x="82.8084%" y="741" width="0.0656%" height="15" fill="rgb(207,202,15)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="751.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::with_anon_task::&lt;rustc_middle::ty::context::TyCtxt, &lt;rustc_trait_selection::traits::select::SelectionContext&gt;::in_task&lt;&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation::{closure#0}::{closure#0}, core::result::Result&lt;core::option::Option&lt;rustc_middle::traits::select::SelectionCandidate&gt;, rustc_middle::traits::SelectionError&gt;&gt;::{closure#0}, core::result::Result&lt;core::option::Option&lt;rustc_middle::traits::select::SelectionCandidate&gt;, rustc_middle::traits::SelectionError&gt;&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="725" width="0.0656%" height="15" fill="rgb(233,207,14)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="735.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation_no_cache (1 samples, 0.07%)</title><rect x="82.8084%" y="709" width="0.0656%" height="15" fill="rgb(226,27,51)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="719.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specializes, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="693" width="0.0656%" height="15" fill="rgb(206,104,42)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specializes, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="677" width="0.0656%" height="15" fill="rgb(212,225,4)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="687.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specializes (1 samples, 0.07%)</title><rect x="82.8084%" y="661" width="0.0656%" height="15" fill="rgb(233,96,42)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="671.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::param_env (1 samples, 0.07%)</title><rect x="82.8084%" y="645" width="0.0656%" height="15" fill="rgb(229,21,32)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="629" width="0.0656%" height="15" fill="rgb(226,216,24)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="613" width="0.0656%" height="15" fill="rgb(221,163,17)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="623.50"></text></g><g><title>rustc_ty_utils::ty::param_env (1 samples, 0.07%)</title><rect x="82.8084%" y="597" width="0.0656%" height="15" fill="rgb(216,216,42)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="581" width="0.0656%" height="15" fill="rgb(240,118,7)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="565" width="0.0656%" height="15" fill="rgb(221,67,37)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="575.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::def_span (1 samples, 0.07%)</title><rect x="82.8084%" y="549" width="0.0656%" height="15" fill="rgb(241,32,44)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="559.50"></text></g><g><title>&lt;rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="82.8084%" y="533" width="0.0656%" height="15" fill="rgb(235,204,43)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="543.50"></text></g><g><title>&lt;rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="82.8084%" y="517" width="0.0656%" height="15" fill="rgb(213,116,10)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="527.50"></text></g><g><title>&lt;scoped_tls::ScopedKey&lt;rustc_span::SessionGlobals&gt;&gt;::with::&lt;&lt;rustc_span::hygiene::HygieneData&gt;::with&lt;(), rustc_span::hygiene::register_expn_id::{closure#0}&gt;::{closure#0}, ()&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="501" width="0.0656%" height="15" fill="rgb(239,15,48)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::hygiene::ExpnId, rustc_span::hygiene::ExpnData)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::hygiene::ExpnId, rustc_span::hygiene::ExpnId, rustc_span::hygiene::ExpnData, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="82.8084%" y="485" width="0.0656%" height="15" fill="rgb(207,123,36)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="82.8084%" y="469" width="0.0656%" height="15" fill="rgb(209,103,30)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="82.8084%" y="453" width="0.0656%" height="15" fill="rgb(238,100,19)" fg:x="1262" fg:w="1"/><text x="83.0584%" y="463.50"></text></g><g><title>&lt;rustc_interface::queries::Queries&gt;::linker (1 samples, 0.07%)</title><rect x="82.8740%" y="853" width="0.0656%" height="15" fill="rgb(244,30,14)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="863.50"></text></g><g><title>&lt;rustc_middle::ty::context::GlobalCtxt&gt;::enter::&lt;&lt;rustc_interface::queries::Queries&gt;::linker::{closure#0}, (core::option::Option&lt;rustc_data_structures::svh::Svh&gt;, alloc::sync::Arc&lt;rustc_session::config::OutputFilenames&gt;, rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;)&gt; (1 samples, 0.07%)</title><rect x="82.8740%" y="837" width="0.0656%" height="15" fill="rgb(249,174,6)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="847.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::crate_hash (1 samples, 0.07%)</title><rect x="82.8740%" y="821" width="0.0656%" height="15" fill="rgb(235,213,41)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::crate_hash, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.8740%" y="805" width="0.0656%" height="15" fill="rgb(213,118,6)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::crate_hash, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.8740%" y="789" width="0.0656%" height="15" fill="rgb(235,44,51)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="799.50"></text></g><g><title>rustc_middle::hir::map::crate_hash (1 samples, 0.07%)</title><rect x="82.8740%" y="773" width="0.0656%" height="15" fill="rgb(217,9,53)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="783.50"></text></g><g><title>&lt;rustc_session::options::Options&gt;::dep_tracking_hash (1 samples, 0.07%)</title><rect x="82.8740%" y="757" width="0.0656%" height="15" fill="rgb(237,172,34)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="767.50"></text></g><g><title>rustc_session::config::dep_tracking::stable_hash (1 samples, 0.07%)</title><rect x="82.8740%" y="741" width="0.0656%" height="15" fill="rgb(206,206,11)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="82.8740%" y="725" width="0.0656%" height="15" fill="rgb(214,149,29)" fg:x="1263" fg:w="1"/><text x="83.1240%" y="735.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::declare::PreDefineMethods&gt;::predefine_fn (1 samples, 0.07%)</title><rect x="82.9396%" y="725" width="0.0656%" height="15" fill="rgb(208,123,3)" fg:x="1264" fg:w="1"/><text x="83.1896%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="82.9396%" y="709" width="0.0656%" height="15" fill="rgb(229,126,4)" fg:x="1264" fg:w="1"/><text x="83.1896%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="82.9396%" y="693" width="0.0656%" height="15" fill="rgb(222,92,36)" fg:x="1264" fg:w="1"/><text x="83.1896%" y="703.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_of_instance (1 samples, 0.07%)</title><rect x="82.9396%" y="677" width="0.0656%" height="15" fill="rgb(216,39,41)" fg:x="1264" fg:w="1"/><text x="83.1896%" y="687.50"></text></g><g><title>LLVMRustContextCreate (2 samples, 0.13%)</title><rect x="83.0052%" y="725" width="0.1312%" height="15" fill="rgb(253,127,28)" fg:x="1265" fg:w="2"/><text x="83.2552%" y="735.50"></text></g><g><title>llvm::LLVMContext::LLVMContext (2 samples, 0.13%)</title><rect x="83.0052%" y="709" width="0.1312%" height="15" fill="rgb(249,152,51)" fg:x="1265" fg:w="2"/><text x="83.2552%" y="719.50"></text></g><g><title>llvm::LLVMContextImpl::LLVMContextImpl (1 samples, 0.07%)</title><rect x="83.0709%" y="693" width="0.0656%" height="15" fill="rgb(209,123,42)" fg:x="1266" fg:w="1"/><text x="83.3209%" y="703.50"></text></g><g><title>rustc_codegen_llvm::back::write::create_target_machine (1 samples, 0.07%)</title><rect x="83.1365%" y="725" width="0.0656%" height="15" fill="rgb(241,118,22)" fg:x="1267" fg:w="1"/><text x="83.3865%" y="735.50"></text></g><g><title>rustc_codegen_llvm::back::write::target_machine_factory::{closure#0} (1 samples, 0.07%)</title><rect x="83.1365%" y="709" width="0.0656%" height="15" fill="rgb(208,25,7)" fg:x="1267" fg:w="1"/><text x="83.3865%" y="719.50"></text></g><g><title>LLVMRustCreateTargetMachine (1 samples, 0.07%)</title><rect x="83.1365%" y="693" width="0.0656%" height="15" fill="rgb(243,144,39)" fg:x="1267" fg:w="1"/><text x="83.3865%" y="703.50"></text></g><g><title>llvm::Triple::normalize[abi:cxx11] (1 samples, 0.07%)</title><rect x="83.1365%" y="677" width="0.0656%" height="15" fill="rgb(250,50,5)" fg:x="1267" fg:w="1"/><text x="83.3865%" y="687.50"></text></g><g><title>rustc_codegen_llvm::back::write::target_machine_factory::{closure#0} (1 samples, 0.07%)</title><rect x="83.2677%" y="693" width="0.0656%" height="15" fill="rgb(207,67,11)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="703.50"></text></g><g><title>LLVMRustCreateTargetMachine (1 samples, 0.07%)</title><rect x="83.2677%" y="677" width="0.0656%" height="15" fill="rgb(245,204,40)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="687.50"></text></g><g><title>llvm::RegisterTargetMachine&lt;llvm::X86TargetMachine&gt;::Allocator (1 samples, 0.07%)</title><rect x="83.2677%" y="661" width="0.0656%" height="15" fill="rgb(238,228,24)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="671.50"></text></g><g><title>llvm::LLVMTargetMachine::initAsmInfo (1 samples, 0.07%)</title><rect x="83.2677%" y="645" width="0.0656%" height="15" fill="rgb(217,116,22)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="655.50"></text></g><g><title>createX86MCInstrInfo (1 samples, 0.07%)</title><rect x="83.2677%" y="629" width="0.0656%" height="15" fill="rgb(234,98,12)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="639.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="83.2677%" y="613" width="0.0656%" height="15" fill="rgb(242,170,50)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="623.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="83.2677%" y="597" width="0.0656%" height="15" fill="rgb(235,7,5)" fg:x="1269" fg:w="1"/><text x="83.5177%" y="607.50"></text></g><g><title>rustc_codegen_llvm::context::create_module (3 samples, 0.20%)</title><rect x="83.2021%" y="725" width="0.1969%" height="15" fill="rgb(241,114,28)" fg:x="1268" fg:w="3"/><text x="83.4521%" y="735.50"></text></g><g><title>rustc_codegen_llvm::back::write::create_informational_target_machine (2 samples, 0.13%)</title><rect x="83.2677%" y="709" width="0.1312%" height="15" fill="rgb(246,112,42)" fg:x="1269" fg:w="2"/><text x="83.5177%" y="719.50"></text></g><g><title>rustc_codegen_llvm::back::write::target_machine_factory (1 samples, 0.07%)</title><rect x="83.3333%" y="693" width="0.0656%" height="15" fill="rgb(248,228,14)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="703.50"></text></g><g><title>&lt;alloc::string::String as &lt;alloc::ffi::c_str::CString&gt;::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.07%)</title><rect x="83.3333%" y="677" width="0.0656%" height="15" fill="rgb(208,133,18)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="687.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.07%)</title><rect x="83.3333%" y="661" width="0.0656%" height="15" fill="rgb(207,35,49)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.07%)</title><rect x="83.3333%" y="645" width="0.0656%" height="15" fill="rgb(205,68,36)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.07%)</title><rect x="83.3333%" y="629" width="0.0656%" height="15" fill="rgb(245,62,40)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.07%)</title><rect x="83.3333%" y="613" width="0.0656%" height="15" fill="rgb(228,27,24)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.07%)</title><rect x="83.3333%" y="597" width="0.0656%" height="15" fill="rgb(253,19,12)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="83.3333%" y="581" width="0.0656%" height="15" fill="rgb(232,28,20)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="83.3333%" y="565" width="0.0656%" height="15" fill="rgb(218,35,51)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="575.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="83.3333%" y="549" width="0.0656%" height="15" fill="rgb(212,90,40)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="83.3333%" y="533" width="0.0656%" height="15" fill="rgb(220,172,12)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="543.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="83.3333%" y="517" width="0.0656%" height="15" fill="rgb(226,159,20)" fg:x="1270" fg:w="1"/><text x="83.5833%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;, rustc_codegen_ssa::mir::codegen_mir&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#4}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;, &lt;alloc::vec::Vec&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;::extend_trusted&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;, alloc::vec::into_iter::IntoIter&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;, core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;, rustc_codegen_ssa::mir::codegen_mir&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#4}&gt;&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="83.5302%" y="709" width="0.0656%" height="15" fill="rgb(234,205,16)" fg:x="1273" fg:w="1"/><text x="83.7802%" y="719.50"></text></g><g><title>&lt;rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind&gt;::read_deps::&lt;&lt;rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::read_index::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="83.5958%" y="693" width="0.0656%" height="15" fill="rgb(207,9,39)" fg:x="1274" fg:w="1"/><text x="83.8458%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_query_system::dep_graph::graph::DepNodeIndex: 8]&gt;&gt;::try_reserve (1 samples, 0.07%)</title><rect x="83.5958%" y="677" width="0.0656%" height="15" fill="rgb(249,143,15)" fg:x="1274" fg:w="1"/><text x="83.8458%" y="687.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="83.5958%" y="661" width="0.0656%" height="15" fill="rgb(253,133,29)" fg:x="1274" fg:w="1"/><text x="83.8458%" y="671.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::file_metadata (1 samples, 0.07%)</title><rect x="83.6614%" y="693" width="0.0656%" height="15" fill="rgb(221,187,0)" fg:x="1275" fg:w="1"/><text x="83.9114%" y="703.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="83.6614%" y="677" width="0.0656%" height="15" fill="rgb(205,204,26)" fg:x="1275" fg:w="1"/><text x="83.9114%" y="687.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="83.6614%" y="661" width="0.0656%" height="15" fill="rgb(224,68,54)" fg:x="1275" fg:w="1"/><text x="83.9114%" y="671.50"></text></g><g><title>tsd_get (1 samples, 0.07%)</title><rect x="83.6614%" y="645" width="0.0656%" height="15" fill="rgb(209,67,4)" fg:x="1275" fg:w="1"/><text x="83.9114%" y="655.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::build_tuple_type_di_node (1 samples, 0.07%)</title><rect x="83.7270%" y="677" width="0.0656%" height="15" fill="rgb(228,229,18)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_tuple_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="83.7270%" y="661" width="0.0656%" height="15" fill="rgb(231,89,13)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="671.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7270%" y="645" width="0.0656%" height="15" fill="rgb(210,182,18)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="655.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, rustc_codegen_llvm::debuginfo::metadata::build_tuple_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7270%" y="629" width="0.0656%" height="15" fill="rgb(240,105,2)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="639.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_tuple_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, rustc_middle::ty::Ty),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="83.7270%" y="613" width="0.0656%" height="15" fill="rgb(207,170,50)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="623.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.7270%" y="597" width="0.0656%" height="15" fill="rgb(232,133,24)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="607.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="83.7270%" y="581" width="0.0656%" height="15" fill="rgb(235,166,27)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="591.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="83.7270%" y="565" width="0.0656%" height="15" fill="rgb(209,19,13)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="575.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7270%" y="549" width="0.0656%" height="15" fill="rgb(226,79,39)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7270%" y="533" width="0.0656%" height="15" fill="rgb(222,163,10)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="543.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::stub (1 samples, 0.07%)</title><rect x="83.7270%" y="517" width="0.0656%" height="15" fill="rgb(214,44,19)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="527.50"></text></g><g><title>LLVMRustDIBuilderCreateStructType (1 samples, 0.07%)</title><rect x="83.7270%" y="501" width="0.0656%" height="15" fill="rgb(210,217,13)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="511.50"></text></g><g><title>llvm::DIBuilder::createStructType (1 samples, 0.07%)</title><rect x="83.7270%" y="485" width="0.0656%" height="15" fill="rgb(237,61,54)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="495.50"></text></g><g><title>llvm::DICompositeType::getImpl (1 samples, 0.07%)</title><rect x="83.7270%" y="469" width="0.0656%" height="15" fill="rgb(226,184,24)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="479.50"></text></g><g><title>llvm::MDNode::MDNode (1 samples, 0.07%)</title><rect x="83.7270%" y="453" width="0.0656%" height="15" fill="rgb(223,226,4)" fg:x="1276" fg:w="1"/><text x="83.9770%" y="463.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="83.7927%" y="661" width="0.0656%" height="15" fill="rgb(210,26,41)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="671.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7927%" y="645" width="0.0656%" height="15" fill="rgb(220,221,6)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="655.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="83.7927%" y="629" width="0.0656%" height="15" fill="rgb(225,89,49)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="639.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="83.7927%" y="613" width="0.0656%" height="15" fill="rgb(218,70,45)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="623.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;(usize,)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="83.7927%" y="597" width="0.0656%" height="15" fill="rgb(238,166,21)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="607.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.7927%" y="581" width="0.0656%" height="15" fill="rgb(224,141,44)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="591.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="83.7927%" y="565" width="0.0656%" height="15" fill="rgb(230,12,49)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="575.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="83.7927%" y="549" width="0.0656%" height="15" fill="rgb(212,174,12)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="559.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.7927%" y="533" width="0.0656%" height="15" fill="rgb(246,67,9)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="543.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::namespace::item_namespace (1 samples, 0.07%)</title><rect x="83.7927%" y="517" width="0.0656%" height="15" fill="rgb(239,35,23)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="527.50"></text></g><g><title>llvm::DIBuilder::createNameSpace (1 samples, 0.07%)</title><rect x="83.7927%" y="501" width="0.0656%" height="15" fill="rgb(211,167,0)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="511.50"></text></g><g><title>llvm::MDString::get (1 samples, 0.07%)</title><rect x="83.7927%" y="485" width="0.0656%" height="15" fill="rgb(225,119,45)" fg:x="1277" fg:w="1"/><text x="84.0427%" y="495.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (2 samples, 0.13%)</title><rect x="83.7927%" y="677" width="0.1312%" height="15" fill="rgb(210,162,6)" fg:x="1277" fg:w="2"/><text x="84.0427%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::stub (1 samples, 0.07%)</title><rect x="83.8583%" y="661" width="0.0656%" height="15" fill="rgb(208,118,35)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="671.50"></text></g><g><title>LLVMRustDIBuilderCreateStructType (1 samples, 0.07%)</title><rect x="83.8583%" y="645" width="0.0656%" height="15" fill="rgb(239,4,53)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="655.50"></text></g><g><title>llvm::DIBuilder::createStructType (1 samples, 0.07%)</title><rect x="83.8583%" y="629" width="0.0656%" height="15" fill="rgb(213,130,21)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="639.50"></text></g><g><title>llvm::DICompositeType::getImpl (1 samples, 0.07%)</title><rect x="83.8583%" y="613" width="0.0656%" height="15" fill="rgb(235,148,0)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="623.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;, llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;::try_emplace&lt;llvm::detail::DenseSetEmpty&amp;&gt; (1 samples, 0.07%)</title><rect x="83.8583%" y="597" width="0.0656%" height="15" fill="rgb(244,224,18)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="607.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;, llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;::LookupBucketFor&lt;llvm::DICompositeType*&gt; (1 samples, 0.07%)</title><rect x="83.8583%" y="581" width="0.0656%" height="15" fill="rgb(211,214,4)" fg:x="1278" fg:w="1"/><text x="84.1083%" y="591.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (6 samples, 0.39%)</title><rect x="83.5958%" y="709" width="0.3937%" height="15" fill="rgb(206,119,25)" fg:x="1274" fg:w="6"/><text x="83.8458%" y="719.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (4 samples, 0.26%)</title><rect x="83.7270%" y="693" width="0.2625%" height="15" fill="rgb(243,93,47)" fg:x="1276" fg:w="4"/><text x="83.9770%" y="703.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.9239%" y="677" width="0.0656%" height="15" fill="rgb(224,194,6)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_closure_env_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="83.9239%" y="661" width="0.0656%" height="15" fill="rgb(243,229,6)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="671.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="83.9239%" y="645" width="0.0656%" height="15" fill="rgb(207,23,50)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="655.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::build_upvar_field_di_nodes (1 samples, 0.07%)</title><rect x="83.9239%" y="629" width="0.0656%" height="15" fill="rgb(253,192,32)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="639.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;smallvec::IntoIter&lt;[rustc_middle::ty::Ty: 16]&gt;, core::slice::iter::Iter&lt;alloc::string::String&gt;&gt;&gt;, rustc_codegen_llvm::debuginfo::metadata::build_upvar_field_di_nodes::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="83.9239%" y="613" width="0.0656%" height="15" fill="rgb(213,21,6)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="623.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.9239%" y="597" width="0.0656%" height="15" fill="rgb(243,151,13)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="607.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_closure_env_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="83.9239%" y="581" width="0.0656%" height="15" fill="rgb(233,165,41)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="591.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="83.9239%" y="565" width="0.0656%" height="15" fill="rgb(246,176,45)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="575.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::build_upvar_field_di_nodes (1 samples, 0.07%)</title><rect x="83.9239%" y="549" width="0.0656%" height="15" fill="rgb(217,170,52)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;smallvec::IntoIter&lt;[rustc_middle::ty::Ty: 16]&gt;, core::slice::iter::Iter&lt;alloc::string::String&gt;&gt;&gt;, rustc_codegen_llvm::debuginfo::metadata::build_upvar_field_di_nodes::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="83.9239%" y="533" width="0.0656%" height="15" fill="rgb(214,203,54)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="543.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="83.9239%" y="517" width="0.0656%" height="15" fill="rgb(248,215,49)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="527.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::namespace::item_namespace (1 samples, 0.07%)</title><rect x="83.9239%" y="501" width="0.0656%" height="15" fill="rgb(208,46,10)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="511.50"></text></g><g><title>rustc_codegen_ssa::debuginfo::type_names::push_item_name (1 samples, 0.07%)</title><rect x="83.9239%" y="485" width="0.0656%" height="15" fill="rgb(254,5,31)" fg:x="1279" fg:w="1"/><text x="84.1739%" y="495.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_place (1 samples, 0.07%)</title><rect x="83.9895%" y="693" width="0.0656%" height="15" fill="rgb(222,104,33)" fg:x="1280" fg:w="1"/><text x="84.2395%" y="703.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_rvalue_operand (2 samples, 0.13%)</title><rect x="83.9895%" y="709" width="0.1312%" height="15" fill="rgb(248,49,16)" fg:x="1280" fg:w="2"/><text x="84.2395%" y="719.50"></text></g><g><title>&lt;rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind&gt;::read_deps::&lt;&lt;rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::read_index::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="84.0551%" y="693" width="0.0656%" height="15" fill="rgb(232,198,41)" fg:x="1281" fg:w="1"/><text x="84.3051%" y="703.50"></text></g><g><title>LLVMRustDIBuilderCreateDebugLocation (1 samples, 0.07%)</title><rect x="84.1207%" y="709" width="0.0656%" height="15" fill="rgb(214,125,3)" fg:x="1282" fg:w="1"/><text x="84.3707%" y="719.50"></text></g><g><title>llvm::DILocation::getImpl@plt (1 samples, 0.07%)</title><rect x="84.1207%" y="693" width="0.0656%" height="15" fill="rgb(229,220,28)" fg:x="1282" fg:w="1"/><text x="84.3707%" y="703.50"></text></g><g><title>LLVMRustDIBuilderInsertDeclareAtEnd (1 samples, 0.07%)</title><rect x="84.1864%" y="709" width="0.0656%" height="15" fill="rgb(222,64,37)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="719.50"></text></g><g><title>llvm::DIBuilder::insertDeclare (1 samples, 0.07%)</title><rect x="84.1864%" y="693" width="0.0656%" height="15" fill="rgb(249,184,13)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="703.50"></text></g><g><title>llvm::DIBuilder::insertDeclare (1 samples, 0.07%)</title><rect x="84.1864%" y="677" width="0.0656%" height="15" fill="rgb(252,176,6)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="687.50"></text></g><g><title>llvm::ValueAsMetadata::get (1 samples, 0.07%)</title><rect x="84.1864%" y="661" width="0.0656%" height="15" fill="rgb(228,153,7)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="671.50"></text></g><g><title>operator new (1 samples, 0.07%)</title><rect x="84.1864%" y="645" width="0.0656%" height="15" fill="rgb(242,193,5)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="655.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="84.1864%" y="629" width="0.0656%" height="15" fill="rgb(232,140,9)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="639.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="84.1864%" y="613" width="0.0656%" height="15" fill="rgb(213,222,16)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="84.1864%" y="597" width="0.0656%" height="15" fill="rgb(222,75,50)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="84.1864%" y="581" width="0.0656%" height="15" fill="rgb(205,180,2)" fg:x="1283" fg:w="1"/><text x="84.4364%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::symbol_name (1 samples, 0.07%)</title><rect x="84.2520%" y="693" width="0.0656%" height="15" fill="rgb(216,34,7)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="703.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::symbol_name, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="84.2520%" y="677" width="0.0656%" height="15" fill="rgb(253,16,32)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="687.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::symbol_name, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="84.2520%" y="661" width="0.0656%" height="15" fill="rgb(208,97,28)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="671.50"></text></g><g><title>rustc_symbol_mangling::symbol_name_provider (1 samples, 0.07%)</title><rect x="84.2520%" y="645" width="0.0656%" height="15" fill="rgb(225,92,11)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="655.50"></text></g><g><title>rustc_symbol_mangling::legacy::mangle (1 samples, 0.07%)</title><rect x="84.2520%" y="629" width="0.0656%" height="15" fill="rgb(243,38,12)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="639.50"></text></g><g><title>rustc_middle::util::common::record_time::&lt;(), rustc_symbol_mangling::legacy::get_symbol_hash::{closure#0}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="84.2520%" y="613" width="0.0656%" height="15" fill="rgb(208,139,16)" fg:x="1284" fg:w="1"/><text x="84.5020%" y="623.50"></text></g><g><title>&lt;rustc_target::abi::call::FnAbi&lt;rustc_middle::ty::Ty&gt; as rustc_codegen_llvm::abi::FnAbiLlvmExt&gt;::apply_attrs_llfn (1 samples, 0.07%)</title><rect x="84.3176%" y="693" width="0.0656%" height="15" fill="rgb(227,24,9)" fg:x="1285" fg:w="1"/><text x="84.5676%" y="703.50"></text></g><g><title>rustc_codegen_llvm::callee::get_fn (3 samples, 0.20%)</title><rect x="84.2520%" y="709" width="0.1969%" height="15" fill="rgb(206,62,11)" fg:x="1284" fg:w="3"/><text x="84.5020%" y="719.50"></text></g><g><title>llvm::Module::getNamedValue (1 samples, 0.07%)</title><rect x="84.3832%" y="693" width="0.0656%" height="15" fill="rgb(228,134,27)" fg:x="1286" fg:w="1"/><text x="84.6332%" y="703.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::generics_of (1 samples, 0.07%)</title><rect x="84.4488%" y="677" width="0.0656%" height="15" fill="rgb(205,55,33)" fg:x="1287" fg:w="1"/><text x="84.6988%" y="687.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::generics_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="84.4488%" y="661" width="0.0656%" height="15" fill="rgb(243,75,43)" fg:x="1287" fg:w="1"/><text x="84.6988%" y="671.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::generics_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="84.4488%" y="645" width="0.0656%" height="15" fill="rgb(223,27,42)" fg:x="1287" fg:w="1"/><text x="84.6988%" y="655.50"></text></g><g><title>rustc_query_system::dep_graph::graph::hash_result::&lt;&amp;rustc_middle::ty::generics::Generics&gt; (1 samples, 0.07%)</title><rect x="84.4488%" y="629" width="0.0656%" height="15" fill="rgb(232,189,33)" fg:x="1287" fg:w="1"/><text x="84.6988%" y="639.50"></text></g><g><title>LLVMRustDIBuilderCreateFunction (1 samples, 0.07%)</title><rect x="84.5144%" y="677" width="0.0656%" height="15" fill="rgb(210,9,39)" fg:x="1288" fg:w="1"/><text x="84.7644%" y="687.50"></text></g><g><title>llvm::DIBuilder::createFunction (1 samples, 0.07%)</title><rect x="84.5144%" y="661" width="0.0656%" height="15" fill="rgb(242,85,26)" fg:x="1288" fg:w="1"/><text x="84.7644%" y="671.50"></text></g><g><title>llvm::MDString::get (1 samples, 0.07%)</title><rect x="84.5144%" y="645" width="0.0656%" height="15" fill="rgb(248,44,4)" fg:x="1288" fg:w="1"/><text x="84.7644%" y="655.50"></text></g><g><title>llvm::DIBuilder::createTemplateTypeParameter (1 samples, 0.07%)</title><rect x="84.5801%" y="677" width="0.0656%" height="15" fill="rgb(250,96,46)" fg:x="1289" fg:w="1"/><text x="84.8301%" y="687.50"></text></g><g><title>llvm::MDString::get (1 samples, 0.07%)</title><rect x="84.5801%" y="661" width="0.0656%" height="15" fill="rgb(229,116,26)" fg:x="1289" fg:w="1"/><text x="84.8301%" y="671.50"></text></g><g><title>calloc (1 samples, 0.07%)</title><rect x="84.5801%" y="645" width="0.0656%" height="15" fill="rgb(246,94,34)" fg:x="1289" fg:w="1"/><text x="84.8301%" y="655.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.07%)</title><rect x="84.5801%" y="629" width="0.0656%" height="15" fill="rgb(251,73,21)" fg:x="1289" fg:w="1"/><text x="84.8301%" y="639.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (1 samples, 0.07%)</title><rect x="84.5801%" y="613" width="0.0656%" height="15" fill="rgb(254,121,25)" fg:x="1289" fg:w="1"/><text x="84.8301%" y="623.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (5 samples, 0.33%)</title><rect x="84.4488%" y="693" width="0.3281%" height="15" fill="rgb(215,161,49)" fg:x="1287" fg:w="5"/><text x="84.6988%" y="703.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (2 samples, 0.13%)</title><rect x="84.6457%" y="677" width="0.1312%" height="15" fill="rgb(221,43,13)" fg:x="1290" fg:w="2"/><text x="84.8957%" y="687.50"></text></g><g><title>LLVMRustDIBuilderCreatePointerType (1 samples, 0.07%)</title><rect x="84.7113%" y="661" width="0.0656%" height="15" fill="rgb(249,5,37)" fg:x="1291" fg:w="1"/><text x="84.9613%" y="671.50"></text></g><g><title>llvm::DIBuilder::createPointerType (1 samples, 0.07%)</title><rect x="84.7113%" y="645" width="0.0656%" height="15" fill="rgb(226,25,44)" fg:x="1291" fg:w="1"/><text x="84.9613%" y="655.50"></text></g><g><title>llvm::DIDerivedType::getImpl (1 samples, 0.07%)</title><rect x="84.7113%" y="629" width="0.0656%" height="15" fill="rgb(238,189,16)" fg:x="1291" fg:w="1"/><text x="84.9613%" y="639.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt;, llvm::detail::DenseSetPair&lt;llvm::DIDerivedType*&gt; &gt;, llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt;, llvm::detail::DenseSetPair&lt;llvm::DIDerivedType*&gt; &gt;::LookupBucketFor&lt;llvm::MDNodeKeyImpl&lt;llvm::DIDerivedType&gt; &gt; (1 samples, 0.07%)</title><rect x="84.7113%" y="613" width="0.0656%" height="15" fill="rgb(251,186,8)" fg:x="1291" fg:w="1"/><text x="84.9613%" y="623.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::file_metadata (1 samples, 0.07%)</title><rect x="84.7769%" y="693" width="0.0656%" height="15" fill="rgb(254,34,31)" fg:x="1292" fg:w="1"/><text x="85.0269%" y="703.50"></text></g><g><title>LLVMRustDIBuilderCreateFile (1 samples, 0.07%)</title><rect x="84.7769%" y="677" width="0.0656%" height="15" fill="rgb(225,215,27)" fg:x="1292" fg:w="1"/><text x="85.0269%" y="687.50"></text></g><g><title>llvm::DIBuilder::createFile (1 samples, 0.07%)</title><rect x="84.7769%" y="661" width="0.0656%" height="15" fill="rgb(221,192,48)" fg:x="1292" fg:w="1"/><text x="85.0269%" y="671.50"></text></g><g><title>llvm::DIFile::getImpl (1 samples, 0.07%)</title><rect x="84.7769%" y="645" width="0.0656%" height="15" fill="rgb(219,137,20)" fg:x="1292" fg:w="1"/><text x="85.0269%" y="655.50"></text></g><g><title>llvm::MDNode::storeImpl&lt;llvm::DIFile, llvm::DenseSet&lt;llvm::DIFile*, llvm::MDNodeInfo&lt;llvm::DIFile&gt; &gt; &gt; (1 samples, 0.07%)</title><rect x="84.7769%" y="629" width="0.0656%" height="15" fill="rgb(219,84,11)" fg:x="1292" fg:w="1"/><text x="85.0269%" y="639.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::CurrentDepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::intern_node (1 samples, 0.07%)</title><rect x="84.8425%" y="661" width="0.0656%" height="15" fill="rgb(224,10,23)" fg:x="1293" fg:w="1"/><text x="85.0925%" y="671.50"></text></g><g><title>rustc_query_system::dep_graph::graph::hash_result::&lt;core::result::Result&lt;&amp;rustc_target::abi::call::FnAbi&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::layout::FnAbiError&gt;&gt; (1 samples, 0.07%)</title><rect x="84.9081%" y="661" width="0.0656%" height="15" fill="rgb(248,22,39)" fg:x="1294" fg:w="1"/><text x="85.1581%" y="671.50"></text></g><g><title>&lt;rustc_target::abi::call::ArgAttributes as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="84.9081%" y="645" width="0.0656%" height="15" fill="rgb(212,154,20)" fg:x="1294" fg:w="1"/><text x="85.1581%" y="655.50"></text></g><g><title>&lt;rustc_middle::ty::erase_regions::RegionEraserVisitor as rustc_type_ir::fold::FallibleTypeFolder&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::try_fold_binder::&lt;rustc_middle::ty::sty::FnSig&gt; (1 samples, 0.07%)</title><rect x="84.9738%" y="645" width="0.0656%" height="15" fill="rgb(236,199,50)" fg:x="1295" fg:w="1"/><text x="85.2238%" y="655.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_type_ir::fold::TypeSuperFoldable&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::super_fold_with::&lt;rustc_middle::ty::fold::BoundVarReplacer&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::anonymize_bound_vars::Anonymize&gt;&gt; (1 samples, 0.07%)</title><rect x="84.9738%" y="629" width="0.0656%" height="15" fill="rgb(211,9,17)" fg:x="1295" fg:w="1"/><text x="85.2238%" y="639.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::fn_sig (5 samples, 0.33%)</title><rect x="85.0394%" y="645" width="0.3281%" height="15" fill="rgb(243,216,36)" fg:x="1296" fg:w="5"/><text x="85.2894%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::fn_sig, rustc_query_impl::plumbing::QueryCtxt&gt; (5 samples, 0.33%)</title><rect x="85.0394%" y="629" width="0.3281%" height="15" fill="rgb(250,2,10)" fg:x="1296" fg:w="5"/><text x="85.2894%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::fn_sig, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (5 samples, 0.33%)</title><rect x="85.0394%" y="613" width="0.3281%" height="15" fill="rgb(226,50,48)" fg:x="1296" fg:w="5"/><text x="85.2894%" y="623.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::fn_sig (5 samples, 0.33%)</title><rect x="85.0394%" y="597" width="0.3281%" height="15" fill="rgb(243,81,16)" fg:x="1296" fg:w="5"/><text x="85.2894%" y="607.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, core::option::Option&lt;rustc_metadata::rmeta::LazyValue&lt;rustc_hir::definitions::DefKey&gt;&gt;&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef&gt; (5 samples, 0.33%)</title><rect x="85.0394%" y="581" width="0.3281%" height="15" fill="rgb(250,14,2)" fg:x="1296" fg:w="5"/><text x="85.2894%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.3675%" y="581" width="0.0656%" height="15" fill="rgb(233,135,29)" fg:x="1301" fg:w="1"/><text x="85.6175%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.3675%" y="565" width="0.0656%" height="15" fill="rgb(224,64,43)" fg:x="1301" fg:w="1"/><text x="85.6175%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::param_env (3 samples, 0.20%)</title><rect x="85.3675%" y="645" width="0.1969%" height="15" fill="rgb(238,84,13)" fg:x="1301" fg:w="3"/><text x="85.6175%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="85.3675%" y="629" width="0.1969%" height="15" fill="rgb(253,48,26)" fg:x="1301" fg:w="3"/><text x="85.6175%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="85.3675%" y="613" width="0.1969%" height="15" fill="rgb(205,223,31)" fg:x="1301" fg:w="3"/><text x="85.6175%" y="623.50"></text></g><g><title>rustc_ty_utils::ty::param_env (3 samples, 0.20%)</title><rect x="85.3675%" y="597" width="0.1969%" height="15" fill="rgb(221,41,32)" fg:x="1301" fg:w="3"/><text x="85.6175%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="85.4331%" y="581" width="0.1312%" height="15" fill="rgb(213,158,31)" fg:x="1302" fg:w="2"/><text x="85.6831%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.4987%" y="565" width="0.0656%" height="15" fill="rgb(245,126,43)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="575.50"></text></g><g><title>rustc_hir_analysis::collect::predicates_of::predicates_of (1 samples, 0.07%)</title><rect x="85.4987%" y="549" width="0.0656%" height="15" fill="rgb(227,7,22)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::predicates_defined_on, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.4987%" y="533" width="0.0656%" height="15" fill="rgb(252,90,44)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::predicates_defined_on, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.4987%" y="517" width="0.0656%" height="15" fill="rgb(253,91,0)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="527.50"></text></g><g><title>rustc_hir_analysis::collect::predicates_defined_on (1 samples, 0.07%)</title><rect x="85.4987%" y="501" width="0.0656%" height="15" fill="rgb(252,175,49)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::explicit_predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.4987%" y="485" width="0.0656%" height="15" fill="rgb(246,150,1)" fg:x="1303" fg:w="1"/><text x="85.7487%" y="495.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::create_scope_map::make_mir_scope (19 samples, 1.25%)</title><rect x="84.4488%" y="709" width="1.2467%" height="15" fill="rgb(241,192,25)" fg:x="1287" fg:w="19"/><text x="84.6988%" y="719.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (13 samples, 0.85%)</title><rect x="84.8425%" y="693" width="0.8530%" height="15" fill="rgb(239,187,11)" fg:x="1293" fg:w="13"/><text x="85.0925%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (13 samples, 0.85%)</title><rect x="84.8425%" y="677" width="0.8530%" height="15" fill="rgb(218,202,51)" fg:x="1293" fg:w="13"/><text x="85.0925%" y="687.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_of_instance (11 samples, 0.72%)</title><rect x="84.9738%" y="661" width="0.7218%" height="15" fill="rgb(225,176,8)" fg:x="1295" fg:w="11"/><text x="85.2238%" y="671.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::type_of (2 samples, 0.13%)</title><rect x="85.5643%" y="645" width="0.1312%" height="15" fill="rgb(219,122,41)" fg:x="1304" fg:w="2"/><text x="85.8143%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="85.5643%" y="629" width="0.1312%" height="15" fill="rgb(248,140,20)" fg:x="1304" fg:w="2"/><text x="85.8143%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="85.5643%" y="613" width="0.1312%" height="15" fill="rgb(245,41,37)" fg:x="1304" fg:w="2"/><text x="85.8143%" y="623.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::type_of (1 samples, 0.07%)</title><rect x="85.6299%" y="597" width="0.0656%" height="15" fill="rgb(235,82,39)" fg:x="1305" fg:w="1"/><text x="85.8799%" y="607.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, core::option::Option&lt;rustc_metadata::rmeta::LazyValue&lt;rustc_hir::definitions::DefKey&gt;&gt;&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef&gt; (1 samples, 0.07%)</title><rect x="85.6299%" y="581" width="0.0656%" height="15" fill="rgb(230,108,42)" fg:x="1305" fg:w="1"/><text x="85.8799%" y="591.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::compile_codegen_unit (43 samples, 2.82%)</title><rect x="82.9396%" y="757" width="2.8215%" height="15" fill="rgb(215,150,50)" fg:x="1264" fg:w="43"/><text x="83.1896%" y="767.50">&lt;r..</text></g><g><title>rustc_codegen_llvm::base::compile_codegen_unit::module_codegen (43 samples, 2.82%)</title><rect x="82.9396%" y="741" width="2.8215%" height="15" fill="rgb(233,212,5)" fg:x="1264" fg:w="43"/><text x="83.1896%" y="751.50">ru..</text></g><g><title>rustc_codegen_ssa::mir::codegen_mir::&lt;rustc_codegen_llvm::builder::Builder&gt; (36 samples, 2.36%)</title><rect x="83.3990%" y="725" width="2.3622%" height="15" fill="rgb(245,80,22)" fg:x="1271" fg:w="36"/><text x="83.6490%" y="735.50">ru..</text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.6955%" y="709" width="0.0656%" height="15" fill="rgb(238,129,16)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::fn_abi_of_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.6955%" y="693" width="0.0656%" height="15" fill="rgb(240,19,0)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="703.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_of_instance (1 samples, 0.07%)</title><rect x="85.6955%" y="677" width="0.0656%" height="15" fill="rgb(232,42,35)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="687.50"></text></g><g><title>rustc_ty_utils::abi::fn_abi_new_uncached (1 samples, 0.07%)</title><rect x="85.6955%" y="661" width="0.0656%" height="15" fill="rgb(223,130,24)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;, core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;, core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, core::option::IntoIter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, rustc_ty_utils::abi::fn_abi_new_uncached::{closure#1}&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::layout::FnAbiError&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.6955%" y="645" width="0.0656%" height="15" fill="rgb(237,16,22)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="655.50"></text></g><g><title>&lt;&amp;mut &amp;mut &lt;core::iter::adapters::enumerate::Enumerate&lt;_&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate&lt;rustc_middle::ty::Ty, (), core::ops::control_flow::ControlFlow&lt;core::ops::control_flow::ControlFlow&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, core::iter::adapters::map::map_try_fold&lt;(usize, rustc_middle::ty::Ty), core::result::Result&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::layout::FnAbiError&gt;, (), core::ops::control_flow::ControlFlow&lt;core::ops::control_flow::ControlFlow&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, rustc_ty_utils::abi::fn_abi_new_uncached::{closure#1}, &lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;, core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, core::option::IntoIter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, rustc_ty_utils::abi::fn_abi_new_uncached::{closure#1}&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::layout::FnAbiError&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold&lt;(), core::iter::traits::iterator::Iterator::try_for_each::call&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;, core::ops::control_flow::ControlFlow&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt;, core::ops::control_flow::ControlFlow&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt;::Break&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;rustc_target::abi::call::ArgAbi&lt;rustc_middle::ty::Ty&gt;&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#0} as core::ops::function::FnMut&lt;((), rustc_middle::ty::Ty)&gt;&gt;::call_mut (1 samples, 0.07%)</title><rect x="85.6955%" y="629" width="0.0656%" height="15" fill="rgb(248,192,20)" fg:x="1306" fg:w="1"/><text x="85.9455%" y="639.50"></text></g><g><title>&lt;rustc_codegen_ssa::back::write::OngoingCodegen&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;&gt;::wait_for_signal_to_codegen_item (1 samples, 0.07%)</title><rect x="85.7612%" y="757" width="0.0656%" height="15" fill="rgb(233,167,2)" fg:x="1307" fg:w="1"/><text x="86.0112%" y="767.50"></text></g><g><title>&lt;std::sync::mpmc::list::Channel&lt;rustc_codegen_ssa::back::write::Message&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;&gt;&gt;::recv (1 samples, 0.07%)</title><rect x="85.7612%" y="741" width="0.0656%" height="15" fill="rgb(252,71,44)" fg:x="1307" fg:w="1"/><text x="86.0112%" y="751.50"></text></g><g><title>rustc_monomorphize::partitioning::assert_symbols_are_distinct::&lt;std::collections::hash::set::Iter&lt;rustc_middle::mir::mono::MonoItem&gt;&gt; (1 samples, 0.07%)</title><rect x="85.8268%" y="661" width="0.0656%" height="15" fill="rgb(238,37,47)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(&amp;rustc_middle::mir::mono::MonoItem, rustc_middle::ty::SymbolName)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(&amp;rustc_middle::mir::mono::MonoItem, rustc_middle::ty::SymbolName), core::iter::adapters::map::Map&lt;std::collections::hash::set::Iter&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::partitioning::assert_symbols_are_distinct&lt;std::collections::hash::set::Iter&lt;rustc_middle::mir::mono::MonoItem&gt;&gt;::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.8268%" y="645" width="0.0656%" height="15" fill="rgb(214,202,54)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="655.50"></text></g><g><title>&lt;rustc_middle::mir::mono::MonoItem&gt;::symbol_name (1 samples, 0.07%)</title><rect x="85.8268%" y="629" width="0.0656%" height="15" fill="rgb(254,165,40)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::symbol_name, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.8268%" y="613" width="0.0656%" height="15" fill="rgb(246,173,38)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::symbol_name, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.8268%" y="597" width="0.0656%" height="15" fill="rgb(215,3,27)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="607.50"></text></g><g><title>rustc_symbol_mangling::symbol_name_provider (1 samples, 0.07%)</title><rect x="85.8268%" y="581" width="0.0656%" height="15" fill="rgb(239,169,51)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="591.50"></text></g><g><title>rustc_symbol_mangling::legacy::mangle (1 samples, 0.07%)</title><rect x="85.8268%" y="565" width="0.0656%" height="15" fill="rgb(212,5,25)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="575.50"></text></g><g><title>rustc_middle::util::common::record_time::&lt;(), rustc_symbol_mangling::legacy::get_symbol_hash::{closure#0}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="85.8268%" y="549" width="0.0656%" height="15" fill="rgb(243,45,17)" fg:x="1308" fg:w="1"/><text x="86.0768%" y="559.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(&amp;[rustc_middle::mir::mono::CodegenUnit], ()), rustc_monomorphize::partitioning::collect_and_partition_mono_items::{closure#0}&gt; (2 samples, 0.13%)</title><rect x="85.8268%" y="693" width="0.1312%" height="15" fill="rgb(242,97,9)" fg:x="1308" fg:w="2"/><text x="86.0768%" y="703.50"></text></g><g><title>rustc_data_structures::sync::join::&lt;rustc_monomorphize::partitioning::collect_and_partition_mono_items::{closure#0}::{closure#0}, rustc_monomorphize::partitioning::collect_and_partition_mono_items::{closure#0}::{closure#1}, &amp;[rustc_middle::mir::mono::CodegenUnit], ()&gt; (2 samples, 0.13%)</title><rect x="85.8268%" y="677" width="0.1312%" height="15" fill="rgb(228,71,31)" fg:x="1308" fg:w="2"/><text x="86.0768%" y="687.50"></text></g><g><title>rustc_monomorphize::partitioning::partition (1 samples, 0.07%)</title><rect x="85.8924%" y="661" width="0.0656%" height="15" fill="rgb(252,184,16)" fg:x="1309" fg:w="1"/><text x="86.1424%" y="671.50"></text></g><g><title>&lt;rustc_monomorphize::partitioning::default::DefaultPartitioning as rustc_monomorphize::partitioning::Partitioner&gt;::place_root_mono_items (1 samples, 0.07%)</title><rect x="85.8924%" y="645" width="0.0656%" height="15" fill="rgb(236,169,46)" fg:x="1309" fg:w="1"/><text x="86.1424%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="85.9580%" y="597" width="0.0656%" height="15" fill="rgb(207,17,47)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="607.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="85.9580%" y="581" width="0.0656%" height="15" fill="rgb(206,201,28)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="591.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="85.9580%" y="565" width="0.0656%" height="15" fill="rgb(224,184,23)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="575.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="85.9580%" y="549" width="0.0656%" height="15" fill="rgb(208,139,48)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.9580%" y="533" width="0.0656%" height="15" fill="rgb(208,130,10)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.9580%" y="517" width="0.0656%" height="15" fill="rgb(211,213,45)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="527.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="85.9580%" y="501" width="0.0656%" height="15" fill="rgb(235,100,30)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="511.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="85.9580%" y="485" width="0.0656%" height="15" fill="rgb(206,144,31)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="495.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="85.9580%" y="469" width="0.0656%" height="15" fill="rgb(224,200,26)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="479.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="85.9580%" y="453" width="0.0656%" height="15" fill="rgb(247,104,53)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="463.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="85.9580%" y="437" width="0.0656%" height="15" fill="rgb(220,14,17)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="447.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="85.9580%" y="421" width="0.0656%" height="15" fill="rgb(230,140,40)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::def_id::DefId, rustc_span::def_id::DefId)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::def_id::DefId, rustc_span::def_id::DefId, rustc_span::def_id::DefId, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="85.9580%" y="405" width="0.0656%" height="15" fill="rgb(229,2,41)" fg:x="1310" fg:w="1"/><text x="86.2080%" y="415.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="85.9580%" y="613" width="0.1312%" height="15" fill="rgb(232,89,16)" fg:x="1310" fg:w="2"/><text x="86.2080%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="86.0236%" y="597" width="0.0656%" height="15" fill="rgb(247,59,52)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.0236%" y="581" width="0.0656%" height="15" fill="rgb(226,110,21)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.0236%" y="565" width="0.0656%" height="15" fill="rgb(224,176,43)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="575.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir (1 samples, 0.07%)</title><rect x="86.0236%" y="549" width="0.0656%" height="15" fill="rgb(221,73,6)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="559.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0236%" y="533" width="0.0656%" height="15" fill="rgb(232,78,19)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::BasicBlockData&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0236%" y="517" width="0.0656%" height="15" fill="rgb(233,112,48)" fg:x="1311" fg:w="1"/><text x="86.2736%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.0892%" y="597" width="0.0656%" height="15" fill="rgb(243,131,47)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.0892%" y="581" width="0.0656%" height="15" fill="rgb(226,51,1)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="591.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir (1 samples, 0.07%)</title><rect x="86.0892%" y="565" width="0.0656%" height="15" fill="rgb(247,58,7)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="575.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="549" width="0.0656%" height="15" fill="rgb(209,7,32)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::BasicBlockData&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="533" width="0.0656%" height="15" fill="rgb(209,39,41)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="543.50"></text></g><g><title>&lt;rustc_middle::mir::syntax::TerminatorKind as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="517" width="0.0656%" height="15" fill="rgb(226,182,46)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;rustc_middle::mir::Constant&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="501" width="0.0656%" height="15" fill="rgb(230,219,10)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="485" width="0.0656%" height="15" fill="rgb(227,175,30)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="495.50"></text></g><g><title>&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="469" width="0.0656%" height="15" fill="rgb(217,2,50)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="479.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="453" width="0.0656%" height="15" fill="rgb(229,160,0)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="463.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="437" width="0.0656%" height="15" fill="rgb(207,78,37)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="447.50"></text></g><g><title>&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.0892%" y="421" width="0.0656%" height="15" fill="rgb(225,57,0)" fg:x="1312" fg:w="1"/><text x="86.3392%" y="431.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::CurrentDepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::intern_node (1 samples, 0.07%)</title><rect x="86.1549%" y="565" width="0.0656%" height="15" fill="rgb(232,154,2)" fg:x="1313" fg:w="1"/><text x="86.4049%" y="575.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (5 samples, 0.33%)</title><rect x="85.9580%" y="629" width="0.3281%" height="15" fill="rgb(241,212,25)" fg:x="1310" fg:w="5"/><text x="86.2080%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (3 samples, 0.20%)</title><rect x="86.0892%" y="613" width="0.1969%" height="15" fill="rgb(226,69,20)" fg:x="1312" fg:w="3"/><text x="86.3392%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="86.1549%" y="597" width="0.1312%" height="15" fill="rgb(247,184,54)" fg:x="1313" fg:w="2"/><text x="86.4049%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="86.1549%" y="581" width="0.1312%" height="15" fill="rgb(210,145,0)" fg:x="1313" fg:w="2"/><text x="86.4049%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="86.2205%" y="565" width="0.0656%" height="15" fill="rgb(253,82,12)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="575.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="86.2205%" y="549" width="0.0656%" height="15" fill="rgb(245,42,11)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.2205%" y="533" width="0.0656%" height="15" fill="rgb(219,147,32)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.2205%" y="517" width="0.0656%" height="15" fill="rgb(246,12,7)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="527.50"></text></g><g><title>rustc_traits::codegen::codegen_select_candidate (1 samples, 0.07%)</title><rect x="86.2205%" y="501" width="0.0656%" height="15" fill="rgb(243,50,9)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::select (1 samples, 0.07%)</title><rect x="86.2205%" y="485" width="0.0656%" height="15" fill="rgb(219,149,6)" fg:x="1314" fg:w="1"/><text x="86.4705%" y="495.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::is_foreign_item (1 samples, 0.07%)</title><rect x="86.2861%" y="613" width="0.0656%" height="15" fill="rgb(241,51,42)" fg:x="1315" fg:w="1"/><text x="86.5361%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::is_foreign_item, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.2861%" y="597" width="0.0656%" height="15" fill="rgb(226,128,27)" fg:x="1315" fg:w="1"/><text x="86.5361%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::is_foreign_item, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.2861%" y="581" width="0.0656%" height="15" fill="rgb(244,144,4)" fg:x="1315" fg:w="1"/><text x="86.5361%" y="591.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::is_foreign_item (1 samples, 0.07%)</title><rect x="86.2861%" y="565" width="0.0656%" height="15" fill="rgb(221,4,13)" fg:x="1315" fg:w="1"/><text x="86.5361%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::is_reachable_non_generic (2 samples, 0.13%)</title><rect x="86.3517%" y="613" width="0.1312%" height="15" fill="rgb(208,170,28)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::is_reachable_non_generic, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="86.3517%" y="597" width="0.1312%" height="15" fill="rgb(226,131,13)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::is_reachable_non_generic, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="86.3517%" y="581" width="0.1312%" height="15" fill="rgb(215,72,41)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="591.50"></text></g><g><title>rustc_codegen_ssa::back::symbol_export::is_reachable_non_generic_provider_extern (2 samples, 0.13%)</title><rect x="86.3517%" y="565" width="0.1312%" height="15" fill="rgb(243,108,20)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::reachable_non_generics (2 samples, 0.13%)</title><rect x="86.3517%" y="549" width="0.1312%" height="15" fill="rgb(230,189,17)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::reachable_non_generics, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="86.3517%" y="533" width="0.1312%" height="15" fill="rgb(220,50,17)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::reachable_non_generics, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="86.3517%" y="517" width="0.1312%" height="15" fill="rgb(248,152,48)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="527.50"></text></g><g><title>rustc_data_structures::unord::hash_iter_order_independent::&lt;rustc_query_system::ich::hcx::StableHashingContext, (&amp;rustc_span::def_id::DefId, &amp;rustc_middle::middle::exported_symbols::SymbolExportInfo), std::collections::hash::map::Iter&lt;rustc_span::def_id::DefId, rustc_middle::middle::exported_symbols::SymbolExportInfo&gt;&gt; (2 samples, 0.13%)</title><rect x="86.3517%" y="501" width="0.1312%" height="15" fill="rgb(244,91,11)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::finish128 (2 samples, 0.13%)</title><rect x="86.3517%" y="485" width="0.1312%" height="15" fill="rgb(220,157,5)" fg:x="1316" fg:w="2"/><text x="86.6017%" y="495.50"></text></g><g><title>&lt;rustc_middle::traits::specialization_graph::Ancestors&gt;::leaf_def (1 samples, 0.07%)</title><rect x="86.4829%" y="549" width="0.0656%" height="15" fill="rgb(253,137,8)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::impl_item_implementor_ids (1 samples, 0.07%)</title><rect x="86.4829%" y="533" width="0.0656%" height="15" fill="rgb(217,137,51)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_item_implementor_ids, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="517" width="0.0656%" height="15" fill="rgb(218,209,53)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_item_implementor_ids, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="501" width="0.0656%" height="15" fill="rgb(249,137,25)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="511.50"></text></g><g><title>rustc_ty_utils::assoc::impl_item_implementor_ids (1 samples, 0.07%)</title><rect x="86.4829%" y="485" width="0.0656%" height="15" fill="rgb(239,155,26)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="495.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::associated_items, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="469" width="0.0656%" height="15" fill="rgb(227,85,46)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="479.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::associated_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="453" width="0.0656%" height="15" fill="rgb(251,107,43)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="463.50"></text></g><g><title>rustc_ty_utils::assoc::associated_items (1 samples, 0.07%)</title><rect x="86.4829%" y="437" width="0.0656%" height="15" fill="rgb(234,170,33)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;(rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem), &lt;alloc::vec::Vec&lt;(rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem)&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="421" width="0.0656%" height="15" fill="rgb(206,29,35)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="431.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::associated_item, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="86.4829%" y="405" width="0.0656%" height="15" fill="rgb(227,138,25)" fg:x="1318" fg:w="1"/><text x="86.7329%" y="415.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::collect_and_partition_mono_items (13 samples, 0.85%)</title><rect x="85.8268%" y="757" width="0.8530%" height="15" fill="rgb(249,131,35)" fg:x="1308" fg:w="13"/><text x="86.0768%" y="767.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (13 samples, 0.85%)</title><rect x="85.8268%" y="741" width="0.8530%" height="15" fill="rgb(239,6,40)" fg:x="1308" fg:w="13"/><text x="86.0768%" y="751.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (13 samples, 0.85%)</title><rect x="85.8268%" y="725" width="0.8530%" height="15" fill="rgb(246,136,47)" fg:x="1308" fg:w="13"/><text x="86.0768%" y="735.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (13 samples, 0.85%)</title><rect x="85.8268%" y="709" width="0.8530%" height="15" fill="rgb(253,58,26)" fg:x="1308" fg:w="13"/><text x="86.0768%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (11 samples, 0.72%)</title><rect x="85.9580%" y="693" width="0.7218%" height="15" fill="rgb(237,141,10)" fg:x="1310" fg:w="11"/><text x="86.2080%" y="703.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (11 samples, 0.72%)</title><rect x="85.9580%" y="677" width="0.7218%" height="15" fill="rgb(234,156,12)" fg:x="1310" fg:w="11"/><text x="86.2080%" y="687.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (11 samples, 0.72%)</title><rect x="85.9580%" y="661" width="0.7218%" height="15" fill="rgb(243,224,36)" fg:x="1310" fg:w="11"/><text x="86.2080%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (11 samples, 0.72%)</title><rect x="85.9580%" y="645" width="0.7218%" height="15" fill="rgb(205,229,51)" fg:x="1310" fg:w="11"/><text x="86.2080%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (6 samples, 0.39%)</title><rect x="86.2861%" y="629" width="0.3937%" height="15" fill="rgb(223,189,4)" fg:x="1315" fg:w="6"/><text x="86.5361%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="86.4829%" y="613" width="0.1969%" height="15" fill="rgb(249,167,54)" fg:x="1318" fg:w="3"/><text x="86.7329%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="86.4829%" y="597" width="0.1969%" height="15" fill="rgb(218,34,28)" fg:x="1318" fg:w="3"/><text x="86.7329%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (3 samples, 0.20%)</title><rect x="86.4829%" y="581" width="0.1969%" height="15" fill="rgb(232,109,42)" fg:x="1318" fg:w="3"/><text x="86.7329%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (3 samples, 0.20%)</title><rect x="86.4829%" y="565" width="0.1969%" height="15" fill="rgb(248,214,46)" fg:x="1318" fg:w="3"/><text x="86.7329%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (2 samples, 0.13%)</title><rect x="86.5486%" y="549" width="0.1312%" height="15" fill="rgb(244,216,40)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="86.5486%" y="533" width="0.1312%" height="15" fill="rgb(231,226,31)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="86.5486%" y="517" width="0.1312%" height="15" fill="rgb(238,38,43)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="527.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (2 samples, 0.13%)</title><rect x="86.5486%" y="501" width="0.1312%" height="15" fill="rgb(208,88,43)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="86.5486%" y="485" width="0.1312%" height="15" fill="rgb(205,136,37)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="495.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="86.5486%" y="469" width="0.1312%" height="15" fill="rgb(237,34,14)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="479.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (2 samples, 0.13%)</title><rect x="86.5486%" y="453" width="0.1312%" height="15" fill="rgb(236,193,44)" fg:x="1319" fg:w="2"/><text x="86.7986%" y="463.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.6142%" y="437" width="0.0656%" height="15" fill="rgb(231,48,10)" fg:x="1320" fg:w="1"/><text x="86.8642%" y="447.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="86.6142%" y="421" width="0.0656%" height="15" fill="rgb(213,141,34)" fg:x="1320" fg:w="1"/><text x="86.8642%" y="431.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (1 samples, 0.07%)</title><rect x="86.6142%" y="405" width="0.0656%" height="15" fill="rgb(249,130,34)" fg:x="1320" fg:w="1"/><text x="86.8642%" y="415.50"></text></g><g><title>&lt;rustc_data_structures::intern::Interned&lt;rustc_type_ir::sty::RegionKind&lt;rustc_middle::ty::context::TyCtxt&gt;&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="86.6142%" y="389" width="0.0656%" height="15" fill="rgb(219,42,41)" fg:x="1320" fg:w="1"/><text x="86.8642%" y="399.50"></text></g><g><title>&lt;rustc_span::def_id::DefId as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="86.6142%" y="373" width="0.0656%" height="15" fill="rgb(224,100,54)" fg:x="1320" fg:w="1"/><text x="86.8642%" y="383.50"></text></g><g><title>&lt;rustc_interface::queries::Queries&gt;::ongoing_codegen (58 samples, 3.81%)</title><rect x="82.9396%" y="853" width="3.8058%" height="15" fill="rgb(229,200,27)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="863.50">&lt;rus..</text></g><g><title>&lt;rustc_middle::ty::context::GlobalCtxt&gt;::enter::&lt;&lt;rustc_interface::queries::Queries&gt;::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result&lt;alloc::boxed::Box&lt;dyn core::any::Any&gt;, rustc_span::ErrorGuaranteed&gt;&gt; (58 samples, 3.81%)</title><rect x="82.9396%" y="837" width="3.8058%" height="15" fill="rgb(217,118,10)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="847.50">&lt;rus..</text></g><g><title>rustc_interface::passes::start_codegen (58 samples, 3.81%)</title><rect x="82.9396%" y="821" width="3.8058%" height="15" fill="rgb(206,22,3)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="831.50">rust..</text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;alloc::boxed::Box&lt;dyn core::any::Any&gt;, rustc_interface::passes::start_codegen::{closure#0}&gt; (58 samples, 3.81%)</title><rect x="82.9396%" y="805" width="3.8058%" height="15" fill="rgb(232,163,46)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="815.50">&lt;rus..</text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (58 samples, 3.81%)</title><rect x="82.9396%" y="789" width="3.8058%" height="15" fill="rgb(206,95,13)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="799.50">&lt;rus..</text></g><g><title>rustc_codegen_ssa::base::codegen_crate::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (58 samples, 3.81%)</title><rect x="82.9396%" y="773" width="3.8058%" height="15" fill="rgb(253,154,18)" fg:x="1264" fg:w="58"/><text x="83.1896%" y="783.50">rust..</text></g><g><title>free (1 samples, 0.07%)</title><rect x="86.6798%" y="757" width="0.0656%" height="15" fill="rgb(219,32,23)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="767.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="86.6798%" y="741" width="0.0656%" height="15" fill="rgb(230,191,45)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="751.50"></text></g><g><title>emap_alloc_ctx_try_lookup_fast (1 samples, 0.07%)</title><rect x="86.6798%" y="725" width="0.0656%" height="15" fill="rgb(229,64,36)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="735.50"></text></g><g><title>rtree_metadata_try_read_fast (1 samples, 0.07%)</title><rect x="86.6798%" y="709" width="0.0656%" height="15" fill="rgb(205,129,25)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="719.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.07%)</title><rect x="86.6798%" y="693" width="0.0656%" height="15" fill="rgb(254,112,7)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="703.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.07%)</title><rect x="86.6798%" y="677" width="0.0656%" height="15" fill="rgb(226,53,48)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="687.50"></text></g><g><title>atomic_load_p (1 samples, 0.07%)</title><rect x="86.6798%" y="661" width="0.0656%" height="15" fill="rgb(214,153,38)" fg:x="1321" fg:w="1"/><text x="86.9298%" y="671.50"></text></g><g><title>&lt;[rustc_middle::mir::Statement] as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.7454%" y="629" width="0.0656%" height="15" fill="rgb(243,101,7)" fg:x="1322" fg:w="1"/><text x="86.9954%" y="639.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.7454%" y="613" width="0.0656%" height="15" fill="rgb(240,140,22)" fg:x="1322" fg:w="1"/><text x="86.9954%" y="623.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.7454%" y="597" width="0.0656%" height="15" fill="rgb(235,114,2)" fg:x="1322" fg:w="1"/><text x="86.9954%" y="607.50"></text></g><g><title>&lt;rustc_middle::ty::consts::Const as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.7454%" y="581" width="0.0656%" height="15" fill="rgb(242,59,12)" fg:x="1322" fg:w="1"/><text x="86.9954%" y="591.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.7454%" y="565" width="0.0656%" height="15" fill="rgb(252,134,9)" fg:x="1322" fg:w="1"/><text x="86.9954%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::ty::FieldDef&gt; as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.8110%" y="549" width="0.0656%" height="15" fill="rgb(236,4,44)" fg:x="1323" fg:w="1"/><text x="87.0610%" y="559.50"></text></g><g><title>&lt;[rustc_middle::mir::BasicBlockData] as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (3 samples, 0.20%)</title><rect x="86.7454%" y="645" width="0.1969%" height="15" fill="rgb(254,172,41)" fg:x="1322" fg:w="3"/><text x="86.9954%" y="655.50"></text></g><g><title>&lt;rustc_middle::mir::syntax::TerminatorKind as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (2 samples, 0.13%)</title><rect x="86.8110%" y="629" width="0.1312%" height="15" fill="rgb(244,63,20)" fg:x="1323" fg:w="2"/><text x="87.0610%" y="639.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (2 samples, 0.13%)</title><rect x="86.8110%" y="613" width="0.1312%" height="15" fill="rgb(250,73,31)" fg:x="1323" fg:w="2"/><text x="87.0610%" y="623.50"></text></g><g><title>&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt; as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (2 samples, 0.13%)</title><rect x="86.8110%" y="597" width="0.1312%" height="15" fill="rgb(241,38,36)" fg:x="1323" fg:w="2"/><text x="87.0610%" y="607.50"></text></g><g><title>&lt;rustc_type_ir::sty::TyKind&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (2 samples, 0.13%)</title><rect x="86.8110%" y="581" width="0.1312%" height="15" fill="rgb(245,211,2)" fg:x="1323" fg:w="2"/><text x="87.0610%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::ty::VariantDef&gt; as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (2 samples, 0.13%)</title><rect x="86.8110%" y="565" width="0.1312%" height="15" fill="rgb(206,120,28)" fg:x="1323" fg:w="2"/><text x="87.0610%" y="575.50"></text></g><g><title>&lt;rustc_span::symbol::Symbol as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.8766%" y="549" width="0.0656%" height="15" fill="rgb(211,59,34)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::symbol::Symbol, usize)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::symbol::Symbol, rustc_span::symbol::Symbol, usize, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="86.8766%" y="533" width="0.0656%" height="15" fill="rgb(233,168,5)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="543.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="86.8766%" y="517" width="0.0656%" height="15" fill="rgb(234,33,13)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="527.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="86.8766%" y="501" width="0.0656%" height="15" fill="rgb(231,150,26)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="511.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="86.8766%" y="485" width="0.0656%" height="15" fill="rgb(217,191,4)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="86.8766%" y="469" width="0.0656%" height="15" fill="rgb(246,198,38)" fg:x="1324" fg:w="1"/><text x="87.1266%" y="479.50"></text></g><g><title>rustc_query_impl::on_disk_cache::encode_query_results::&lt;rustc_query_impl::queries::optimized_mir&gt; (4 samples, 0.26%)</title><rect x="86.7454%" y="709" width="0.2625%" height="15" fill="rgb(245,64,37)" fg:x="1322" fg:w="4"/><text x="86.9954%" y="719.50"></text></g><g><title>&lt;rustc_query_system::query::caches::DefaultCache&lt;rustc_span::def_id::DefId, rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;&gt; as rustc_query_system::query::caches::QueryCache&gt;::iter (4 samples, 0.26%)</title><rect x="86.7454%" y="693" width="0.2625%" height="15" fill="rgb(250,30,36)" fg:x="1322" fg:w="4"/><text x="86.9954%" y="703.50"></text></g><g><title>rustc_query_impl::on_disk_cache::encode_query_results::&lt;rustc_query_impl::queries::mir_for_ctfe&gt;::{closure#0} (4 samples, 0.26%)</title><rect x="86.7454%" y="677" width="0.2625%" height="15" fill="rgb(217,86,53)" fg:x="1322" fg:w="4"/><text x="86.9954%" y="687.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (4 samples, 0.26%)</title><rect x="86.7454%" y="661" width="0.2625%" height="15" fill="rgb(228,157,16)" fg:x="1322" fg:w="4"/><text x="86.9954%" y="671.50"></text></g><g><title>&lt;[rustc_middle::mir::LocalDecl] as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="86.9423%" y="645" width="0.0656%" height="15" fill="rgb(217,59,31)" fg:x="1325" fg:w="1"/><text x="87.1923%" y="655.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), &lt;rustc_interface::interface::Compiler&gt;::enter&lt;rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result&lt;core::option::Option&lt;rustc_interface::queries::Linker&gt;, rustc_span::ErrorGuaranteed&gt;&gt;::{closure#0}&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="853" width="0.3281%" height="15" fill="rgb(237,138,41)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="863.50"></text></g><g><title>&lt;rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind&gt;::with_deps::&lt;rustc_incremental::persist::save::save_dep_graph::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="837" width="0.3281%" height="15" fill="rgb(227,91,49)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="847.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_incremental::persist::save::save_dep_graph::{closure#0}, ()&gt;::{closure#0}, ()&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="821" width="0.3281%" height="15" fill="rgb(247,21,44)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="831.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_incremental::persist::save::save_dep_graph::{closure#0}::{closure#2}::{closure#0}&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="805" width="0.3281%" height="15" fill="rgb(219,210,51)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="815.50"></text></g><g><title>rustc_incremental::persist::file_format::save_in::&lt;rustc_incremental::persist::save::save_dep_graph::{closure#0}::{closure#2}::{closure#0}::{closure#0}&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="789" width="0.3281%" height="15" fill="rgb(209,140,6)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="799.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;core::result::Result&lt;usize, std::io::error::Error&gt;, rustc_incremental::persist::save::encode_query_cache::{closure#0}&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="773" width="0.3281%" height="15" fill="rgb(221,188,24)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="783.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::serialize_query_result_cache (5 samples, 0.33%)</title><rect x="86.7454%" y="757" width="0.3281%" height="15" fill="rgb(232,154,20)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="767.50"></text></g><g><title>&lt;rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache&gt;::serialize (5 samples, 0.33%)</title><rect x="86.7454%" y="741" width="0.3281%" height="15" fill="rgb(244,137,50)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="751.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;&lt;rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache&gt;::serialize::{closure#0}, core::result::Result&lt;usize, std::io::error::Error&gt;&gt;::{closure#0}, core::result::Result&lt;usize, std::io::error::Error&gt;&gt; (5 samples, 0.33%)</title><rect x="86.7454%" y="725" width="0.3281%" height="15" fill="rgb(225,185,43)" fg:x="1322" fg:w="5"/><text x="86.9954%" y="735.50"></text></g><g><title>rustc_query_impl::on_disk_cache::encode_query_results::&lt;rustc_query_impl::queries::specialization_graph_of&gt; (1 samples, 0.07%)</title><rect x="87.0079%" y="709" width="0.0656%" height="15" fill="rgb(213,205,38)" fg:x="1326" fg:w="1"/><text x="87.2579%" y="719.50"></text></g><g><title>&lt;rustc_query_system::query::caches::DefaultCache&lt;rustc_span::def_id::DefId, rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;&gt; as rustc_query_system::query::caches::QueryCache&gt;::iter (1 samples, 0.07%)</title><rect x="87.0079%" y="693" width="0.0656%" height="15" fill="rgb(236,73,12)" fg:x="1326" fg:w="1"/><text x="87.2579%" y="703.50"></text></g><g><title>rustc_query_impl::on_disk_cache::encode_query_results::&lt;rustc_query_impl::queries::specialization_graph_of&gt;::{closure#0} (1 samples, 0.07%)</title><rect x="87.0079%" y="677" width="0.0656%" height="15" fill="rgb(235,219,13)" fg:x="1326" fg:w="1"/><text x="87.2579%" y="687.50"></text></g><g><title>&lt;rustc_data_structures::unord::UnordMap&lt;rustc_span::def_id::DefId, rustc_middle::traits::specialization_graph::Children&gt; as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="87.0079%" y="661" width="0.0656%" height="15" fill="rgb(218,59,36)" fg:x="1326" fg:w="1"/><text x="87.2579%" y="671.50"></text></g><g><title>&lt;rustc_middle::traits::specialization_graph::Children as rustc_serialize::serialize::Encodable&lt;rustc_query_impl::on_disk_cache::CacheEncoder&gt;&gt;::encode (1 samples, 0.07%)</title><rect x="87.0079%" y="645" width="0.0656%" height="15" fill="rgb(205,110,39)" fg:x="1326" fg:w="1"/><text x="87.2579%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;&lt;rustc_middle::ty::context::GlobalCtxt&gt;::enter&lt;rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#2}, &amp;rustc_data_structures::steal::Steal&lt;(rustc_middle::ty::ResolverAstLowering, alloc::rc::Rc&lt;rustc_ast::ast::Crate&gt;)&gt;&gt;::{closure#0}, &amp;rustc_data_structures::steal::Steal&lt;(rustc_middle::ty::ResolverAstLowering, alloc::rc::Rc&lt;rustc_ast::ast::Crate&gt;)&gt;&gt;::{closure#0}, &amp;rustc_data_structures::steal::Steal&lt;(rustc_middle::ty::ResolverAstLowering, alloc::rc::Rc&lt;rustc_ast::ast::Crate&gt;)&gt;&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="853" width="0.0656%" height="15" fill="rgb(218,206,42)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="863.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::resolver_for_lowering (1 samples, 0.07%)</title><rect x="87.0735%" y="837" width="0.0656%" height="15" fill="rgb(248,125,24)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolver_for_lowering, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="821" width="0.0656%" height="15" fill="rgb(242,28,27)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolver_for_lowering, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="805" width="0.0656%" height="15" fill="rgb(216,228,15)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="815.50"></text></g><g><title>rustc_interface::passes::resolver_for_lowering (1 samples, 0.07%)</title><rect x="87.0735%" y="789" width="0.0656%" height="15" fill="rgb(235,116,46)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="799.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), &lt;rustc_resolve::Resolver&gt;::resolve_crate::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="773" width="0.0656%" height="15" fill="rgb(224,18,32)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="783.50"></text></g><g><title>&lt;rustc_resolve::Resolver&gt;::late_resolve_crate (1 samples, 0.07%)</title><rect x="87.0735%" y="757" width="0.0656%" height="15" fill="rgb(252,5,12)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="767.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor as rustc_ast::visit::Visitor&gt;::visit_item (1 samples, 0.07%)</title><rect x="87.0735%" y="741" width="0.0656%" height="15" fill="rgb(251,36,5)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="751.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor&gt;::resolve_item (1 samples, 0.07%)</title><rect x="87.0735%" y="725" width="0.0656%" height="15" fill="rgb(217,53,14)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="735.50"></text></g><g><title>rustc_ast::visit::walk_item::&lt;rustc_resolve::late::LateResolutionVisitor&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="709" width="0.0656%" height="15" fill="rgb(215,86,45)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="719.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor as rustc_ast::visit::Visitor&gt;::visit_fn (1 samples, 0.07%)</title><rect x="87.0735%" y="693" width="0.0656%" height="15" fill="rgb(242,169,11)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="703.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor as rustc_ast::visit::Visitor&gt;::visit_block (1 samples, 0.07%)</title><rect x="87.0735%" y="677" width="0.0656%" height="15" fill="rgb(211,213,45)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="687.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor&gt;::resolve_expr (1 samples, 0.07%)</title><rect x="87.0735%" y="661" width="0.0656%" height="15" fill="rgb(205,88,11)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="671.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::get_attrs::&lt;rustc_span::def_id::DefId&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="645" width="0.0656%" height="15" fill="rgb(252,69,26)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="655.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::item_attrs (1 samples, 0.07%)</title><rect x="87.0735%" y="629" width="0.0656%" height="15" fill="rgb(246,123,37)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::item_attrs, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="613" width="0.0656%" height="15" fill="rgb(212,205,5)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::item_attrs, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="597" width="0.0656%" height="15" fill="rgb(253,148,0)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="607.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::item_attrs (1 samples, 0.07%)</title><rect x="87.0735%" y="581" width="0.0656%" height="15" fill="rgb(239,22,4)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="591.50"></text></g><g><title>&lt;rustc_middle::arena::Arena&gt;::alloc_from_iter::&lt;rustc_ast::ast::Attribute, rustc_arena::IsNotCopy, rustc_metadata::rmeta::decoder::DecodeIterator&lt;rustc_ast::ast::Attribute&gt;&gt; (1 samples, 0.07%)</title><rect x="87.0735%" y="565" width="0.0656%" height="15" fill="rgb(226,26,53)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="575.50"></text></g><g><title>&lt;rustc_arena::TypedArena&lt;rustc_ast::ast::Attribute&gt;&gt;::grow (1 samples, 0.07%)</title><rect x="87.0735%" y="549" width="0.0656%" height="15" fill="rgb(225,229,45)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="559.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="87.0735%" y="533" width="0.0656%" height="15" fill="rgb(220,60,37)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="543.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="87.0735%" y="517" width="0.0656%" height="15" fill="rgb(217,180,35)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="527.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="87.0735%" y="501" width="0.0656%" height="15" fill="rgb(229,7,53)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="511.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="87.0735%" y="485" width="0.0656%" height="15" fill="rgb(254,137,3)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="495.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="87.0735%" y="469" width="0.0656%" height="15" fill="rgb(215,140,41)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="479.50"></text></g><g><title>pa_nactive_add (1 samples, 0.07%)</title><rect x="87.0735%" y="453" width="0.0656%" height="15" fill="rgb(250,80,15)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="463.50"></text></g><g><title>atomic_fetch_add_zu (1 samples, 0.07%)</title><rect x="87.0735%" y="437" width="0.0656%" height="15" fill="rgb(252,191,6)" fg:x="1327" fg:w="1"/><text x="87.3235%" y="447.50"></text></g><g><title>rustc_borrowck::do_mir_borrowck (1 samples, 0.07%)</title><rect x="87.1391%" y="677" width="0.0656%" height="15" fill="rgb(246,217,18)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="687.50"></text></g><g><title>&lt;rustc_borrowck::borrow_set::BorrowSet&gt;::build (1 samples, 0.07%)</title><rect x="87.1391%" y="661" width="0.0656%" height="15" fill="rgb(223,93,7)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt;::reserve_rehash::&lt;indexmap::map::core::get_hash&lt;rustc_middle::mir::Local, rustc_borrowck::dataflow::BorrowIndex&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.1391%" y="645" width="0.0656%" height="15" fill="rgb(225,55,52)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="655.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.07%)</title><rect x="87.1391%" y="629" width="0.0656%" height="15" fill="rgb(240,31,24)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="639.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.07%)</title><rect x="87.1391%" y="613" width="0.0656%" height="15" fill="rgb(205,56,52)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="623.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.07%)</title><rect x="87.1391%" y="597" width="0.0656%" height="15" fill="rgb(246,146,12)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="607.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.07%)</title><rect x="87.1391%" y="581" width="0.0656%" height="15" fill="rgb(239,84,36)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="591.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.07%)</title><rect x="87.1391%" y="565" width="0.0656%" height="15" fill="rgb(207,41,40)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="575.50"></text></g><g><title>pai_alloc (1 samples, 0.07%)</title><rect x="87.1391%" y="549" width="0.0656%" height="15" fill="rgb(241,179,25)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="559.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.07%)</title><rect x="87.1391%" y="533" width="0.0656%" height="15" fill="rgb(210,0,34)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="543.50"></text></g><g><title>pac_alloc_real (1 samples, 0.07%)</title><rect x="87.1391%" y="517" width="0.0656%" height="15" fill="rgb(225,217,29)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="527.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.07%)</title><rect x="87.1391%" y="501" width="0.0656%" height="15" fill="rgb(216,191,38)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="511.50"></text></g><g><title>extent_recycle (1 samples, 0.07%)</title><rect x="87.1391%" y="485" width="0.0656%" height="15" fill="rgb(232,140,52)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="495.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.07%)</title><rect x="87.1391%" y="469" width="0.0656%" height="15" fill="rgb(223,158,51)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="479.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.07%)</title><rect x="87.1391%" y="453" width="0.0656%" height="15" fill="rgb(235,29,51)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="463.50"></text></g><g><title>eset_first_fit (1 samples, 0.07%)</title><rect x="87.1391%" y="437" width="0.0656%" height="15" fill="rgb(215,181,18)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="447.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (1 samples, 0.07%)</title><rect x="87.1391%" y="421" width="0.0656%" height="15" fill="rgb(227,125,34)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="431.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (1 samples, 0.07%)</title><rect x="87.1391%" y="405" width="0.0656%" height="15" fill="rgb(230,197,49)" fg:x="1328" fg:w="1"/><text x="87.3891%" y="415.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_interface::passes::analysis::{closure#2}&gt; (3 samples, 0.20%)</title><rect x="87.1391%" y="773" width="0.1969%" height="15" fill="rgb(239,141,16)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="783.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;&amp;[rustc_span::def_id::LocalDefId], &lt;rustc_middle::hir::map::Map&gt;::par_body_owners&lt;rustc_interface::passes::analysis::{closure#2}::{closure#0}&gt;::{closure#0}&gt; (3 samples, 0.20%)</title><rect x="87.1391%" y="757" width="0.1969%" height="15" fill="rgb(225,105,43)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="767.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="87.1391%" y="741" width="0.1969%" height="15" fill="rgb(214,131,14)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="751.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="87.1391%" y="725" width="0.1969%" height="15" fill="rgb(229,177,11)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="735.50"></text></g><g><title>&lt;rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce&lt;(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)&gt;&gt;::call_once (3 samples, 0.20%)</title><rect x="87.1391%" y="709" width="0.1969%" height="15" fill="rgb(231,180,14)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="719.50"></text></g><g><title>rustc_borrowck::mir_borrowck (3 samples, 0.20%)</title><rect x="87.1391%" y="693" width="0.1969%" height="15" fill="rgb(232,88,2)" fg:x="1328" fg:w="3"/><text x="87.3891%" y="703.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_promoted, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="87.2047%" y="677" width="0.1312%" height="15" fill="rgb(205,220,8)" fg:x="1329" fg:w="2"/><text x="87.4547%" y="687.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_promoted, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="661" width="0.0656%" height="15" fill="rgb(225,23,53)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="671.50"></text></g><g><title>rustc_mir_transform::mir_promoted (1 samples, 0.07%)</title><rect x="87.2703%" y="645" width="0.0656%" height="15" fill="rgb(213,62,29)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_const, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="629" width="0.0656%" height="15" fill="rgb(227,75,7)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_const, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="613" width="0.0656%" height="15" fill="rgb(207,105,14)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="623.50"></text></g><g><title>rustc_mir_transform::mir_const (1 samples, 0.07%)</title><rect x="87.2703%" y="597" width="0.0656%" height="15" fill="rgb(245,62,29)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="581" width="0.0656%" height="15" fill="rgb(236,202,4)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="565" width="0.0656%" height="15" fill="rgb(250,67,1)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="575.50"></text></g><g><title>&lt;rustc_mir_transform::check_unsafety::provide::{closure#0} as core::ops::function::FnOnce&lt;(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="87.2703%" y="549" width="0.0656%" height="15" fill="rgb(253,115,44)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="559.50"></text></g><g><title>rustc_mir_transform::check_unsafety::unsafety_check_result (1 samples, 0.07%)</title><rect x="87.2703%" y="533" width="0.0656%" height="15" fill="rgb(251,139,18)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_built, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="517" width="0.0656%" height="15" fill="rgb(218,22,32)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_built, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.2703%" y="501" width="0.0656%" height="15" fill="rgb(243,53,5)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="511.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.2703%" y="485" width="0.0656%" height="15" fill="rgb(227,56,16)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="495.50"></text></g><g><title>&lt;rustc_index::vec::IndexVec&lt;rustc_middle::mir::BasicBlock, rustc_middle::mir::BasicBlockData&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.2703%" y="469" width="0.0656%" height="15" fill="rgb(245,53,0)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="479.50"></text></g><g><title>&lt;(rustc_middle::mir::syntax::Place, rustc_middle::mir::syntax::Rvalue) as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.2703%" y="453" width="0.0656%" height="15" fill="rgb(216,170,35)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="463.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::finish128 (1 samples, 0.07%)</title><rect x="87.2703%" y="437" width="0.0656%" height="15" fill="rgb(211,200,8)" fg:x="1330" fg:w="1"/><text x="87.5203%" y="447.50"></text></g><g><title>&lt;rustc_interface::interface::Compiler&gt;::enter::&lt;rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result&lt;core::option::Option&lt;rustc_interface::queries::Linker&gt;, rustc_span::ErrorGuaranteed&gt;&gt; (69 samples, 4.53%)</title><rect x="82.8740%" y="869" width="4.5276%" height="15" fill="rgb(228,204,44)" fg:x="1263" fg:w="69"/><text x="83.1240%" y="879.50">&lt;rust..</text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;&lt;rustc_middle::ty::context::GlobalCtxt&gt;::enter&lt;rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;&gt;::{closure#0}, core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;&gt;::{closure#0}, core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;&gt; (4 samples, 0.26%)</title><rect x="87.1391%" y="853" width="0.2625%" height="15" fill="rgb(214,121,17)" fg:x="1328" fg:w="4"/><text x="87.3891%" y="863.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::analysis (4 samples, 0.26%)</title><rect x="87.1391%" y="837" width="0.2625%" height="15" fill="rgb(233,64,38)" fg:x="1328" fg:w="4"/><text x="87.3891%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt&gt; (4 samples, 0.26%)</title><rect x="87.1391%" y="821" width="0.2625%" height="15" fill="rgb(253,54,19)" fg:x="1328" fg:w="4"/><text x="87.3891%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (4 samples, 0.26%)</title><rect x="87.1391%" y="805" width="0.2625%" height="15" fill="rgb(253,94,18)" fg:x="1328" fg:w="4"/><text x="87.3891%" y="815.50"></text></g><g><title>rustc_interface::passes::analysis (4 samples, 0.26%)</title><rect x="87.1391%" y="789" width="0.2625%" height="15" fill="rgb(227,57,52)" fg:x="1328" fg:w="4"/><text x="87.3891%" y="799.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_interface::passes::analysis::{closure#6}&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="773" width="0.0656%" height="15" fill="rgb(230,228,50)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="783.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_interface::passes::analysis::{closure#6}::{closure#2}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="757" width="0.0656%" height="15" fill="rgb(217,205,27)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="767.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;&amp;[rustc_hir::hir_id::OwnerId], &lt;rustc_middle::hir::map::Map&gt;::par_for_each_module&lt;rustc_interface::passes::analysis::{closure#6}::{closure#2}::{closure#0}::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="741" width="0.0656%" height="15" fill="rgb(252,71,50)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="751.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::check_mod_privacy (1 samples, 0.07%)</title><rect x="87.3360%" y="725" width="0.0656%" height="15" fill="rgb(209,86,4)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::check_mod_privacy, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="709" width="0.0656%" height="15" fill="rgb(229,94,0)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::check_mod_privacy, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 0]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 0]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="693" width="0.0656%" height="15" fill="rgb(252,223,21)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="703.50"></text></g><g><title>rustc_privacy::check_mod_privacy (1 samples, 0.07%)</title><rect x="87.3360%" y="677" width="0.0656%" height="15" fill="rgb(230,210,4)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="687.50"></text></g><g><title>rustc_hir::intravisit::walk_item::&lt;rustc_privacy::TypePrivacyVisitor&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="661" width="0.0656%" height="15" fill="rgb(240,149,38)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="671.50"></text></g><g><title>&lt;rustc_privacy::TypePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.07%)</title><rect x="87.3360%" y="645" width="0.0656%" height="15" fill="rgb(254,105,20)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="655.50"></text></g><g><title>&lt;rustc_privacy::TypePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.07%)</title><rect x="87.3360%" y="629" width="0.0656%" height="15" fill="rgb(253,87,46)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="639.50"></text></g><g><title>&lt;rustc_privacy::TypePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.07%)</title><rect x="87.3360%" y="613" width="0.0656%" height="15" fill="rgb(253,116,33)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="623.50"></text></g><g><title>&lt;rustc_privacy::TypePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.07%)</title><rect x="87.3360%" y="597" width="0.0656%" height="15" fill="rgb(229,198,5)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="607.50"></text></g><g><title>&lt;rustc_privacy::DefIdVisitorSkeleton&lt;rustc_privacy::TypePrivacyVisitor&gt; as rustc_type_ir::visit::TypeVisitor&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::visit_ty (1 samples, 0.07%)</title><rect x="87.3360%" y="581" width="0.0656%" height="15" fill="rgb(242,38,37)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="591.50"></text></g><g><title>&lt;rustc_privacy::DefIdVisitorSkeleton&lt;rustc_privacy::TypePrivacyVisitor&gt; as rustc_type_ir::visit::TypeVisitor&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::visit_binder::&lt;rustc_middle::ty::sty::FnSig&gt; (1 samples, 0.07%)</title><rect x="87.3360%" y="565" width="0.0656%" height="15" fill="rgb(242,69,53)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="575.50"></text></g><g><title>&lt;rustc_privacy::DefIdVisitorSkeleton&lt;rustc_privacy::TypePrivacyVisitor&gt; as rustc_type_ir::visit::TypeVisitor&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::visit_ty (1 samples, 0.07%)</title><rect x="87.3360%" y="549" width="0.0656%" height="15" fill="rgb(249,80,16)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="559.50"></text></g><g><title>&lt;rustc_privacy::DefIdVisitorSkeleton&lt;rustc_privacy::TypePrivacyVisitor&gt; as rustc_type_ir::visit::TypeVisitor&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::visit_ty (1 samples, 0.07%)</title><rect x="87.3360%" y="533" width="0.0656%" height="15" fill="rgb(206,128,11)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="543.50"></text></g><g><title>&lt;rustc_middle::ty::sty::AliasTy&gt;::trait_ref_and_own_substs (1 samples, 0.07%)</title><rect x="87.3360%" y="517" width="0.0656%" height="15" fill="rgb(212,35,20)" fg:x="1331" fg:w="1"/><text x="87.5860%" y="527.50"></text></g><g><title>&lt;rustc_interface::queries::Queries&gt;::ongoing_codegen (1 samples, 0.07%)</title><rect x="87.4016%" y="869" width="0.0656%" height="15" fill="rgb(236,79,13)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="879.50"></text></g><g><title>&lt;rustc_middle::ty::context::GlobalCtxt&gt;::enter::&lt;&lt;rustc_interface::queries::Queries&gt;::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result&lt;alloc::boxed::Box&lt;dyn core::any::Any&gt;, rustc_span::ErrorGuaranteed&gt;&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="853" width="0.0656%" height="15" fill="rgb(233,123,3)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="863.50"></text></g><g><title>rustc_interface::passes::start_codegen (1 samples, 0.07%)</title><rect x="87.4016%" y="837" width="0.0656%" height="15" fill="rgb(214,93,52)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="847.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;alloc::boxed::Box&lt;dyn core::any::Any&gt;, rustc_interface::passes::start_codegen::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="821" width="0.0656%" height="15" fill="rgb(251,37,40)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="831.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (1 samples, 0.07%)</title><rect x="87.4016%" y="805" width="0.0656%" height="15" fill="rgb(227,80,54)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="815.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="789" width="0.0656%" height="15" fill="rgb(254,48,11)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="799.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="87.4016%" y="773" width="0.0656%" height="15" fill="rgb(235,193,26)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="783.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="757" width="0.0656%" height="15" fill="rgb(229,99,21)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="767.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="741" width="0.0656%" height="15" fill="rgb(211,140,41)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="751.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="87.4016%" y="725" width="0.0656%" height="15" fill="rgb(240,227,30)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.07%)</title><rect x="87.4016%" y="709" width="0.0656%" height="15" fill="rgb(215,224,45)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="719.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="693" width="0.0656%" height="15" fill="rgb(206,123,31)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="703.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="677" width="0.0656%" height="15" fill="rgb(210,138,16)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="661" width="0.0656%" height="15" fill="rgb(228,57,28)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="645" width="0.0656%" height="15" fill="rgb(242,170,10)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="629" width="0.0656%" height="15" fill="rgb(228,214,39)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="613" width="0.0656%" height="15" fill="rgb(218,179,33)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="597" width="0.0656%" height="15" fill="rgb(235,193,39)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="607.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.4016%" y="581" width="0.0656%" height="15" fill="rgb(219,221,36)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="591.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="87.4016%" y="565" width="0.0656%" height="15" fill="rgb(248,218,19)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="549" width="0.0656%" height="15" fill="rgb(205,50,9)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="533" width="0.0656%" height="15" fill="rgb(238,81,28)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="543.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="87.4016%" y="517" width="0.0656%" height="15" fill="rgb(235,110,19)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="527.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="87.4016%" y="501" width="0.0656%" height="15" fill="rgb(214,7,14)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="511.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="87.4016%" y="485" width="0.0656%" height="15" fill="rgb(211,77,3)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="495.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="469" width="0.0656%" height="15" fill="rgb(229,5,9)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="479.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.4016%" y="453" width="0.0656%" height="15" fill="rgb(225,90,11)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="463.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="87.4016%" y="437" width="0.0656%" height="15" fill="rgb(242,56,8)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_span::def_id::DefId&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_span::def_id::DefId, core::iter::adapters::cloned::Cloned&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, core::iter::adapters::flatten::FlatMap&lt;indexmap::map::Iter&lt;rustc_middle::ty::fast_reject::SimplifiedType, alloc::vec::Vec&lt;rustc_span::def_id::DefId&gt;&gt;, &amp;alloc::vec::Vec&lt;rustc_span::def_id::DefId&gt;, &lt;rustc_middle::ty::context::TyCtxt&gt;::all_impls::{closure#0}&gt;&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.4016%" y="421" width="0.0656%" height="15" fill="rgb(249,212,39)" fg:x="1332" fg:w="1"/><text x="87.6516%" y="431.50"></text></g><g><title>&lt;rustc_metadata::creader::CrateMetadataRef&gt;::get_variant (1 samples, 0.07%)</title><rect x="87.4672%" y="869" width="0.0656%" height="15" fill="rgb(236,90,9)" fg:x="1333" fg:w="1"/><text x="87.7172%" y="879.50"></text></g><g><title>&lt;rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind&gt;::read_deps::&lt;&lt;rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::read_index::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.5328%" y="869" width="0.0656%" height="15" fill="rgb(206,88,35)" fg:x="1334" fg:w="1"/><text x="87.7828%" y="879.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::caller_location_ty (1 samples, 0.07%)</title><rect x="87.5984%" y="869" width="0.0656%" height="15" fill="rgb(205,126,30)" fg:x="1335" fg:w="1"/><text x="87.8484%" y="879.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::ast_block_stmts (1 samples, 0.07%)</title><rect x="87.6640%" y="869" width="0.0656%" height="15" fill="rgb(230,176,12)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="879.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::stmt_expr (1 samples, 0.07%)</title><rect x="87.6640%" y="853" width="0.0656%" height="15" fill="rgb(243,19,9)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="863.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::stmt_expr (1 samples, 0.07%)</title><rect x="87.6640%" y="837" width="0.0656%" height="15" fill="rgb(245,171,17)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="847.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_temp_inner (1 samples, 0.07%)</title><rect x="87.6640%" y="821" width="0.0656%" height="15" fill="rgb(227,52,21)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="831.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.6640%" y="805" width="0.0656%" height="15" fill="rgb(238,69,14)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="815.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.6640%" y="789" width="0.0656%" height="15" fill="rgb(241,156,39)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="799.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.6640%" y="773" width="0.0656%" height="15" fill="rgb(212,227,28)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="783.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_operand (1 samples, 0.07%)</title><rect x="87.6640%" y="757" width="0.0656%" height="15" fill="rgb(209,118,27)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="767.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.6640%" y="741" width="0.0656%" height="15" fill="rgb(226,102,5)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="751.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_as_place (1 samples, 0.07%)</title><rect x="87.6640%" y="725" width="0.0656%" height="15" fill="rgb(223,34,3)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::needs_drop_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="709" width="0.0656%" height="15" fill="rgb(221,81,38)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::needs_drop_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="693" width="0.0656%" height="15" fill="rgb(236,219,28)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="703.50"></text></g><g><title>rustc_ty_utils::needs_drop::needs_drop_raw (1 samples, 0.07%)</title><rect x="87.6640%" y="677" width="0.0656%" height="15" fill="rgb(213,200,14)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="687.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_destructor (1 samples, 0.07%)</title><rect x="87.6640%" y="661" width="0.0656%" height="15" fill="rgb(240,33,19)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_destructor, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="645" width="0.0656%" height="15" fill="rgb(233,113,27)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_destructor, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 12]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 12]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="629" width="0.0656%" height="15" fill="rgb(220,221,18)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="639.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::adt_destructor (1 samples, 0.07%)</title><rect x="87.6640%" y="613" width="0.0656%" height="15" fill="rgb(238,92,8)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="623.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::calculate_dtor::&lt;rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::adt_destructor::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="597" width="0.0656%" height="15" fill="rgb(222,164,16)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="607.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::coherent_trait (1 samples, 0.07%)</title><rect x="87.6640%" y="581" width="0.0656%" height="15" fill="rgb(241,119,3)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::coherent_trait, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="565" width="0.0656%" height="15" fill="rgb(241,44,8)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="575.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::coherent_trait, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 0]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 0]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="549" width="0.0656%" height="15" fill="rgb(230,36,40)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="559.50"></text></g><g><title>rustc_hir_analysis::coherence::coherent_trait (1 samples, 0.07%)</title><rect x="87.6640%" y="533" width="0.0656%" height="15" fill="rgb(243,16,36)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="543.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="87.6640%" y="517" width="0.0656%" height="15" fill="rgb(231,4,26)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="501" width="0.0656%" height="15" fill="rgb(240,9,31)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="485" width="0.0656%" height="15" fill="rgb(207,173,15)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="495.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="87.6640%" y="469" width="0.0656%" height="15" fill="rgb(224,192,53)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="479.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="453" width="0.0656%" height="15" fill="rgb(223,67,28)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="463.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.6640%" y="437" width="0.0656%" height="15" fill="rgb(211,20,47)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="447.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (1 samples, 0.07%)</title><rect x="87.6640%" y="421" width="0.0656%" height="15" fill="rgb(240,228,2)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="431.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.6640%" y="405" width="0.0656%" height="15" fill="rgb(248,151,12)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="415.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.6640%" y="389" width="0.0656%" height="15" fill="rgb(244,8,39)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="399.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (1 samples, 0.07%)</title><rect x="87.6640%" y="373" width="0.0656%" height="15" fill="rgb(222,26,8)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="383.50"></text></g><g><title>&lt;rustc_middle::ty::adt::AdtDefData as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.6640%" y="357" width="0.0656%" height="15" fill="rgb(213,106,44)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="367.50"></text></g><g><title>&lt;rustc_index::vec::IndexVec&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.6640%" y="341" width="0.0656%" height="15" fill="rgb(214,129,20)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="351.50"></text></g><g><title>&lt;rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore&gt;::def_path_hash (1 samples, 0.07%)</title><rect x="87.6640%" y="325" width="0.0656%" height="15" fill="rgb(212,32,13)" fg:x="1336" fg:w="1"/><text x="87.9140%" y="335.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.7297%" y="869" width="0.0656%" height="15" fill="rgb(208,168,33)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="879.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::ast_block (1 samples, 0.07%)</title><rect x="87.7297%" y="853" width="0.0656%" height="15" fill="rgb(231,207,8)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="863.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::ast_block_stmts (1 samples, 0.07%)</title><rect x="87.7297%" y="837" width="0.0656%" height="15" fill="rgb(235,219,23)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="847.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.7297%" y="821" width="0.0656%" height="15" fill="rgb(226,216,26)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="831.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.7297%" y="805" width="0.0656%" height="15" fill="rgb(239,137,16)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="815.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_as_place (1 samples, 0.07%)</title><rect x="87.7297%" y="789" width="0.0656%" height="15" fill="rgb(207,12,36)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="799.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_as_place (1 samples, 0.07%)</title><rect x="87.7297%" y="773" width="0.0656%" height="15" fill="rgb(210,214,24)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="783.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.7297%" y="757" width="0.0656%" height="15" fill="rgb(206,56,30)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="767.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="741" width="0.0656%" height="15" fill="rgb(228,143,26)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="751.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="725" width="0.0656%" height="15" fill="rgb(216,218,46)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="735.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="709" width="0.0656%" height="15" fill="rgb(206,6,19)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="719.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="87.7297%" y="693" width="0.0656%" height="15" fill="rgb(239,177,51)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="703.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="677" width="0.0656%" height="15" fill="rgb(216,55,25)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="687.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="661" width="0.0656%" height="15" fill="rgb(231,163,29)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="671.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_operand (1 samples, 0.07%)</title><rect x="87.7297%" y="645" width="0.0656%" height="15" fill="rgb(232,149,50)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::needs_drop_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="629" width="0.0656%" height="15" fill="rgb(223,142,48)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::needs_drop_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="613" width="0.0656%" height="15" fill="rgb(245,83,23)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="623.50"></text></g><g><title>rustc_ty_utils::needs_drop::needs_drop_raw (1 samples, 0.07%)</title><rect x="87.7297%" y="597" width="0.0656%" height="15" fill="rgb(224,63,2)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::needs_drop_raw::{closure#0}&gt;::{closure#0}::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_ty_utils::needs_drop::drop_tys_helper::with_query_cache&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::needs_drop_raw::{closure#0}&gt;::{closure#0}::{closure#0}&gt;&gt;::{closure#0}, core::result::Result&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::util::AlwaysRequiresDrop&gt;&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="581" width="0.0656%" height="15" fill="rgb(218,65,53)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_drop_tys (1 samples, 0.07%)</title><rect x="87.7297%" y="565" width="0.0656%" height="15" fill="rgb(221,84,29)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_drop_tys, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="549" width="0.0656%" height="15" fill="rgb(234,0,32)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_drop_tys, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="533" width="0.0656%" height="15" fill="rgb(206,20,16)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="543.50"></text></g><g><title>rustc_ty_utils::needs_drop::adt_drop_tys (1 samples, 0.07%)</title><rect x="87.7297%" y="517" width="0.0656%" height="15" fill="rgb(244,172,18)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_middle::ty::Ty, core::iter::adapters::GenericShunt&lt;rustc_ty_utils::needs_drop::NeedsDropTypes&lt;rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::util::AlwaysRequiresDrop&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="87.7297%" y="501" width="0.0656%" height="15" fill="rgb(254,133,1)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="511.50"></text></g><g><title>&lt;rustc_ty_utils::needs_drop::NeedsDropTypes&lt;rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="87.7297%" y="485" width="0.0656%" height="15" fill="rgb(222,206,41)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_ty_utils::needs_drop::drop_tys_helper::with_query_cache&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}::{closure#0}&gt;&gt;::{closure#0}, core::result::Result&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::util::AlwaysRequiresDrop&gt;&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="469" width="0.0656%" height="15" fill="rgb(212,3,42)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;_, _&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::&lt;core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, core::result::Result&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::util::AlwaysRequiresDrop&gt;, core::iter::adapters::map::map_try_fold&lt;&amp;rustc_middle::ty::FieldDef, rustc_middle::ty::Ty, alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, core::result::Result&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::util::AlwaysRequiresDrop&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}::{closure#0}, rustc_ty_utils::needs_drop::drop_tys_helper::with_query_cache&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::adt_drop_tys::{closure#0}&gt;::{closure#0}::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#0} (1 samples, 0.07%)</title><rect x="87.7297%" y="453" width="0.0656%" height="15" fill="rgb(241,11,4)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="463.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_drop_tys (1 samples, 0.07%)</title><rect x="87.7297%" y="437" width="0.0656%" height="15" fill="rgb(205,19,26)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_drop_tys, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="421" width="0.0656%" height="15" fill="rgb(210,179,32)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="431.50"></text></g><g><title>&lt;rustc_query_system::query::plumbing::JobOwner&lt;rustc_span::def_id::DefId, rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::complete::&lt;rustc_query_system::query::caches::DefaultCache&lt;rustc_span::def_id::DefId, rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="405" width="0.0656%" height="15" fill="rgb(227,116,49)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::def_id::DefId, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex))&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::def_id::DefId, rustc_span::def_id::DefId, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex), core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.7297%" y="389" width="0.0656%" height="15" fill="rgb(211,146,6)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="399.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="87.7297%" y="373" width="0.0656%" height="15" fill="rgb(219,44,39)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="383.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.07%)</title><rect x="87.7297%" y="357" width="0.0656%" height="15" fill="rgb(234,128,11)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="367.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.07%)</title><rect x="87.7297%" y="341" width="0.0656%" height="15" fill="rgb(220,183,53)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.07%)</title><rect x="87.7297%" y="325" width="0.0656%" height="15" fill="rgb(213,219,32)" fg:x="1337" fg:w="1"/><text x="87.9797%" y="335.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="869" width="0.0656%" height="15" fill="rgb(232,156,16)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="879.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="853" width="0.0656%" height="15" fill="rgb(246,135,34)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="863.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="837" width="0.0656%" height="15" fill="rgb(241,99,0)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="847.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="821" width="0.0656%" height="15" fill="rgb(222,103,45)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="831.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="805" width="0.0656%" height="15" fill="rgb(212,57,4)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="815.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="789" width="0.0656%" height="15" fill="rgb(215,68,47)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="799.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="773" width="0.0656%" height="15" fill="rgb(230,84,2)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="783.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="757" width="0.0656%" height="15" fill="rgb(220,102,14)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="767.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="741" width="0.0656%" height="15" fill="rgb(240,10,32)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="751.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="725" width="0.0656%" height="15" fill="rgb(215,47,27)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="709" width="0.0656%" height="15" fill="rgb(233,188,43)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.7953%" y="693" width="0.0656%" height="15" fill="rgb(253,190,1)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="87.7953%" y="677" width="0.0656%" height="15" fill="rgb(206,114,52)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="687.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="661" width="0.0656%" height="15" fill="rgb(233,120,37)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="671.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="645" width="0.0656%" height="15" fill="rgb(214,52,39)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="655.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="87.7953%" y="629" width="0.0656%" height="15" fill="rgb(223,80,29)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="639.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="87.7953%" y="613" width="0.0656%" height="15" fill="rgb(230,101,40)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="623.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="87.7953%" y="597" width="0.0656%" height="15" fill="rgb(219,211,8)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="581" width="0.0656%" height="15" fill="rgb(252,126,28)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="565" width="0.0656%" height="15" fill="rgb(215,56,38)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="575.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="87.7953%" y="549" width="0.0656%" height="15" fill="rgb(249,55,44)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="533" width="0.0656%" height="15" fill="rgb(220,221,32)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.7953%" y="517" width="0.0656%" height="15" fill="rgb(212,216,41)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="527.50"></text></g><g><title>&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="87.7953%" y="501" width="0.0656%" height="15" fill="rgb(228,213,43)" fg:x="1338" fg:w="1"/><text x="88.0453%" y="511.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;alloc::boxed::Box&lt;dyn core::any::Any&gt;, rustc_interface::passes::start_codegen::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="869" width="0.0656%" height="15" fill="rgb(211,31,26)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="879.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (1 samples, 0.07%)</title><rect x="87.8609%" y="853" width="0.0656%" height="15" fill="rgb(229,202,19)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="863.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="837" width="0.0656%" height="15" fill="rgb(229,105,46)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="847.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="87.8609%" y="821" width="0.0656%" height="15" fill="rgb(235,108,1)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="805" width="0.0656%" height="15" fill="rgb(245,111,35)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="789" width="0.0656%" height="15" fill="rgb(219,185,31)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="799.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="87.8609%" y="773" width="0.0656%" height="15" fill="rgb(214,4,43)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="783.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.07%)</title><rect x="87.8609%" y="757" width="0.0656%" height="15" fill="rgb(235,227,40)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="767.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="741" width="0.0656%" height="15" fill="rgb(230,88,30)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="751.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="725" width="0.0656%" height="15" fill="rgb(216,217,1)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="709" width="0.0656%" height="15" fill="rgb(248,139,50)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="693" width="0.0656%" height="15" fill="rgb(233,1,21)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="677" width="0.0656%" height="15" fill="rgb(215,183,12)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="661" width="0.0656%" height="15" fill="rgb(229,104,42)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="645" width="0.0656%" height="15" fill="rgb(243,34,48)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="629" width="0.0656%" height="15" fill="rgb(239,11,44)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="87.8609%" y="613" width="0.0656%" height="15" fill="rgb(231,98,35)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="87.8609%" y="597" width="0.0656%" height="15" fill="rgb(233,28,25)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="581" width="0.0656%" height="15" fill="rgb(234,123,11)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.8609%" y="565" width="0.0656%" height="15" fill="rgb(220,69,3)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="575.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir (1 samples, 0.07%)</title><rect x="87.8609%" y="549" width="0.0656%" height="15" fill="rgb(214,64,36)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="559.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.8609%" y="533" width="0.0656%" height="15" fill="rgb(211,138,32)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="543.50"></text></g><g><title>&lt;rustc_middle::mir::SourceScopeData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.8609%" y="517" width="0.0656%" height="15" fill="rgb(213,118,47)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="527.50"></text></g><g><title>&lt;rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.8609%" y="501" width="0.0656%" height="15" fill="rgb(243,124,49)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="511.50"></text></g><g><title>&lt;rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="87.8609%" y="485" width="0.0656%" height="15" fill="rgb(221,30,28)" fg:x="1339" fg:w="1"/><text x="88.1109%" y="495.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 1]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.9265%" y="869" width="0.0656%" height="15" fill="rgb(246,37,13)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="879.50"></text></g><g><title>rustc_interface::passes::analysis (1 samples, 0.07%)</title><rect x="87.9265%" y="853" width="0.0656%" height="15" fill="rgb(249,66,14)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="863.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_interface::passes::analysis::{closure#2}&gt; (1 samples, 0.07%)</title><rect x="87.9265%" y="837" width="0.0656%" height="15" fill="rgb(213,166,5)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="847.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;&amp;[rustc_span::def_id::LocalDefId], &lt;rustc_middle::hir::map::Map&gt;::par_body_owners&lt;rustc_interface::passes::analysis::{closure#2}::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="87.9265%" y="821" width="0.0656%" height="15" fill="rgb(221,66,24)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="87.9265%" y="805" width="0.0656%" height="15" fill="rgb(210,132,17)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.9265%" y="789" width="0.0656%" height="15" fill="rgb(243,202,5)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="799.50"></text></g><g><title>&lt;rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce&lt;(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="87.9265%" y="773" width="0.0656%" height="15" fill="rgb(233,70,48)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="783.50"></text></g><g><title>rustc_borrowck::mir_borrowck (1 samples, 0.07%)</title><rect x="87.9265%" y="757" width="0.0656%" height="15" fill="rgb(238,41,26)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="767.50"></text></g><g><title>rustc_borrowck::do_mir_borrowck (1 samples, 0.07%)</title><rect x="87.9265%" y="741" width="0.0656%" height="15" fill="rgb(241,19,31)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="751.50"></text></g><g><title>rustc_borrowck::nll::compute_regions (1 samples, 0.07%)</title><rect x="87.9265%" y="725" width="0.0656%" height="15" fill="rgb(214,76,10)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="735.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeChecker&gt;::typeck_mir (1 samples, 0.07%)</title><rect x="87.9265%" y="709" width="0.0656%" height="15" fill="rgb(254,202,22)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="719.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_predicate (1 samples, 0.07%)</title><rect x="87.9265%" y="693" width="0.0656%" height="15" fill="rgb(214,72,24)" fg:x="1340" fg:w="1"/><text x="88.1765%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::explicit_predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="87.9921%" y="869" width="0.0656%" height="15" fill="rgb(221,92,46)" fg:x="1341" fg:w="1"/><text x="88.2421%" y="879.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="88.0577%" y="869" width="0.1312%" height="15" fill="rgb(246,13,50)" fg:x="1342" fg:w="2"/><text x="88.3077%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.1890%" y="869" width="0.0656%" height="15" fill="rgb(240,165,38)" fg:x="1344" fg:w="1"/><text x="88.4390%" y="879.50"></text></g><g><title>arena_choose (1 samples, 0.07%)</title><rect x="88.2546%" y="869" width="0.0656%" height="15" fill="rgb(241,24,51)" fg:x="1345" fg:w="1"/><text x="88.5046%" y="879.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.07%)</title><rect x="88.3202%" y="869" width="0.0656%" height="15" fill="rgb(227,51,44)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="879.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.07%)</title><rect x="88.3202%" y="853" width="0.0656%" height="15" fill="rgb(231,121,3)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="863.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.07%)</title><rect x="88.3202%" y="837" width="0.0656%" height="15" fill="rgb(245,3,41)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_repeat_zero_or_one (1 samples, 0.07%)</title><rect x="88.3202%" y="821" width="0.0656%" height="15" fill="rgb(214,13,26)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="831.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.07%)</title><rect x="88.3202%" y="805" width="0.0656%" height="15" fill="rgb(252,75,11)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="815.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.07%)</title><rect x="88.3202%" y="789" width="0.0656%" height="15" fill="rgb(218,226,17)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="799.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.07%)</title><rect x="88.3202%" y="773" width="0.0656%" height="15" fill="rgb(248,89,38)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="783.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.07%)</title><rect x="88.3202%" y="757" width="0.0656%" height="15" fill="rgb(237,73,46)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="767.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.07%)</title><rect x="88.3202%" y="741" width="0.0656%" height="15" fill="rgb(242,78,33)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="751.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="88.3202%" y="725" width="0.0656%" height="15" fill="rgb(235,60,3)" fg:x="1346" fg:w="1"/><text x="88.5702%" y="735.50"></text></g><g><title>rustc_borrowck::nll::compute_regions (1 samples, 0.07%)</title><rect x="88.3858%" y="869" width="0.0656%" height="15" fill="rgb(216,172,19)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="879.50"></text></g><g><title>rustc_borrowck::type_check::liveness::generate (1 samples, 0.07%)</title><rect x="88.3858%" y="853" width="0.0656%" height="15" fill="rgb(227,6,42)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="863.50"></text></g><g><title>rustc_borrowck::type_check::liveness::trace::trace (1 samples, 0.07%)</title><rect x="88.3858%" y="837" width="0.0656%" height="15" fill="rgb(223,207,42)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::dropck_outlives, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="821" width="0.0656%" height="15" fill="rgb(246,138,30)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::dropck_outlives, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="805" width="0.0656%" height="15" fill="rgb(251,199,47)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="815.50"></text></g><g><title>rustc_traits::dropck_outlives::dropck_outlives (1 samples, 0.07%)</title><rect x="88.3858%" y="789" width="0.0656%" height="15" fill="rgb(228,218,44)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="799.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxtBuilder as rustc_trait_selection::infer::InferCtxtBuilderExt&gt;::enter_canonical_trait_query::&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::ty::Ty&gt;, rustc_middle::traits::query::DropckOutlivesResult, rustc_traits::dropck_outlives::dropck_outlives::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="773" width="0.0656%" height="15" fill="rgb(220,68,6)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="783.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.07%)</title><rect x="88.3858%" y="757" width="0.0656%" height="15" fill="rgb(240,60,26)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="767.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="741" width="0.0656%" height="15" fill="rgb(211,200,19)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="751.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="725" width="0.0656%" height="15" fill="rgb(242,145,30)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="735.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="709" width="0.0656%" height="15" fill="rgb(225,64,13)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="719.50"></text></g><g><title>rustc_traits::dropck_outlives::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="693" width="0.0656%" height="15" fill="rgb(218,103,35)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="703.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.07%)</title><rect x="88.3858%" y="677" width="0.0656%" height="15" fill="rgb(216,93,46)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="687.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="661" width="0.0656%" height="15" fill="rgb(225,159,27)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="645" width="0.0656%" height="15" fill="rgb(225,204,11)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="629" width="0.0656%" height="15" fill="rgb(205,56,4)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="639.50"></text></g><g><title>rustc_traits::dropck_outlives::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="613" width="0.0656%" height="15" fill="rgb(206,6,35)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="623.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.07%)</title><rect x="88.3858%" y="597" width="0.0656%" height="15" fill="rgb(247,73,52)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="607.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="581" width="0.0656%" height="15" fill="rgb(246,97,4)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="565" width="0.0656%" height="15" fill="rgb(212,37,15)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="575.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="549" width="0.0656%" height="15" fill="rgb(208,130,40)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="559.50"></text></g><g><title>rustc_traits::dropck_outlives::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="533" width="0.0656%" height="15" fill="rgb(236,55,29)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="543.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.07%)</title><rect x="88.3858%" y="517" width="0.0656%" height="15" fill="rgb(209,156,45)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="527.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="501" width="0.0656%" height="15" fill="rgb(249,107,4)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="485" width="0.0656%" height="15" fill="rgb(227,7,13)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="495.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="469" width="0.0656%" height="15" fill="rgb(250,129,14)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="479.50"></text></g><g><title>rustc_traits::dropck_outlives::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="453" width="0.0656%" height="15" fill="rgb(229,92,13)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="463.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.07%)</title><rect x="88.3858%" y="437" width="0.0656%" height="15" fill="rgb(245,98,39)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="447.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="421" width="0.0656%" height="15" fill="rgb(234,135,48)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="431.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="405" width="0.0656%" height="15" fill="rgb(230,98,28)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="415.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::adt_dtorck_constraint, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="389" width="0.0656%" height="15" fill="rgb(223,121,0)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="399.50"></text></g><g><title>rustc_traits::dropck_outlives::adt_dtorck_constraint (1 samples, 0.07%)</title><rect x="88.3858%" y="373" width="0.0656%" height="15" fill="rgb(234,173,33)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="383.50"></text></g><g><title>&lt;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;::identity_for_item::&lt;rustc_span::def_id::DefId&gt; (1 samples, 0.07%)</title><rect x="88.3858%" y="357" width="0.0656%" height="15" fill="rgb(245,47,8)" fg:x="1347" fg:w="1"/><text x="88.6358%" y="367.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="869" width="0.0656%" height="15" fill="rgb(205,17,20)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="879.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="853" width="0.0656%" height="15" fill="rgb(232,151,16)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="863.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="88.4514%" y="837" width="0.0656%" height="15" fill="rgb(208,30,32)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="847.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="821" width="0.0656%" height="15" fill="rgb(254,26,3)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="831.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="805" width="0.0656%" height="15" fill="rgb(240,177,30)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="815.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="789" width="0.0656%" height="15" fill="rgb(248,76,44)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="799.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::build_generic_type_param_di_nodes (1 samples, 0.07%)</title><rect x="88.4514%" y="773" width="0.0656%" height="15" fill="rgb(241,186,54)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="783.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;, alloc::vec::into_iter::IntoIter&lt;rustc_span::symbol::Symbol&gt;&gt;, rustc_codegen_llvm::debuginfo::metadata::build_generic_type_param_di_nodes::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="757" width="0.0656%" height="15" fill="rgb(249,171,29)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="767.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="741" width="0.0656%" height="15" fill="rgb(237,151,44)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="751.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="725" width="0.0656%" height="15" fill="rgb(228,174,30)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="735.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4514%" y="709" width="0.0656%" height="15" fill="rgb(252,14,37)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="719.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="693" width="0.0656%" height="15" fill="rgb(207,111,40)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="703.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="677" width="0.0656%" height="15" fill="rgb(248,171,54)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="88.4514%" y="661" width="0.0656%" height="15" fill="rgb(211,127,2)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="671.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="645" width="0.0656%" height="15" fill="rgb(236,87,47)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="655.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="629" width="0.0656%" height="15" fill="rgb(223,190,45)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="639.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="613" width="0.0656%" height="15" fill="rgb(215,5,16)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="623.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;(usize,)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4514%" y="597" width="0.0656%" height="15" fill="rgb(252,82,33)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="607.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="581" width="0.0656%" height="15" fill="rgb(247,213,44)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="591.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="565" width="0.0656%" height="15" fill="rgb(205,196,44)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="575.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4514%" y="549" width="0.0656%" height="15" fill="rgb(237,96,54)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="559.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="533" width="0.0656%" height="15" fill="rgb(230,113,34)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="543.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="517" width="0.0656%" height="15" fill="rgb(221,224,12)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="527.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4514%" y="501" width="0.0656%" height="15" fill="rgb(219,112,44)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="511.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="485" width="0.0656%" height="15" fill="rgb(210,31,13)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="495.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="88.4514%" y="469" width="0.0656%" height="15" fill="rgb(230,25,16)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="479.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[core::option::Option&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Metadata&gt;: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[core::option::Option&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Metadata&gt;: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::build_c_style_enum_di_node::{closure#0}&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::build_enumeration_type_di_node&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::build_c_style_enum_di_node::{closure#0}&gt;&gt;::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="453" width="0.0656%" height="15" fill="rgb(246,108,53)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="463.50"></text></g><g><title>&lt;&amp;mut &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0} as core::ops::function::FnOnce&lt;((rustc_abi::VariantIdx, &amp;rustc_middle::ty::VariantDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.4514%" y="437" width="0.0656%" height="15" fill="rgb(241,172,50)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="447.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::const_eval_poly (1 samples, 0.07%)</title><rect x="88.4514%" y="421" width="0.0656%" height="15" fill="rgb(235,141,10)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="431.50"></text></g><g><title>&lt;rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind&gt;::read_deps::&lt;&lt;rustc_query_system::dep_graph::graph::DepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::read_index::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="88.4514%" y="405" width="0.0656%" height="15" fill="rgb(220,174,43)" fg:x="1348" fg:w="1"/><text x="88.7014%" y="415.50"></text></g><g><title>rustc_codegen_ssa::back::link::link_binary (1 samples, 0.07%)</title><rect x="88.5171%" y="869" width="0.0656%" height="15" fill="rgb(215,181,40)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="879.50"></text></g><g><title>rustc_codegen_ssa::back::link::link_natively (1 samples, 0.07%)</title><rect x="88.5171%" y="853" width="0.0656%" height="15" fill="rgb(230,97,2)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="863.50"></text></g><g><title>&lt;regex::re_unicode::Regex&gt;::new (1 samples, 0.07%)</title><rect x="88.5171%" y="837" width="0.0656%" height="15" fill="rgb(211,25,27)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="847.50"></text></g><g><title>&lt;regex::exec::ExecBuilder&gt;::build (1 samples, 0.07%)</title><rect x="88.5171%" y="821" width="0.0656%" height="15" fill="rgb(230,87,26)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="831.50"></text></g><g><title>&lt;regex::exec::ExecReadOnly&gt;::new_pool::{closure#0} (1 samples, 0.07%)</title><rect x="88.5171%" y="805" width="0.0656%" height="15" fill="rgb(227,160,17)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="815.50"></text></g><g><title>&lt;regex::dfa::Cache&gt;::new (1 samples, 0.07%)</title><rect x="88.5171%" y="789" width="0.0656%" height="15" fill="rgb(244,85,34)" fg:x="1349" fg:w="1"/><text x="88.7671%" y="799.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods&gt;::compile_codegen_unit (1 samples, 0.07%)</title><rect x="88.5827%" y="853" width="0.0656%" height="15" fill="rgb(207,70,0)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="863.50"></text></g><g><title>rustc_codegen_llvm::base::compile_codegen_unit::module_codegen (1 samples, 0.07%)</title><rect x="88.5827%" y="837" width="0.0656%" height="15" fill="rgb(223,129,7)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="847.50"></text></g><g><title>rustc_codegen_ssa::mir::codegen_mir::&lt;rustc_codegen_llvm::builder::Builder&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="821" width="0.0656%" height="15" fill="rgb(246,105,7)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="831.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (1 samples, 0.07%)</title><rect x="88.5827%" y="805" width="0.0656%" height="15" fill="rgb(215,154,42)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="815.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.5827%" y="789" width="0.0656%" height="15" fill="rgb(220,215,30)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="799.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="88.5827%" y="773" width="0.0656%" height="15" fill="rgb(228,81,51)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="783.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="88.5827%" y="757" width="0.0656%" height="15" fill="rgb(247,71,54)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="767.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="741" width="0.0656%" height="15" fill="rgb(234,176,34)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="751.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="725" width="0.0656%" height="15" fill="rgb(241,103,54)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="735.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="709" width="0.0656%" height="15" fill="rgb(228,22,34)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="719.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::build_generic_type_param_di_nodes (1 samples, 0.07%)</title><rect x="88.5827%" y="693" width="0.0656%" height="15" fill="rgb(241,179,48)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[&amp;rustc_codegen_llvm::llvm_::ffi::Metadata: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;, alloc::vec::into_iter::IntoIter&lt;rustc_span::symbol::Symbol&gt;&gt;, rustc_codegen_llvm::debuginfo::metadata::build_generic_type_param_di_nodes::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="677" width="0.0656%" height="15" fill="rgb(235,167,37)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="687.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.5827%" y="661" width="0.0656%" height="15" fill="rgb(213,109,30)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="671.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="645" width="0.0656%" height="15" fill="rgb(222,172,16)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="655.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::debuginfo::metadata::build_struct_type_di_node::{closure#0}::{closure#0} as core::ops::function::FnOnce&lt;((usize, &amp;rustc_middle::ty::FieldDef),)&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="88.5827%" y="629" width="0.0656%" height="15" fill="rgb(233,192,5)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="639.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_di_node (1 samples, 0.07%)</title><rect x="88.5827%" y="613" width="0.0656%" height="15" fill="rgb(247,189,41)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="623.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_type_di_node (1 samples, 0.07%)</title><rect x="88.5827%" y="597" width="0.0656%" height="15" fill="rgb(218,134,47)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="607.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}, for&lt;&apos;a, &apos;b, &apos;c&gt; fn(&amp;&apos;a rustc_codegen_llvm::context::CodegenCx&lt;&apos;b, &apos;c&gt;)  (1 samples, 0.07%)</title><rect x="88.5827%" y="581" width="0.0656%" height="15" fill="rgb(216,29,3)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="591.50"></text></g><g><title> smallvec::SmallVec&lt;[&amp;&apos;b rustc_codegen_llvm::llvm_::ffi::Metadata: 16]&gt;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="565" width="0.0656%" height="15" fill="rgb(246,140,12)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="575.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16]&gt; as core::iter::traits::collect::Extend&lt;&lt;[rustc_codegen_llvm::debuginfo::metadata::enums::native::VariantMemberInfo: 16] as smallvec::Array&gt;::Item&gt;&gt;::extend::&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;rustc_abi::VariantIdx&gt;, rustc_codegen_llvm::debuginfo::metadata::enums::native::build_enum_type_di_node::{closure#0}::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="549" width="0.0656%" height="15" fill="rgb(230,136,11)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="559.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::metadata::type_map::build_type_with_children::&lt;rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#0}, rustc_codegen_llvm::debuginfo::metadata::enums::build_enum_variant_struct_type_di_node::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="533" width="0.0656%" height="15" fill="rgb(247,22,47)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="543.50"></text></g><g><title>LLVMRustDICompositeTypeReplaceArrays (1 samples, 0.07%)</title><rect x="88.5827%" y="517" width="0.0656%" height="15" fill="rgb(218,84,22)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="527.50"></text></g><g><title>llvm::DIBuilder::replaceArrays (1 samples, 0.07%)</title><rect x="88.5827%" y="501" width="0.0656%" height="15" fill="rgb(216,87,39)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="511.50"></text></g><g><title>llvm::MDNode::handleChangedOperand (1 samples, 0.07%)</title><rect x="88.5827%" y="485" width="0.0656%" height="15" fill="rgb(221,178,8)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="495.50"></text></g><g><title>llvm::MDNode::uniquify (1 samples, 0.07%)</title><rect x="88.5827%" y="469" width="0.0656%" height="15" fill="rgb(230,42,11)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="479.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;, llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DICompositeType&gt;, llvm::detail::DenseSetPair&lt;llvm::DICompositeType*&gt; &gt;::try_emplace&lt;llvm::detail::DenseSetEmpty&amp;&gt; (1 samples, 0.07%)</title><rect x="88.5827%" y="453" width="0.0656%" height="15" fill="rgb(237,229,4)" fg:x="1350" fg:w="1"/><text x="88.8327%" y="463.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="88.6483%" y="629" width="0.0656%" height="15" fill="rgb(222,31,33)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="88.6483%" y="613" width="0.0656%" height="15" fill="rgb(210,17,39)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="88.6483%" y="597" width="0.0656%" height="15" fill="rgb(244,93,20)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="607.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="88.6483%" y="581" width="0.0656%" height="15" fill="rgb(210,40,47)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="591.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_drop_in_place (1 samples, 0.07%)</title><rect x="88.6483%" y="565" width="0.0656%" height="15" fill="rgb(239,211,47)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::resolve_instance (1 samples, 0.07%)</title><rect x="88.6483%" y="549" width="0.0656%" height="15" fill="rgb(251,223,49)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.6483%" y="533" width="0.0656%" height="15" fill="rgb(221,149,5)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.6483%" y="517" width="0.0656%" height="15" fill="rgb(219,224,51)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="527.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="88.6483%" y="501" width="0.0656%" height="15" fill="rgb(223,7,8)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="511.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="88.6483%" y="485" width="0.0656%" height="15" fill="rgb(241,217,22)" fg:x="1351" fg:w="1"/><text x="88.8983%" y="495.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="88.6483%" y="645" width="0.1312%" height="15" fill="rgb(248,209,0)" fg:x="1351" fg:w="2"/><text x="88.8983%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="88.7139%" y="629" width="0.0656%" height="15" fill="rgb(217,205,4)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.7139%" y="613" width="0.0656%" height="15" fill="rgb(228,124,39)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.7139%" y="597" width="0.0656%" height="15" fill="rgb(250,116,42)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="607.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir (1 samples, 0.07%)</title><rect x="88.7139%" y="581" width="0.0656%" height="15" fill="rgb(223,202,9)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="591.50"></text></g><g><title>&lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="565" width="0.0656%" height="15" fill="rgb(242,222,40)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::BasicBlockData&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="549" width="0.0656%" height="15" fill="rgb(229,99,46)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::Statement&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="533" width="0.0656%" height="15" fill="rgb(225,56,46)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="543.50"></text></g><g><title>&lt;rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="517" width="0.0656%" height="15" fill="rgb(227,94,5)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="527.50"></text></g><g><title>&lt;rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="501" width="0.0656%" height="15" fill="rgb(205,112,38)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="511.50"></text></g><g><title>&lt;rustc_span::hygiene::ExpnData as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="485" width="0.0656%" height="15" fill="rgb(231,133,46)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="495.50"></text></g><g><title>&lt;rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="469" width="0.0656%" height="15" fill="rgb(217,16,9)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="479.50"></text></g><g><title>&lt;rustc_span::SourceFile as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.7139%" y="453" width="0.0656%" height="15" fill="rgb(249,173,9)" fg:x="1352" fg:w="1"/><text x="88.9639%" y="463.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (4 samples, 0.26%)</title><rect x="88.6483%" y="677" width="0.2625%" height="15" fill="rgb(205,163,53)" fg:x="1351" fg:w="4"/><text x="88.8983%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (4 samples, 0.26%)</title><rect x="88.6483%" y="661" width="0.2625%" height="15" fill="rgb(217,54,41)" fg:x="1351" fg:w="4"/><text x="88.8983%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (2 samples, 0.13%)</title><rect x="88.7795%" y="645" width="0.1312%" height="15" fill="rgb(228,216,12)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="629" width="0.1312%" height="15" fill="rgb(244,228,15)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="613" width="0.1312%" height="15" fill="rgb(221,176,53)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="623.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (2 samples, 0.13%)</title><rect x="88.7795%" y="597" width="0.1312%" height="15" fill="rgb(205,94,34)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (2 samples, 0.13%)</title><rect x="88.7795%" y="581" width="0.1312%" height="15" fill="rgb(213,110,48)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (2 samples, 0.13%)</title><rect x="88.7795%" y="565" width="0.1312%" height="15" fill="rgb(236,142,28)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="549" width="0.1312%" height="15" fill="rgb(225,135,29)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="533" width="0.1312%" height="15" fill="rgb(252,45,31)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="543.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (2 samples, 0.13%)</title><rect x="88.7795%" y="517" width="0.1312%" height="15" fill="rgb(211,187,50)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="501" width="0.1312%" height="15" fill="rgb(229,109,7)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="88.7795%" y="485" width="0.1312%" height="15" fill="rgb(251,131,51)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="495.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (2 samples, 0.13%)</title><rect x="88.7795%" y="469" width="0.1312%" height="15" fill="rgb(251,180,35)" fg:x="1353" fg:w="2"/><text x="89.0295%" y="479.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="88.8451%" y="453" width="0.0656%" height="15" fill="rgb(211,46,32)" fg:x="1354" fg:w="1"/><text x="89.0951%" y="463.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (5 samples, 0.33%)</title><rect x="88.6483%" y="709" width="0.3281%" height="15" fill="rgb(248,123,17)" fg:x="1351" fg:w="5"/><text x="88.8983%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (5 samples, 0.33%)</title><rect x="88.6483%" y="693" width="0.3281%" height="15" fill="rgb(227,141,18)" fg:x="1351" fg:w="5"/><text x="88.8983%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="88.9108%" y="677" width="0.0656%" height="15" fill="rgb(216,102,9)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="687.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::const_eval_resolve (1 samples, 0.07%)</title><rect x="88.9108%" y="661" width="0.0656%" height="15" fill="rgb(253,47,13)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="671.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_const_value_raw (1 samples, 0.07%)</title><rect x="88.9108%" y="645" width="0.0656%" height="15" fill="rgb(226,93,23)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="629" width="0.0656%" height="15" fill="rgb(247,104,17)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="613" width="0.0656%" height="15" fill="rgb(233,203,26)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="623.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="88.9108%" y="597" width="0.0656%" height="15" fill="rgb(244,98,49)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="581" width="0.0656%" height="15" fill="rgb(235,134,22)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="565" width="0.0656%" height="15" fill="rgb(221,70,32)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="575.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="88.9108%" y="549" width="0.0656%" height="15" fill="rgb(238,15,50)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_allocation_raw (1 samples, 0.07%)</title><rect x="88.9108%" y="533" width="0.0656%" height="15" fill="rgb(215,221,48)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="517" width="0.0656%" height="15" fill="rgb(236,73,3)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9108%" y="501" width="0.0656%" height="15" fill="rgb(250,107,11)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="511.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider (1 samples, 0.07%)</title><rect x="88.9108%" y="485" width="0.0656%" height="15" fill="rgb(242,39,14)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="495.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::validate_operand_internal (1 samples, 0.07%)</title><rect x="88.9108%" y="469" width="0.0656%" height="15" fill="rgb(248,164,37)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="479.50"></text></g><g><title>&lt;rustc_const_eval::interpret::validity::ValidityVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::try_visit_primitive (1 samples, 0.07%)</title><rect x="88.9108%" y="453" width="0.0656%" height="15" fill="rgb(217,60,12)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="463.50"></text></g><g><title>&lt;rustc_const_eval::interpret::validity::ValidityVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::check_safe_pointer (1 samples, 0.07%)</title><rect x="88.9108%" y="437" width="0.0656%" height="15" fill="rgb(240,125,29)" fg:x="1355" fg:w="1"/><text x="89.1608%" y="447.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (7 samples, 0.46%)</title><rect x="88.5827%" y="869" width="0.4593%" height="15" fill="rgb(208,207,28)" fg:x="1350" fg:w="7"/><text x="88.8327%" y="879.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::collect_and_partition_mono_items (6 samples, 0.39%)</title><rect x="88.6483%" y="853" width="0.3937%" height="15" fill="rgb(209,159,27)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="863.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (6 samples, 0.39%)</title><rect x="88.6483%" y="837" width="0.3937%" height="15" fill="rgb(251,176,53)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="847.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (6 samples, 0.39%)</title><rect x="88.6483%" y="821" width="0.3937%" height="15" fill="rgb(211,85,7)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="831.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (6 samples, 0.39%)</title><rect x="88.6483%" y="805" width="0.3937%" height="15" fill="rgb(216,64,54)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="815.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (6 samples, 0.39%)</title><rect x="88.6483%" y="789" width="0.3937%" height="15" fill="rgb(217,54,24)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="799.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (6 samples, 0.39%)</title><rect x="88.6483%" y="773" width="0.3937%" height="15" fill="rgb(208,206,53)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="783.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (6 samples, 0.39%)</title><rect x="88.6483%" y="757" width="0.3937%" height="15" fill="rgb(251,74,39)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="767.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (6 samples, 0.39%)</title><rect x="88.6483%" y="741" width="0.3937%" height="15" fill="rgb(226,47,5)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="751.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (6 samples, 0.39%)</title><rect x="88.6483%" y="725" width="0.3937%" height="15" fill="rgb(234,111,33)" fg:x="1351" fg:w="6"/><text x="88.8983%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="88.9764%" y="709" width="0.0656%" height="15" fill="rgb(251,14,10)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="719.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::const_eval_resolve (1 samples, 0.07%)</title><rect x="88.9764%" y="693" width="0.0656%" height="15" fill="rgb(232,43,0)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="703.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_const_value_raw (1 samples, 0.07%)</title><rect x="88.9764%" y="677" width="0.0656%" height="15" fill="rgb(222,68,43)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="687.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="661" width="0.0656%" height="15" fill="rgb(217,24,23)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="671.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="645" width="0.0656%" height="15" fill="rgb(229,209,14)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="655.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="88.9764%" y="629" width="0.0656%" height="15" fill="rgb(250,149,48)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="613" width="0.0656%" height="15" fill="rgb(210,120,37)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="597" width="0.0656%" height="15" fill="rgb(210,21,8)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="607.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="88.9764%" y="581" width="0.0656%" height="15" fill="rgb(243,145,7)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_allocation_raw (1 samples, 0.07%)</title><rect x="88.9764%" y="565" width="0.0656%" height="15" fill="rgb(238,178,32)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="549" width="0.0656%" height="15" fill="rgb(222,4,10)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="88.9764%" y="533" width="0.0656%" height="15" fill="rgb(239,7,37)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="543.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider (1 samples, 0.07%)</title><rect x="88.9764%" y="517" width="0.0656%" height="15" fill="rgb(215,31,37)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="527.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::statement (1 samples, 0.07%)</title><rect x="88.9764%" y="501" width="0.0656%" height="15" fill="rgb(224,83,33)" fg:x="1356" fg:w="1"/><text x="89.2264%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeChecker&gt;::typeck_mir (1 samples, 0.07%)</title><rect x="89.0420%" y="725" width="0.0656%" height="15" fill="rgb(239,55,3)" fg:x="1357" fg:w="1"/><text x="89.2920%" y="735.50"></text></g><g><title>rustc_middle::ty::relate::super_relate_tys::&lt;rustc_infer::infer::nll_relate::TypeRelating&lt;rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate&gt;&gt; (1 samples, 0.07%)</title><rect x="89.0420%" y="709" width="0.0656%" height="15" fill="rgb(247,92,11)" fg:x="1357" fg:w="1"/><text x="89.2920%" y="719.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (1 samples, 0.07%)</title><rect x="89.0420%" y="693" width="0.0656%" height="15" fill="rgb(239,200,7)" fg:x="1357" fg:w="1"/><text x="89.2920%" y="703.50"></text></g><g><title>rustc_interface::passes::analysis (2 samples, 0.13%)</title><rect x="89.0420%" y="869" width="0.1312%" height="15" fill="rgb(227,115,8)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="879.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_interface::passes::analysis::{closure#2}&gt; (2 samples, 0.13%)</title><rect x="89.0420%" y="853" width="0.1312%" height="15" fill="rgb(215,189,27)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="863.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;&amp;[rustc_span::def_id::LocalDefId], &lt;rustc_middle::hir::map::Map&gt;::par_body_owners&lt;rustc_interface::passes::analysis::{closure#2}::{closure#0}&gt;::{closure#0}&gt; (2 samples, 0.13%)</title><rect x="89.0420%" y="837" width="0.1312%" height="15" fill="rgb(251,216,39)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="89.0420%" y="821" width="0.1312%" height="15" fill="rgb(207,29,47)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="89.0420%" y="805" width="0.1312%" height="15" fill="rgb(210,71,34)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="815.50"></text></g><g><title>&lt;rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce&lt;(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)&gt;&gt;::call_once (2 samples, 0.13%)</title><rect x="89.0420%" y="789" width="0.1312%" height="15" fill="rgb(253,217,51)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="799.50"></text></g><g><title>rustc_borrowck::mir_borrowck (2 samples, 0.13%)</title><rect x="89.0420%" y="773" width="0.1312%" height="15" fill="rgb(222,117,46)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="783.50"></text></g><g><title>rustc_borrowck::do_mir_borrowck (2 samples, 0.13%)</title><rect x="89.0420%" y="757" width="0.1312%" height="15" fill="rgb(226,132,6)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="767.50"></text></g><g><title>rustc_borrowck::nll::compute_regions (2 samples, 0.13%)</title><rect x="89.0420%" y="741" width="0.1312%" height="15" fill="rgb(254,145,51)" fg:x="1357" fg:w="2"/><text x="89.2920%" y="751.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_body (1 samples, 0.07%)</title><rect x="89.1076%" y="725" width="0.0656%" height="15" fill="rgb(231,199,27)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="735.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_operand (1 samples, 0.07%)</title><rect x="89.1076%" y="709" width="0.0656%" height="15" fill="rgb(245,158,14)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="719.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_type_ir::visit::TypeSuperVisitable&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::super_visit_with::&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::any_free_region_meets::RegionVisitor&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_free_region&lt;rustc_middle::ty::Ty, &lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_constant::{closure#0}&gt;::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="89.1076%" y="693" width="0.0656%" height="15" fill="rgb(240,113,14)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="703.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_type_ir::visit::TypeSuperVisitable&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::super_visit_with::&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::any_free_region_meets::RegionVisitor&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_free_region&lt;rustc_middle::ty::Ty, &lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_constant::{closure#0}&gt;::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="89.1076%" y="677" width="0.0656%" height="15" fill="rgb(210,20,13)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="687.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_type_ir::visit::TypeSuperVisitable&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;::super_visit_with::&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::any_free_region_meets::RegionVisitor&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_free_region&lt;rustc_middle::ty::Ty, &lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_constant::{closure#0}&gt;::{closure#0}&gt;&gt; (1 samples, 0.07%)</title><rect x="89.1076%" y="661" width="0.0656%" height="15" fill="rgb(241,144,13)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow::&lt;alloc::alloc::Global&gt; (1 samples, 0.07%)</title><rect x="89.1076%" y="645" width="0.0656%" height="15" fill="rgb(235,43,34)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="655.50"></text></g><g><title>do_rallocx (1 samples, 0.07%)</title><rect x="89.1076%" y="629" width="0.0656%" height="15" fill="rgb(208,36,20)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="639.50"></text></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.07%)</title><rect x="89.1076%" y="613" width="0.0656%" height="15" fill="rgb(239,204,10)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="623.50"></text></g><g><title>rtree_metadata_read (1 samples, 0.07%)</title><rect x="89.1076%" y="597" width="0.0656%" height="15" fill="rgb(217,84,43)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="607.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.07%)</title><rect x="89.1076%" y="581" width="0.0656%" height="15" fill="rgb(241,170,50)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="591.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.07%)</title><rect x="89.1076%" y="565" width="0.0656%" height="15" fill="rgb(226,205,29)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="575.50"></text></g><g><title>atomic_load_p (1 samples, 0.07%)</title><rect x="89.1076%" y="549" width="0.0656%" height="15" fill="rgb(233,113,1)" fg:x="1358" fg:w="1"/><text x="89.3576%" y="559.50"></text></g><g><title>rustc_interface::util::create_session (1 samples, 0.07%)</title><rect x="89.1732%" y="869" width="0.0656%" height="15" fill="rgb(253,98,13)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="879.50"></text></g><g><title>rustc_session::session::build_session (1 samples, 0.07%)</title><rect x="89.1732%" y="853" width="0.0656%" height="15" fill="rgb(211,115,12)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="863.50"></text></g><g><title>&lt;rustc_session::search_paths::SearchPath&gt;::new (1 samples, 0.07%)</title><rect x="89.1732%" y="837" width="0.0656%" height="15" fill="rgb(208,12,16)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_session::search_paths::SearchPathFile&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_session::search_paths::SearchPathFile, core::iter::adapters::filter_map::FilterMap&lt;std::fs::ReadDir, &lt;rustc_session::search_paths::SearchPath&gt;::new::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="89.1732%" y="821" width="0.0656%" height="15" fill="rgb(237,193,54)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="831.50"></text></g><g><title>&lt;&amp;mut &lt;rustc_session::search_paths::SearchPath&gt;::new::{closure#0} as core::ops::function::FnMut&lt;(core::result::Result&lt;std::fs::DirEntry, std::io::error::Error&gt;,)&gt;&gt;::call_mut (1 samples, 0.07%)</title><rect x="89.1732%" y="805" width="0.0656%" height="15" fill="rgb(243,22,42)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="815.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.07%)</title><rect x="89.1732%" y="789" width="0.0656%" height="15" fill="rgb(233,151,36)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="799.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.07%)</title><rect x="89.1732%" y="773" width="0.0656%" height="15" fill="rgb(237,57,45)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="783.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.07%)</title><rect x="89.1732%" y="757" width="0.0656%" height="15" fill="rgb(221,88,17)" fg:x="1359" fg:w="1"/><text x="89.4232%" y="767.50"></text></g><g><title>rustc_mir_build::build::mir_built (1 samples, 0.07%)</title><rect x="89.2388%" y="869" width="0.0656%" height="15" fill="rgb(230,79,15)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="879.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="89.2388%" y="853" width="0.0656%" height="15" fill="rgb(213,57,13)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="863.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="89.2388%" y="837" width="0.0656%" height="15" fill="rgb(222,116,39)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="847.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="89.2388%" y="821" width="0.0656%" height="15" fill="rgb(245,107,2)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="831.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::ast_block (1 samples, 0.07%)</title><rect x="89.2388%" y="805" width="0.0656%" height="15" fill="rgb(238,1,10)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="815.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::ast_block_stmts (1 samples, 0.07%)</title><rect x="89.2388%" y="789" width="0.0656%" height="15" fill="rgb(249,4,48)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="799.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::stmt_expr (1 samples, 0.07%)</title><rect x="89.2388%" y="773" width="0.0656%" height="15" fill="rgb(223,151,18)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="783.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::stmt_expr (1 samples, 0.07%)</title><rect x="89.2388%" y="757" width="0.0656%" height="15" fill="rgb(227,65,43)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="767.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_temp_inner (1 samples, 0.07%)</title><rect x="89.2388%" y="741" width="0.0656%" height="15" fill="rgb(218,40,45)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="751.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="89.2388%" y="725" width="0.0656%" height="15" fill="rgb(252,121,31)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="735.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="89.2388%" y="709" width="0.0656%" height="15" fill="rgb(219,158,43)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="719.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_call_operand (1 samples, 0.07%)</title><rect x="89.2388%" y="693" width="0.0656%" height="15" fill="rgb(231,162,42)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="703.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::as_operand (1 samples, 0.07%)</title><rect x="89.2388%" y="677" width="0.0656%" height="15" fill="rgb(217,179,25)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="687.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::expr_into_dest (1 samples, 0.07%)</title><rect x="89.2388%" y="661" width="0.0656%" height="15" fill="rgb(206,212,31)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="671.50"></text></g><g><title>&lt;rustc_mir_build::build::expr::as_place::PlaceBuilder&gt;::to_place (1 samples, 0.07%)</title><rect x="89.2388%" y="645" width="0.0656%" height="15" fill="rgb(235,144,12)" fg:x="1360" fg:w="1"/><text x="89.4888%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="89.3045%" y="725" width="0.0656%" height="15" fill="rgb(213,51,10)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="89.3045%" y="709" width="0.0656%" height="15" fill="rgb(231,145,14)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="89.3045%" y="693" width="0.0656%" height="15" fill="rgb(235,15,28)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="89.3045%" y="677" width="0.0656%" height="15" fill="rgb(237,206,10)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="89.3045%" y="661" width="0.0656%" height="15" fill="rgb(236,227,27)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.3045%" y="645" width="0.0656%" height="15" fill="rgb(246,83,35)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.3045%" y="629" width="0.0656%" height="15" fill="rgb(220,136,24)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="639.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="89.3045%" y="613" width="0.0656%" height="15" fill="rgb(217,3,25)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="623.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="89.3045%" y="597" width="0.0656%" height="15" fill="rgb(239,24,14)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="607.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="89.3045%" y="581" width="0.0656%" height="15" fill="rgb(244,16,53)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.3045%" y="565" width="0.0656%" height="15" fill="rgb(208,175,44)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="575.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.3045%" y="549" width="0.0656%" height="15" fill="rgb(252,18,48)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="559.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::CurrentDepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::intern_node (1 samples, 0.07%)</title><rect x="89.3045%" y="533" width="0.0656%" height="15" fill="rgb(234,199,32)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="543.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="89.3045%" y="517" width="0.0656%" height="15" fill="rgb(225,77,54)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="527.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="89.3045%" y="501" width="0.0656%" height="15" fill="rgb(225,42,25)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="511.50"></text></g><g><title>sz_index2size (1 samples, 0.07%)</title><rect x="89.3045%" y="485" width="0.0656%" height="15" fill="rgb(242,227,46)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="495.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.07%)</title><rect x="89.3045%" y="469" width="0.0656%" height="15" fill="rgb(246,197,35)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="479.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.07%)</title><rect x="89.3045%" y="453" width="0.0656%" height="15" fill="rgb(215,159,26)" fg:x="1361" fg:w="1"/><text x="89.5545%" y="463.50"></text></g><g><title>rustc_query_system::dep_graph::graph::hash_result::&lt;&amp;rustc_middle::traits::specialization_graph::Graph&gt; (1 samples, 0.07%)</title><rect x="89.3701%" y="469" width="0.0656%" height="15" fill="rgb(212,194,50)" fg:x="1362" fg:w="1"/><text x="89.6201%" y="479.50"></text></g><g><title>rustc_data_structures::unord::hash_iter_order_independent::&lt;rustc_query_system::ich::hcx::StableHashingContext, (&amp;rustc_span::def_id::DefId, &amp;rustc_middle::traits::specialization_graph::Children), std::collections::hash::map::Iter&lt;rustc_span::def_id::DefId, rustc_middle::traits::specialization_graph::Children&gt;&gt; (1 samples, 0.07%)</title><rect x="89.3701%" y="453" width="0.0656%" height="15" fill="rgb(246,132,1)" fg:x="1362" fg:w="1"/><text x="89.6201%" y="463.50"></text></g><g><title>&lt;(&amp;rustc_span::def_id::DefId, &amp;rustc_middle::traits::specialization_graph::Children) as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="89.3701%" y="437" width="0.0656%" height="15" fill="rgb(217,71,7)" fg:x="1362" fg:w="1"/><text x="89.6201%" y="447.50"></text></g><g><title>&lt;(&amp;rustc_middle::ty::fast_reject::SimplifiedType, &amp;alloc::vec::Vec&lt;rustc_span::def_id::DefId&gt;) as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.07%)</title><rect x="89.3701%" y="421" width="0.0656%" height="15" fill="rgb(252,59,32)" fg:x="1362" fg:w="1"/><text x="89.6201%" y="431.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (2 samples, 0.13%)</title><rect x="89.3701%" y="709" width="0.1312%" height="15" fill="rgb(253,204,25)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="719.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="693" width="0.1312%" height="15" fill="rgb(232,21,16)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="677" width="0.1312%" height="15" fill="rgb(248,90,29)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="687.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (2 samples, 0.13%)</title><rect x="89.3701%" y="661" width="0.1312%" height="15" fill="rgb(249,223,7)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="671.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (2 samples, 0.13%)</title><rect x="89.3701%" y="645" width="0.1312%" height="15" fill="rgb(231,119,42)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="629" width="0.1312%" height="15" fill="rgb(215,41,35)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="639.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (2 samples, 0.13%)</title><rect x="89.3701%" y="613" width="0.1312%" height="15" fill="rgb(220,44,45)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="623.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (2 samples, 0.13%)</title><rect x="89.3701%" y="597" width="0.1312%" height="15" fill="rgb(253,197,36)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="581" width="0.1312%" height="15" fill="rgb(245,225,54)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="565" width="0.1312%" height="15" fill="rgb(239,94,37)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="575.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (2 samples, 0.13%)</title><rect x="89.3701%" y="549" width="0.1312%" height="15" fill="rgb(242,217,10)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="559.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (2 samples, 0.13%)</title><rect x="89.3701%" y="533" width="0.1312%" height="15" fill="rgb(250,193,7)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="543.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (2 samples, 0.13%)</title><rect x="89.3701%" y="517" width="0.1312%" height="15" fill="rgb(230,104,19)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="501" width="0.1312%" height="15" fill="rgb(230,181,4)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="89.3701%" y="485" width="0.1312%" height="15" fill="rgb(216,219,49)" fg:x="1362" fg:w="2"/><text x="89.6201%" y="495.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="89.4357%" y="469" width="0.0656%" height="15" fill="rgb(254,144,0)" fg:x="1363" fg:w="1"/><text x="89.6857%" y="479.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.4357%" y="453" width="0.0656%" height="15" fill="rgb(205,209,38)" fg:x="1363" fg:w="1"/><text x="89.6857%" y="463.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::dep_node::DepNode&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::construct::&lt;rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId&gt; (1 samples, 0.07%)</title><rect x="89.4357%" y="437" width="0.0656%" height="15" fill="rgb(240,21,42)" fg:x="1363" fg:w="1"/><text x="89.6857%" y="447.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::finish128 (1 samples, 0.07%)</title><rect x="89.5669%" y="469" width="0.0656%" height="15" fill="rgb(241,132,3)" fg:x="1365" fg:w="1"/><text x="89.8169%" y="479.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (7 samples, 0.46%)</title><rect x="89.3045%" y="741" width="0.4593%" height="15" fill="rgb(225,14,2)" fg:x="1361" fg:w="7"/><text x="89.5545%" y="751.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (6 samples, 0.39%)</title><rect x="89.3701%" y="725" width="0.3937%" height="15" fill="rgb(210,141,35)" fg:x="1362" fg:w="6"/><text x="89.6201%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="709" width="0.2625%" height="15" fill="rgb(251,14,44)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="693" width="0.2625%" height="15" fill="rgb(247,48,18)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="703.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (4 samples, 0.26%)</title><rect x="89.5013%" y="677" width="0.2625%" height="15" fill="rgb(225,0,40)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="687.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (4 samples, 0.26%)</title><rect x="89.5013%" y="661" width="0.2625%" height="15" fill="rgb(221,31,33)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="671.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (4 samples, 0.26%)</title><rect x="89.5013%" y="645" width="0.2625%" height="15" fill="rgb(237,42,40)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="629" width="0.2625%" height="15" fill="rgb(233,51,29)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="613" width="0.2625%" height="15" fill="rgb(226,58,20)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="623.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (4 samples, 0.26%)</title><rect x="89.5013%" y="597" width="0.2625%" height="15" fill="rgb(208,98,7)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="581" width="0.2625%" height="15" fill="rgb(228,143,44)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (4 samples, 0.26%)</title><rect x="89.5013%" y="565" width="0.2625%" height="15" fill="rgb(246,55,38)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="575.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (4 samples, 0.26%)</title><rect x="89.5013%" y="549" width="0.2625%" height="15" fill="rgb(247,87,16)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="559.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (4 samples, 0.26%)</title><rect x="89.5013%" y="533" width="0.2625%" height="15" fill="rgb(234,129,42)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="543.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (4 samples, 0.26%)</title><rect x="89.5013%" y="517" width="0.2625%" height="15" fill="rgb(220,82,16)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="527.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (4 samples, 0.26%)</title><rect x="89.5013%" y="501" width="0.2625%" height="15" fill="rgb(211,88,4)" fg:x="1364" fg:w="4"/><text x="89.7513%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::adt::AdtDefData as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (3 samples, 0.20%)</title><rect x="89.5669%" y="485" width="0.1969%" height="15" fill="rgb(248,151,21)" fg:x="1365" fg:w="3"/><text x="89.8169%" y="495.50"></text></g><g><title>&lt;rustc_index::vec::IndexVec&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (2 samples, 0.13%)</title><rect x="89.6325%" y="469" width="0.1312%" height="15" fill="rgb(238,163,6)" fg:x="1366" fg:w="2"/><text x="89.8825%" y="479.50"></text></g><g><title>&lt;rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore&gt;::def_path_hash (2 samples, 0.13%)</title><rect x="89.6325%" y="453" width="0.1312%" height="15" fill="rgb(209,183,11)" fg:x="1366" fg:w="2"/><text x="89.8825%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::def_id::DefIndex, rustc_span::def_id::DefPathHash)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::def_id::DefIndex, rustc_span::def_id::DefIndex, rustc_span::def_id::DefPathHash, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="89.6982%" y="437" width="0.0656%" height="15" fill="rgb(219,37,20)" fg:x="1367" fg:w="1"/><text x="89.9482%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.7638%" y="469" width="0.0656%" height="15" fill="rgb(210,158,4)" fg:x="1368" fg:w="1"/><text x="90.0138%" y="479.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.7638%" y="453" width="0.0656%" height="15" fill="rgb(221,167,53)" fg:x="1368" fg:w="1"/><text x="90.0138%" y="463.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::finish128 (1 samples, 0.07%)</title><rect x="89.7638%" y="437" width="0.0656%" height="15" fill="rgb(237,151,45)" fg:x="1368" fg:w="1"/><text x="90.0138%" y="447.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#1}, core::option::Option&lt;(rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;&gt;::{closure#0}, core::option::Option&lt;(rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;&gt; (1 samples, 0.07%)</title><rect x="89.8294%" y="453" width="0.0656%" height="15" fill="rgb(231,39,3)" fg:x="1369" fg:w="1"/><text x="90.0794%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (3 samples, 0.20%)</title><rect x="89.7638%" y="645" width="0.1969%" height="15" fill="rgb(212,167,28)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="655.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (3 samples, 0.20%)</title><rect x="89.7638%" y="629" width="0.1969%" height="15" fill="rgb(232,178,8)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="639.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (3 samples, 0.20%)</title><rect x="89.7638%" y="613" width="0.1969%" height="15" fill="rgb(225,151,20)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="89.7638%" y="597" width="0.1969%" height="15" fill="rgb(238,3,37)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="89.7638%" y="581" width="0.1969%" height="15" fill="rgb(251,147,42)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (3 samples, 0.20%)</title><rect x="89.7638%" y="565" width="0.1969%" height="15" fill="rgb(208,173,10)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="575.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (3 samples, 0.20%)</title><rect x="89.7638%" y="549" width="0.1969%" height="15" fill="rgb(246,225,4)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (3 samples, 0.20%)</title><rect x="89.7638%" y="533" width="0.1969%" height="15" fill="rgb(248,102,6)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="89.7638%" y="517" width="0.1969%" height="15" fill="rgb(232,6,21)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="89.7638%" y="501" width="0.1969%" height="15" fill="rgb(221,179,22)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="511.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (3 samples, 0.20%)</title><rect x="89.7638%" y="485" width="0.1969%" height="15" fill="rgb(252,50,20)" fg:x="1368" fg:w="3"/><text x="90.0138%" y="495.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="89.8294%" y="469" width="0.1312%" height="15" fill="rgb(222,56,38)" fg:x="1369" fg:w="2"/><text x="90.0794%" y="479.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.8950%" y="453" width="0.0656%" height="15" fill="rgb(206,193,29)" fg:x="1370" fg:w="1"/><text x="90.1450%" y="463.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (11 samples, 0.72%)</title><rect x="89.3045%" y="757" width="0.7218%" height="15" fill="rgb(239,192,45)" fg:x="1361" fg:w="11"/><text x="89.5545%" y="767.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (4 samples, 0.26%)</title><rect x="89.7638%" y="741" width="0.2625%" height="15" fill="rgb(254,18,36)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="751.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (4 samples, 0.26%)</title><rect x="89.7638%" y="725" width="0.2625%" height="15" fill="rgb(221,127,11)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (4 samples, 0.26%)</title><rect x="89.7638%" y="709" width="0.2625%" height="15" fill="rgb(234,146,35)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (4 samples, 0.26%)</title><rect x="89.7638%" y="693" width="0.2625%" height="15" fill="rgb(254,201,37)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="703.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (4 samples, 0.26%)</title><rect x="89.7638%" y="677" width="0.2625%" height="15" fill="rgb(211,202,23)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="687.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (4 samples, 0.26%)</title><rect x="89.7638%" y="661" width="0.2625%" height="15" fill="rgb(237,91,2)" fg:x="1368" fg:w="4"/><text x="90.0138%" y="671.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::own_existential_vtable_entries (1 samples, 0.07%)</title><rect x="89.9606%" y="645" width="0.0656%" height="15" fill="rgb(226,228,36)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::own_existential_vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="629" width="0.0656%" height="15" fill="rgb(213,63,50)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::own_existential_vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="613" width="0.0656%" height="15" fill="rgb(235,194,19)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="623.50"></text></g><g><title>rustc_trait_selection::traits::vtable::own_existential_vtable_entries (1 samples, 0.07%)</title><rect x="89.9606%" y="597" width="0.0656%" height="15" fill="rgb(207,204,18)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="607.50"></text></g><g><title>rustc_arena::cold_path::&lt;&lt;rustc_arena::DroplessArena&gt;::alloc_from_iter&lt;rustc_span::def_id::DefId, core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;(rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem)&gt;, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem&gt;&gt;::iter::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::in_definition_order::{closure#0}&gt;, rustc_trait_selection::traits::vtable::own_existential_vtable_entries::{closure#0}&gt;, rustc_trait_selection::traits::vtable::own_existential_vtable_entries::{closure#1}&gt;&gt;::{closure#0}, &amp;mut [rustc_span::def_id::DefId]&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="581" width="0.0656%" height="15" fill="rgb(248,8,7)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="591.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_span::def_id::DefId: 8]&gt; as core::iter::traits::collect::Extend&lt;rustc_span::def_id::DefId&gt;&gt;::extend::&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;(rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem)&gt;, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, rustc_middle::ty::assoc::AssocItem&gt;&gt;::iter::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::in_definition_order::{closure#0}&gt;, rustc_trait_selection::traits::vtable::own_existential_vtable_entries::{closure#0}&gt;, rustc_trait_selection::traits::vtable::own_existential_vtable_entries::{closure#1}&gt;&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="565" width="0.0656%" height="15" fill="rgb(223,145,47)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="575.50"></text></g><g><title>rustc_trait_selection::traits::object_safety::generics_require_sized_self (1 samples, 0.07%)</title><rect x="89.9606%" y="549" width="0.0656%" height="15" fill="rgb(228,84,11)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="559.50"></text></g><g><title>&lt;rustc_middle::ty::generics::GenericPredicates&gt;::instantiate_identity_into (1 samples, 0.07%)</title><rect x="89.9606%" y="533" width="0.0656%" height="15" fill="rgb(218,76,45)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="543.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::predicates_of (1 samples, 0.07%)</title><rect x="89.9606%" y="517" width="0.0656%" height="15" fill="rgb(223,80,15)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="501" width="0.0656%" height="15" fill="rgb(219,218,33)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="485" width="0.0656%" height="15" fill="rgb(208,51,11)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="495.50"></text></g><g><title>rustc_hir_analysis::collect::predicates_of::predicates_of (1 samples, 0.07%)</title><rect x="89.9606%" y="469" width="0.0656%" height="15" fill="rgb(229,165,39)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="479.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr::&lt;rustc_span::def_id::DefId&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="453" width="0.0656%" height="15" fill="rgb(241,100,24)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="463.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::item_attrs (1 samples, 0.07%)</title><rect x="89.9606%" y="437" width="0.0656%" height="15" fill="rgb(228,14,23)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::item_attrs, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="421" width="0.0656%" height="15" fill="rgb(247,116,52)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="431.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::item_attrs, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="405" width="0.0656%" height="15" fill="rgb(216,149,33)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="415.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::item_attrs (1 samples, 0.07%)</title><rect x="89.9606%" y="389" width="0.0656%" height="15" fill="rgb(238,142,29)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="399.50"></text></g><g><title>&lt;rustc_middle::arena::Arena&gt;::alloc_from_iter::&lt;rustc_ast::ast::Attribute, rustc_arena::IsNotCopy, rustc_metadata::rmeta::decoder::DecodeIterator&lt;rustc_ast::ast::Attribute&gt;&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="373" width="0.0656%" height="15" fill="rgb(224,83,40)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="383.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_ast::ast::Attribute: 8]&gt; as core::iter::traits::collect::Extend&lt;rustc_ast::ast::Attribute&gt;&gt;::extend::&lt;rustc_metadata::rmeta::decoder::DecodeIterator&lt;rustc_ast::ast::Attribute&gt;&gt; (1 samples, 0.07%)</title><rect x="89.9606%" y="357" width="0.0656%" height="15" fill="rgb(234,165,11)" fg:x="1371" fg:w="1"/><text x="90.2106%" y="367.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::graph::CurrentDepGraph&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::intern_node (1 samples, 0.07%)</title><rect x="90.0262%" y="453" width="0.0656%" height="15" fill="rgb(215,96,23)" fg:x="1372" fg:w="1"/><text x="90.2762%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_query_system::dep_graph::dep_node::DepNode&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_query_system::dep_graph::dep_node::DepNode&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;, rustc_query_system::dep_graph::dep_node::DepNode&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.0262%" y="437" width="0.0656%" height="15" fill="rgb(233,179,26)" fg:x="1372" fg:w="1"/><text x="90.2762%" y="447.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (14 samples, 0.92%)</title><rect x="89.3045%" y="773" width="0.9186%" height="15" fill="rgb(225,129,33)" fg:x="1361" fg:w="14"/><text x="89.5545%" y="783.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (3 samples, 0.20%)</title><rect x="90.0262%" y="757" width="0.1969%" height="15" fill="rgb(237,49,13)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="767.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (3 samples, 0.20%)</title><rect x="90.0262%" y="741" width="0.1969%" height="15" fill="rgb(211,3,31)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="751.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="725" width="0.1969%" height="15" fill="rgb(216,152,19)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="735.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="709" width="0.1969%" height="15" fill="rgb(251,121,35)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="719.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (3 samples, 0.20%)</title><rect x="90.0262%" y="693" width="0.1969%" height="15" fill="rgb(210,217,47)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="703.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (3 samples, 0.20%)</title><rect x="90.0262%" y="677" width="0.1969%" height="15" fill="rgb(244,116,22)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="661" width="0.1969%" height="15" fill="rgb(228,17,21)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="671.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (3 samples, 0.20%)</title><rect x="90.0262%" y="645" width="0.1969%" height="15" fill="rgb(240,149,34)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="655.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (3 samples, 0.20%)</title><rect x="90.0262%" y="629" width="0.1969%" height="15" fill="rgb(208,125,47)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="613" width="0.1969%" height="15" fill="rgb(249,186,39)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="597" width="0.1969%" height="15" fill="rgb(240,220,33)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (3 samples, 0.20%)</title><rect x="90.0262%" y="581" width="0.1969%" height="15" fill="rgb(243,110,23)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (3 samples, 0.20%)</title><rect x="90.0262%" y="565" width="0.1969%" height="15" fill="rgb(219,163,46)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (3 samples, 0.20%)</title><rect x="90.0262%" y="549" width="0.1969%" height="15" fill="rgb(216,126,30)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="533" width="0.1969%" height="15" fill="rgb(208,139,11)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="517" width="0.1969%" height="15" fill="rgb(213,118,36)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="527.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (3 samples, 0.20%)</title><rect x="90.0262%" y="501" width="0.1969%" height="15" fill="rgb(226,43,17)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="485" width="0.1969%" height="15" fill="rgb(254,217,4)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="495.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (3 samples, 0.20%)</title><rect x="90.0262%" y="469" width="0.1969%" height="15" fill="rgb(210,134,47)" fg:x="1372" fg:w="3"/><text x="90.2762%" y="479.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (2 samples, 0.13%)</title><rect x="90.0919%" y="453" width="0.1312%" height="15" fill="rgb(237,24,49)" fg:x="1373" fg:w="2"/><text x="90.3419%" y="463.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, core::option::Option&lt;rustc_metadata::rmeta::LazyValue&lt;rustc_hir::definitions::DefKey&gt;&gt;&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef&gt; (2 samples, 0.13%)</title><rect x="90.0919%" y="437" width="0.1312%" height="15" fill="rgb(251,39,46)" fg:x="1373" fg:w="2"/><text x="90.3419%" y="447.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (15 samples, 0.98%)</title><rect x="89.3045%" y="853" width="0.9843%" height="15" fill="rgb(251,220,3)" fg:x="1361" fg:w="15"/><text x="89.5545%" y="863.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (15 samples, 0.98%)</title><rect x="89.3045%" y="837" width="0.9843%" height="15" fill="rgb(228,105,12)" fg:x="1361" fg:w="15"/><text x="89.5545%" y="847.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (15 samples, 0.98%)</title><rect x="89.3045%" y="821" width="0.9843%" height="15" fill="rgb(215,196,1)" fg:x="1361" fg:w="15"/><text x="89.5545%" y="831.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (15 samples, 0.98%)</title><rect x="89.3045%" y="805" width="0.9843%" height="15" fill="rgb(214,33,39)" fg:x="1361" fg:w="15"/><text x="89.5545%" y="815.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (15 samples, 0.98%)</title><rect x="89.3045%" y="789" width="0.9843%" height="15" fill="rgb(220,19,52)" fg:x="1361" fg:w="15"/><text x="89.5545%" y="799.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="90.2231%" y="773" width="0.0656%" height="15" fill="rgb(221,78,38)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="783.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (1 samples, 0.07%)</title><rect x="90.2231%" y="757" width="0.0656%" height="15" fill="rgb(253,30,16)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="767.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="741" width="0.0656%" height="15" fill="rgb(242,65,0)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="751.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="725" width="0.0656%" height="15" fill="rgb(235,201,12)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="735.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (1 samples, 0.07%)</title><rect x="90.2231%" y="709" width="0.0656%" height="15" fill="rgb(233,161,9)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="719.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (1 samples, 0.07%)</title><rect x="90.2231%" y="693" width="0.0656%" height="15" fill="rgb(241,207,41)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="677" width="0.0656%" height="15" fill="rgb(212,69,46)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="687.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (1 samples, 0.07%)</title><rect x="90.2231%" y="661" width="0.0656%" height="15" fill="rgb(239,69,45)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="671.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (1 samples, 0.07%)</title><rect x="90.2231%" y="645" width="0.0656%" height="15" fill="rgb(242,117,48)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="629" width="0.0656%" height="15" fill="rgb(228,41,36)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="613" width="0.0656%" height="15" fill="rgb(212,3,32)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="623.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.2231%" y="597" width="0.0656%" height="15" fill="rgb(233,41,49)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.2231%" y="581" width="0.0656%" height="15" fill="rgb(252,170,49)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="90.2231%" y="565" width="0.0656%" height="15" fill="rgb(229,53,26)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="549" width="0.0656%" height="15" fill="rgb(217,157,12)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="533" width="0.0656%" height="15" fill="rgb(227,17,9)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="543.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="90.2231%" y="517" width="0.0656%" height="15" fill="rgb(218,84,12)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="501" width="0.0656%" height="15" fill="rgb(212,79,24)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2231%" y="485" width="0.0656%" height="15" fill="rgb(217,222,37)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="495.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (1 samples, 0.07%)</title><rect x="90.2231%" y="469" width="0.0656%" height="15" fill="rgb(246,208,8)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="479.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="90.2231%" y="453" width="0.0656%" height="15" fill="rgb(244,133,10)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="463.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="90.2231%" y="437" width="0.0656%" height="15" fill="rgb(209,219,41)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="447.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (1 samples, 0.07%)</title><rect x="90.2231%" y="421" width="0.0656%" height="15" fill="rgb(253,175,45)" fg:x="1375" fg:w="1"/><text x="90.4731%" y="431.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::const_eval_resolve (1 samples, 0.07%)</title><rect x="90.2887%" y="837" width="0.0656%" height="15" fill="rgb(235,100,37)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="847.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_const_value_raw (1 samples, 0.07%)</title><rect x="90.2887%" y="821" width="0.0656%" height="15" fill="rgb(225,87,19)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="831.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="805" width="0.0656%" height="15" fill="rgb(217,152,17)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="815.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="789" width="0.0656%" height="15" fill="rgb(235,72,13)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="799.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="90.2887%" y="773" width="0.0656%" height="15" fill="rgb(233,140,18)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="783.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="757" width="0.0656%" height="15" fill="rgb(207,212,28)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="767.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="741" width="0.0656%" height="15" fill="rgb(220,130,25)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="751.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="90.2887%" y="725" width="0.0656%" height="15" fill="rgb(205,55,34)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="735.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_allocation_raw (1 samples, 0.07%)</title><rect x="90.2887%" y="709" width="0.0656%" height="15" fill="rgb(237,54,35)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="719.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="693" width="0.0656%" height="15" fill="rgb(208,67,23)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="677" width="0.0656%" height="15" fill="rgb(206,207,50)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="687.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider (1 samples, 0.07%)</title><rect x="90.2887%" y="661" width="0.0656%" height="15" fill="rgb(213,211,42)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="671.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::terminator (1 samples, 0.07%)</title><rect x="90.2887%" y="645" width="0.0656%" height="15" fill="rgb(252,197,50)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="655.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="629" width="0.0656%" height="15" fill="rgb(251,211,41)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="639.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="613" width="0.0656%" height="15" fill="rgb(229,211,5)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="623.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.2887%" y="597" width="0.0656%" height="15" fill="rgb(239,36,31)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="607.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.2887%" y="581" width="0.0656%" height="15" fill="rgb(248,67,31)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="90.2887%" y="565" width="0.0656%" height="15" fill="rgb(249,55,44)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="549" width="0.0656%" height="15" fill="rgb(216,82,12)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="559.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="533" width="0.0656%" height="15" fill="rgb(242,174,1)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="543.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="90.2887%" y="517" width="0.0656%" height="15" fill="rgb(208,120,29)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="501" width="0.0656%" height="15" fill="rgb(221,105,43)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="511.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_parent, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.2887%" y="485" width="0.0656%" height="15" fill="rgb(234,124,22)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="495.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::finish128 (1 samples, 0.07%)</title><rect x="90.2887%" y="469" width="0.0656%" height="15" fill="rgb(212,23,30)" fg:x="1376" fg:w="1"/><text x="90.5387%" y="479.50"></text></g><g><title>&lt;rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_constant (1 samples, 0.07%)</title><rect x="90.3543%" y="837" width="0.0656%" height="15" fill="rgb(219,122,53)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="847.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::const_eval_resolve (1 samples, 0.07%)</title><rect x="90.3543%" y="821" width="0.0656%" height="15" fill="rgb(248,84,24)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="831.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_const_value_raw (1 samples, 0.07%)</title><rect x="90.3543%" y="805" width="0.0656%" height="15" fill="rgb(245,115,18)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="815.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="789" width="0.0656%" height="15" fill="rgb(227,176,51)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="799.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="773" width="0.0656%" height="15" fill="rgb(229,63,42)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="783.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="90.3543%" y="757" width="0.0656%" height="15" fill="rgb(247,202,24)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="767.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="741" width="0.0656%" height="15" fill="rgb(244,173,20)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="751.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_const_value_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="725" width="0.0656%" height="15" fill="rgb(242,81,47)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="735.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_const_value_raw_provider (1 samples, 0.07%)</title><rect x="90.3543%" y="709" width="0.0656%" height="15" fill="rgb(231,185,54)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="719.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_allocation_raw (1 samples, 0.07%)</title><rect x="90.3543%" y="693" width="0.0656%" height="15" fill="rgb(243,55,32)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="703.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="677" width="0.0656%" height="15" fill="rgb(208,167,19)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="687.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="661" width="0.0656%" height="15" fill="rgb(231,72,35)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="671.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider (1 samples, 0.07%)</title><rect x="90.3543%" y="645" width="0.0656%" height="15" fill="rgb(250,173,51)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="655.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::push_stack_frame (1 samples, 0.07%)</title><rect x="90.3543%" y="629" width="0.0656%" height="15" fill="rgb(209,5,22)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="639.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::eval_mir_constant (1 samples, 0.07%)</title><rect x="90.3543%" y="613" width="0.0656%" height="15" fill="rgb(250,174,19)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="623.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::eval_to_allocation_raw (1 samples, 0.07%)</title><rect x="90.3543%" y="597" width="0.0656%" height="15" fill="rgb(217,3,49)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="581" width="0.0656%" height="15" fill="rgb(218,225,5)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::eval_to_allocation_raw, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.3543%" y="565" width="0.0656%" height="15" fill="rgb(236,89,11)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="575.50"></text></g><g><title>rustc_const_eval::const_eval::eval_queries::eval_to_allocation_raw_provider (1 samples, 0.07%)</title><rect x="90.3543%" y="549" width="0.0656%" height="15" fill="rgb(206,33,28)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="559.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::terminator (1 samples, 0.07%)</title><rect x="90.3543%" y="533" width="0.0656%" height="15" fill="rgb(241,56,42)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="543.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::copy_op_no_validate (1 samples, 0.07%)</title><rect x="90.3543%" y="517" width="0.0656%" height="15" fill="rgb(222,44,11)" fg:x="1377" fg:w="1"/><text x="90.6043%" y="527.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (18 samples, 1.18%)</title><rect x="89.3045%" y="869" width="1.1811%" height="15" fill="rgb(234,111,20)" fg:x="1361" fg:w="18"/><text x="89.5545%" y="879.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (3 samples, 0.20%)</title><rect x="90.2887%" y="853" width="0.1969%" height="15" fill="rgb(237,77,6)" fg:x="1376" fg:w="3"/><text x="90.5387%" y="863.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (1 samples, 0.07%)</title><rect x="90.4199%" y="837" width="0.0656%" height="15" fill="rgb(235,111,23)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="847.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="821" width="0.0656%" height="15" fill="rgb(251,135,29)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="831.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="805" width="0.0656%" height="15" fill="rgb(217,57,1)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="815.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (1 samples, 0.07%)</title><rect x="90.4199%" y="789" width="0.0656%" height="15" fill="rgb(249,119,31)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="799.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (1 samples, 0.07%)</title><rect x="90.4199%" y="773" width="0.0656%" height="15" fill="rgb(233,164,33)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="757" width="0.0656%" height="15" fill="rgb(250,217,43)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="767.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (1 samples, 0.07%)</title><rect x="90.4199%" y="741" width="0.0656%" height="15" fill="rgb(232,154,50)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="751.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (1 samples, 0.07%)</title><rect x="90.4199%" y="725" width="0.0656%" height="15" fill="rgb(227,190,8)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="709" width="0.0656%" height="15" fill="rgb(209,217,32)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="693" width="0.0656%" height="15" fill="rgb(243,203,50)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="703.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.4199%" y="677" width="0.0656%" height="15" fill="rgb(232,152,27)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="687.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.4199%" y="661" width="0.0656%" height="15" fill="rgb(240,34,29)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="645" width="0.0656%" height="15" fill="rgb(215,185,52)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="655.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="629" width="0.0656%" height="15" fill="rgb(240,89,49)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="639.50"></text></g><g><title>rustc_traits::codegen::codegen_select_candidate (1 samples, 0.07%)</title><rect x="90.4199%" y="613" width="0.0656%" height="15" fill="rgb(225,12,52)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="623.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::select (1 samples, 0.07%)</title><rect x="90.4199%" y="597" width="0.0656%" height="15" fill="rgb(239,128,45)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="607.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation_no_cache (1 samples, 0.07%)</title><rect x="90.4199%" y="581" width="0.0656%" height="15" fill="rgb(211,78,47)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="591.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates (1 samples, 0.07%)</title><rect x="90.4199%" y="565" width="0.0656%" height="15" fill="rgb(232,31,21)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="575.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_relevant_impl::&lt;&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates_from_impls::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="549" width="0.0656%" height="15" fill="rgb(222,168,14)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::trait_impls_of (1 samples, 0.07%)</title><rect x="90.4199%" y="533" width="0.0656%" height="15" fill="rgb(209,128,24)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::trait_impls_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="517" width="0.0656%" height="15" fill="rgb(249,35,13)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::trait_impls_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4199%" y="501" width="0.0656%" height="15" fill="rgb(218,7,2)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="511.50"></text></g><g><title>rustc_middle::ty::trait_def::trait_impls_of_provider (1 samples, 0.07%)</title><rect x="90.4199%" y="485" width="0.0656%" height="15" fill="rgb(238,107,27)" fg:x="1378" fg:w="1"/><text x="90.6699%" y="495.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (1 samples, 0.07%)</title><rect x="90.4856%" y="869" width="0.0656%" height="15" fill="rgb(217,88,38)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="879.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.07%)</title><rect x="90.4856%" y="853" width="0.0656%" height="15" fill="rgb(230,207,0)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="863.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="837" width="0.0656%" height="15" fill="rgb(249,64,54)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="847.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="821" width="0.0656%" height="15" fill="rgb(231,7,11)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="831.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="90.4856%" y="805" width="0.0656%" height="15" fill="rgb(205,149,21)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="815.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="90.4856%" y="789" width="0.0656%" height="15" fill="rgb(215,126,34)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="799.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="773" width="0.0656%" height="15" fill="rgb(241,132,45)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="783.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="757" width="0.0656%" height="15" fill="rgb(252,69,32)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="767.50"></text></g><g><title>rustc_mir_transform::optimized_mir (1 samples, 0.07%)</title><rect x="90.4856%" y="741" width="0.0656%" height="15" fill="rgb(232,204,19)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="751.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::mir_drops_elaborated_and_const_checked, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="725" width="0.0656%" height="15" fill="rgb(249,15,47)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="735.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::mir_drops_elaborated_and_const_checked, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="709" width="0.0656%" height="15" fill="rgb(209,227,23)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="719.50"></text></g><g><title>rustc_mir_transform::mir_drops_elaborated_and_const_checked (1 samples, 0.07%)</title><rect x="90.4856%" y="693" width="0.0656%" height="15" fill="rgb(248,92,24)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="703.50"></text></g><g><title>rustc_mir_transform::run_analysis_to_runtime_passes (1 samples, 0.07%)</title><rect x="90.4856%" y="677" width="0.0656%" height="15" fill="rgb(247,59,2)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="687.50"></text></g><g><title>&lt;rustc_mir_transform::const_prop_lint::ConstProp as rustc_mir_transform::pass_manager::MirLint&gt;::run_lint (1 samples, 0.07%)</title><rect x="90.4856%" y="661" width="0.0656%" height="15" fill="rgb(221,30,5)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="671.50"></text></g><g><title>&lt;rustc_mir_transform::const_prop_lint::ConstPropagator as rustc_middle::mir::visit::Visitor&gt;::visit_basic_block_data (1 samples, 0.07%)</title><rect x="90.4856%" y="645" width="0.0656%" height="15" fill="rgb(208,108,53)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="655.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_mir_transform::const_prop::ConstPropMachine&gt;&gt;::eval_mir_constant (1 samples, 0.07%)</title><rect x="90.4856%" y="629" width="0.0656%" height="15" fill="rgb(211,183,26)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="639.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::layout_of (1 samples, 0.07%)</title><rect x="90.4856%" y="613" width="0.0656%" height="15" fill="rgb(232,132,4)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="597" width="0.0656%" height="15" fill="rgb(253,128,37)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.4856%" y="581" width="0.0656%" height="15" fill="rgb(221,58,24)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="591.50"></text></g><g><title>rustc_ty_utils::layout::layout_of (1 samples, 0.07%)</title><rect x="90.4856%" y="565" width="0.0656%" height="15" fill="rgb(230,54,45)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="575.50"></text></g><g><title>&lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::univariant (1 samples, 0.07%)</title><rect x="90.4856%" y="549" width="0.0656%" height="15" fill="rgb(254,21,18)" fg:x="1379" fg:w="1"/><text x="90.7356%" y="559.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="90.5512%" y="677" width="0.0656%" height="15" fill="rgb(221,108,0)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="90.5512%" y="661" width="0.0656%" height="15" fill="rgb(206,95,1)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="90.5512%" y="645" width="0.0656%" height="15" fill="rgb(237,52,5)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.07%)</title><rect x="90.5512%" y="629" width="0.0656%" height="15" fill="rgb(218,150,34)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="90.5512%" y="613" width="0.0656%" height="15" fill="rgb(235,194,28)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="623.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.5512%" y="597" width="0.0656%" height="15" fill="rgb(245,92,18)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="607.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.5512%" y="581" width="0.0656%" height="15" fill="rgb(253,203,53)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="591.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.5512%" y="565" width="0.0656%" height="15" fill="rgb(249,185,47)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="575.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.5512%" y="549" width="0.0656%" height="15" fill="rgb(252,194,52)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="90.5512%" y="533" width="0.0656%" height="15" fill="rgb(210,53,36)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.5512%" y="517" width="0.0656%" height="15" fill="rgb(237,37,25)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.5512%" y="501" width="0.0656%" height="15" fill="rgb(242,116,27)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="511.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="90.5512%" y="485" width="0.0656%" height="15" fill="rgb(213,185,26)" fg:x="1380" fg:w="1"/><text x="90.8012%" y="495.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt; (2 samples, 0.13%)</title><rect x="90.5512%" y="869" width="0.1312%" height="15" fill="rgb(225,204,8)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="879.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (2 samples, 0.13%)</title><rect x="90.5512%" y="853" width="0.1312%" height="15" fill="rgb(254,111,37)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="863.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (2 samples, 0.13%)</title><rect x="90.5512%" y="837" width="0.1312%" height="15" fill="rgb(242,35,9)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="847.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (2 samples, 0.13%)</title><rect x="90.5512%" y="821" width="0.1312%" height="15" fill="rgb(232,138,49)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="831.50"></text></g><g><title>&lt;rustc_session::session::Session&gt;::time::&lt;(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}&gt; (2 samples, 0.13%)</title><rect x="90.5512%" y="805" width="0.1312%" height="15" fill="rgb(247,56,4)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="815.50"></text></g><g><title>rustc_data_structures::sync::par_for_each_in::&lt;alloc::vec::Vec&lt;rustc_middle::mir::mono::MonoItem&gt;, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}&gt; (2 samples, 0.13%)</title><rect x="90.5512%" y="789" width="0.1312%" height="15" fill="rgb(226,179,17)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="799.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="773" width="0.1312%" height="15" fill="rgb(216,163,45)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="783.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="757" width="0.1312%" height="15" fill="rgb(211,157,3)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="767.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="741" width="0.1312%" height="15" fill="rgb(234,44,20)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="751.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="725" width="0.1312%" height="15" fill="rgb(254,138,23)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="735.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="709" width="0.1312%" height="15" fill="rgb(206,119,39)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="719.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.13%)</title><rect x="90.5512%" y="693" width="0.1312%" height="15" fill="rgb(231,105,52)" fg:x="1380" fg:w="2"/><text x="90.8012%" y="703.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.07%)</title><rect x="90.6168%" y="677" width="0.0656%" height="15" fill="rgb(250,20,5)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="687.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="661" width="0.0656%" height="15" fill="rgb(215,198,30)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="671.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="645" width="0.0656%" height="15" fill="rgb(246,142,8)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="655.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.6168%" y="629" width="0.0656%" height="15" fill="rgb(243,26,38)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="639.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.6168%" y="613" width="0.0656%" height="15" fill="rgb(205,133,28)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="623.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::specialization_graph_of (1 samples, 0.07%)</title><rect x="90.6168%" y="597" width="0.0656%" height="15" fill="rgb(212,34,0)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="581" width="0.0656%" height="15" fill="rgb(251,226,22)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="591.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="565" width="0.0656%" height="15" fill="rgb(252,119,9)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="575.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (1 samples, 0.07%)</title><rect x="90.6168%" y="549" width="0.0656%" height="15" fill="rgb(213,150,50)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="533" width="0.0656%" height="15" fill="rgb(212,24,39)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="543.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6168%" y="517" width="0.0656%" height="15" fill="rgb(213,46,39)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="527.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::impl_trait_ref (1 samples, 0.07%)</title><rect x="90.6168%" y="501" width="0.0656%" height="15" fill="rgb(239,106,12)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="90.6168%" y="485" width="0.0656%" height="15" fill="rgb(249,229,21)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="495.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="90.6168%" y="469" width="0.0656%" height="15" fill="rgb(212,158,3)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="479.50"></text></g><g><title>&lt;rustc_index::vec::IndexVec&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.07%)</title><rect x="90.6168%" y="453" width="0.0656%" height="15" fill="rgb(253,26,48)" fg:x="1381" fg:w="1"/><text x="90.8668%" y="463.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="869" width="0.0656%" height="15" fill="rgb(238,178,20)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="879.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="853" width="0.0656%" height="15" fill="rgb(208,86,15)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="863.50"></text></g><g><title>rustc_ty_utils::layout::layout_of (1 samples, 0.07%)</title><rect x="90.6824%" y="837" width="0.0656%" height="15" fill="rgb(239,42,53)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="847.50"></text></g><g><title>core::iter::adapters::try_process::&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#5}&gt;&gt;, rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::layout::LayoutError&gt;, &lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#5}&gt; as core::iter::traits::iterator::Iterator&gt;::try_collect&lt;rustc_index::vec::IndexVec&lt;rustc_abi::VariantIdx, rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt;::{closure#0}, rustc_index::vec::IndexVec&lt;rustc_abi::VariantIdx, rustc_index::vec::IndexVec&lt;rustc_abi::FieldIdx, rustc_abi::Layout&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="821" width="0.0656%" height="15" fill="rgb(245,226,8)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#5}::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;(), &lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#5}::{closure#0}&gt;&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::layout::LayoutError&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold&lt;(), core::iter::traits::iterator::Iterator::try_for_each::call&lt;rustc_abi::Layout, core::ops::control_flow::ControlFlow&lt;rustc_abi::Layout&gt;, core::ops::control_flow::ControlFlow&lt;rustc_abi::Layout&gt;::Break&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;rustc_abi::Layout&gt;&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;core::ops::control_flow::ControlFlow&lt;rustc_abi::Layout&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="805" width="0.0656%" height="15" fill="rgb(216,176,32)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="815.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="789" width="0.0656%" height="15" fill="rgb(231,186,21)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="799.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="773" width="0.0656%" height="15" fill="rgb(205,95,49)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="783.50"></text></g><g><title>rustc_ty_utils::layout::layout_of (1 samples, 0.07%)</title><rect x="90.6824%" y="757" width="0.0656%" height="15" fill="rgb(217,145,8)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="767.50"></text></g><g><title>&lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum::&lt;rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexSlice&lt;rustc_abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="741" width="0.0656%" height="15" fill="rgb(239,144,48)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="751.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::param_env (1 samples, 0.07%)</title><rect x="90.6824%" y="725" width="0.0656%" height="15" fill="rgb(214,189,23)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="735.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="709" width="0.0656%" height="15" fill="rgb(229,157,17)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="719.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::param_env, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="693" width="0.0656%" height="15" fill="rgb(230,5,48)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="703.50"></text></g><g><title>rustc_ty_utils::ty::param_env (1 samples, 0.07%)</title><rect x="90.6824%" y="677" width="0.0656%" height="15" fill="rgb(224,156,48)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="687.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="661" width="0.0656%" height="15" fill="rgb(223,14,29)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="671.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="645" width="0.0656%" height="15" fill="rgb(229,96,36)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="655.50"></text></g><g><title>rustc_hir_analysis::collect::predicates_of::predicates_of (1 samples, 0.07%)</title><rect x="90.6824%" y="629" width="0.0656%" height="15" fill="rgb(231,102,53)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="639.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::predicates_defined_on, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="613" width="0.0656%" height="15" fill="rgb(210,77,38)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="623.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::predicates_defined_on, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 24]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="597" width="0.0656%" height="15" fill="rgb(235,131,6)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="607.50"></text></g><g><title>rustc_hir_analysis::collect::predicates_defined_on (1 samples, 0.07%)</title><rect x="90.6824%" y="581" width="0.0656%" height="15" fill="rgb(252,55,38)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::inferred_outlives_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="565" width="0.0656%" height="15" fill="rgb(246,38,14)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="575.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::inferred_outlives_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.6824%" y="549" width="0.0656%" height="15" fill="rgb(242,27,5)" fg:x="1382" fg:w="1"/><text x="90.9324%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="869" width="0.0656%" height="15" fill="rgb(228,65,35)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="879.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::vtable_entries, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="853" width="0.0656%" height="15" fill="rgb(245,93,11)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="863.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries (1 samples, 0.07%)</title><rect x="90.7480%" y="837" width="0.0656%" height="15" fill="rgb(213,1,31)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="847.50"></text></g><g><title>rustc_trait_selection::traits::vtable::vtable_entries::{closure#0} (1 samples, 0.07%)</title><rect x="90.7480%" y="821" width="0.0656%" height="15" fill="rgb(237,205,14)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::vtable::VtblEntry, &lt;alloc::vec::Vec&lt;rustc_middle::ty::vtable::VtblEntry&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;&gt;, rustc_trait_selection::traits::vtable::vtable_entries::{closure#0}::{closure#1}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="805" width="0.0656%" height="15" fill="rgb(232,118,45)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="815.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_for_vtable (1 samples, 0.07%)</title><rect x="90.7480%" y="789" width="0.0656%" height="15" fill="rgb(218,5,6)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="799.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_opt_const_arg (1 samples, 0.07%)</title><rect x="90.7480%" y="773" width="0.0656%" height="15" fill="rgb(251,87,51)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="783.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="757" width="0.0656%" height="15" fill="rgb(207,225,20)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="767.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 32]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="741" width="0.0656%" height="15" fill="rgb(222,78,54)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="751.50"></text></g><g><title>rustc_ty_utils::instance::resolve_instance (1 samples, 0.07%)</title><rect x="90.7480%" y="725" width="0.0656%" height="15" fill="rgb(232,85,16)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="735.50"></text></g><g><title>rustc_ty_utils::instance::inner_resolve_instance (1 samples, 0.07%)</title><rect x="90.7480%" y="709" width="0.0656%" height="15" fill="rgb(244,25,33)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="719.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="693" width="0.0656%" height="15" fill="rgb(233,24,36)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="703.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::codegen_select_candidate, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="677" width="0.0656%" height="15" fill="rgb(253,49,54)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="687.50"></text></g><g><title>rustc_traits::codegen::codegen_select_candidate (1 samples, 0.07%)</title><rect x="90.7480%" y="661" width="0.0656%" height="15" fill="rgb(245,12,22)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="671.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::select (1 samples, 0.07%)</title><rect x="90.7480%" y="645" width="0.0656%" height="15" fill="rgb(253,141,28)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="655.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation_no_cache (1 samples, 0.07%)</title><rect x="90.7480%" y="629" width="0.0656%" height="15" fill="rgb(225,207,27)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="639.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates (1 samples, 0.07%)</title><rect x="90.7480%" y="613" width="0.0656%" height="15" fill="rgb(220,84,2)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="623.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_relevant_impl::&lt;&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates_from_impls::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="597" width="0.0656%" height="15" fill="rgb(224,37,37)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="607.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::trait_impls_of (1 samples, 0.07%)</title><rect x="90.7480%" y="581" width="0.0656%" height="15" fill="rgb(220,143,18)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::trait_impls_of, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="565" width="0.0656%" height="15" fill="rgb(210,88,33)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="575.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::trait_impls_of, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 8]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="549" width="0.0656%" height="15" fill="rgb(219,87,51)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="559.50"></text></g><g><title>rustc_middle::ty::trait_def::trait_impls_of_provider (1 samples, 0.07%)</title><rect x="90.7480%" y="533" width="0.0656%" height="15" fill="rgb(211,7,35)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query::&lt;rustc_query_impl::queries::implementations_of_trait, rustc_query_impl::plumbing::QueryCtxt&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="517" width="0.0656%" height="15" fill="rgb(232,77,2)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="527.50"></text></g><g><title>&lt;std::thread::local::LocalKey&lt;core::cell::Cell&lt;*const ()&gt;&gt;&gt;::with::&lt;rustc_middle::ty::context::tls::enter_context&lt;rustc_query_system::query::plumbing::execute_job_incr&lt;rustc_query_impl::queries::implementations_of_trait, rustc_query_impl::plumbing::QueryCtxt&gt;::{closure#2}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt;::{closure#0}, (rustc_middle::query::erase::Erased&lt;[u8: 16]&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex)&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="501" width="0.0656%" height="15" fill="rgb(249,94,25)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="511.50"></text></g><g><title>rustc_query_system::dep_graph::graph::hash_result::&lt;&amp;[(rustc_span::def_id::DefId, core::option::Option&lt;rustc_middle::ty::fast_reject::SimplifiedType&gt;)]&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="485" width="0.0656%" height="15" fill="rgb(215,112,2)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="495.50"></text></g><g><title>&lt;rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore&gt;::def_path_hash (1 samples, 0.07%)</title><rect x="90.7480%" y="469" width="0.0656%" height="15" fill="rgb(226,115,48)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_span::def_id::DefIndex, rustc_span::def_id::DefPathHash)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;rustc_span::def_id::DefIndex, rustc_span::def_id::DefIndex, rustc_span::def_id::DefPathHash, core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.07%)</title><rect x="90.7480%" y="453" width="0.0656%" height="15" fill="rgb(249,196,10)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="463.50"></text></g><g><title>free (1 samples, 0.07%)</title><rect x="90.7480%" y="437" width="0.0656%" height="15" fill="rgb(237,109,14)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="447.50"></text></g><g><title>free_fastpath (1 samples, 0.07%)</title><rect x="90.7480%" y="421" width="0.0656%" height="15" fill="rgb(217,103,53)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="431.50"></text></g><g><title>tsd_get (1 samples, 0.07%)</title><rect x="90.7480%" y="405" width="0.0656%" height="15" fill="rgb(244,137,9)" fg:x="1383" fg:w="1"/><text x="90.9980%" y="415.50"></text></g><g><title>rustup::cli::common::set_globals (1 samples, 0.07%)</title><rect x="90.8136%" y="869" width="0.0656%" height="15" fill="rgb(227,201,3)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="879.50"></text></g><g><title>rustup::config::Cfg::resolve_toolchain (1 samples, 0.07%)</title><rect x="90.8136%" y="853" width="0.0656%" height="15" fill="rgb(243,94,6)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="863.50"></text></g><g><title>rustup::dist::dist::PartialToolchainDesc::resolve (1 samples, 0.07%)</title><rect x="90.8136%" y="837" width="0.0656%" height="15" fill="rgb(235,118,5)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="847.50"></text></g><g><title>rustup::dist::triple::PartialTargetTriple::new (1 samples, 0.07%)</title><rect x="90.8136%" y="821" width="0.0656%" height="15" fill="rgb(247,10,30)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="831.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.07%)</title><rect x="90.8136%" y="805" width="0.0656%" height="15" fill="rgb(205,26,28)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.07%)</title><rect x="90.8136%" y="789" width="0.0656%" height="15" fill="rgb(206,99,35)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="799.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.07%)</title><rect x="90.8136%" y="773" width="0.0656%" height="15" fill="rgb(238,130,40)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="783.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="757" width="0.0656%" height="15" fill="rgb(224,126,31)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="767.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="741" width="0.0656%" height="15" fill="rgb(254,105,17)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="751.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="725" width="0.0656%" height="15" fill="rgb(216,87,36)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="735.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="709" width="0.0656%" height="15" fill="rgb(240,21,12)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="719.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="693" width="0.0656%" height="15" fill="rgb(245,192,34)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="703.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.07%)</title><rect x="90.8136%" y="677" width="0.0656%" height="15" fill="rgb(226,100,49)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="687.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1 samples, 0.07%)</title><rect x="90.8136%" y="661" width="0.0656%" height="15" fill="rgb(245,188,27)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="90.8136%" y="645" width="0.0656%" height="15" fill="rgb(212,170,8)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="90.8136%" y="629" width="0.0656%" height="15" fill="rgb(217,113,29)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="90.8136%" y="613" width="0.0656%" height="15" fill="rgb(237,30,3)" fg:x="1384" fg:w="1"/><text x="91.0636%" y="623.50"></text></g><g><title>rustup::cli::proxy_mode::main (1 samples, 0.07%)</title><rect x="90.8793%" y="869" width="0.0656%" height="15" fill="rgb(227,19,28)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="879.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (1 samples, 0.07%)</title><rect x="90.8793%" y="853" width="0.0656%" height="15" fill="rgb(239,172,45)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="863.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (1 samples, 0.07%)</title><rect x="90.8793%" y="837" width="0.0656%" height="15" fill="rgb(254,55,39)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="847.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (1 samples, 0.07%)</title><rect x="90.8793%" y="821" width="0.0656%" height="15" fill="rgb(249,208,12)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="831.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (1 samples, 0.07%)</title><rect x="90.8793%" y="805" width="0.0656%" height="15" fill="rgb(240,52,13)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="815.50"></text></g><g><title>toml::de::from_str (1 samples, 0.07%)</title><rect x="90.8793%" y="789" width="0.0656%" height="15" fill="rgb(252,149,13)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="799.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="90.8793%" y="773" width="0.0656%" height="15" fill="rgb(232,81,48)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="783.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="90.8793%" y="757" width="0.0656%" height="15" fill="rgb(222,144,2)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="767.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="90.8793%" y="741" width="0.0656%" height="15" fill="rgb(216,81,32)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="751.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="90.8793%" y="725" width="0.0656%" height="15" fill="rgb(244,78,51)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="735.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="90.8793%" y="709" width="0.0656%" height="15" fill="rgb(217,66,21)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="719.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="90.8793%" y="693" width="0.0656%" height="15" fill="rgb(247,101,42)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="703.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="90.8793%" y="677" width="0.0656%" height="15" fill="rgb(227,81,39)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="687.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="90.8793%" y="661" width="0.0656%" height="15" fill="rgb(220,223,44)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.07%)</title><rect x="90.8793%" y="645" width="0.0656%" height="15" fill="rgb(205,218,2)" fg:x="1385" fg:w="1"/><text x="91.1293%" y="655.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (3 samples, 0.20%)</title><rect x="90.9449%" y="869" width="0.1969%" height="15" fill="rgb(212,207,28)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="879.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (3 samples, 0.20%)</title><rect x="90.9449%" y="853" width="0.1969%" height="15" fill="rgb(224,12,41)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="863.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (3 samples, 0.20%)</title><rect x="90.9449%" y="837" width="0.1969%" height="15" fill="rgb(216,118,12)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="847.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (3 samples, 0.20%)</title><rect x="90.9449%" y="821" width="0.1969%" height="15" fill="rgb(252,97,46)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="831.50"></text></g><g><title>toml::de::from_str (3 samples, 0.20%)</title><rect x="90.9449%" y="805" width="0.1969%" height="15" fill="rgb(244,206,19)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="815.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="789" width="0.1969%" height="15" fill="rgb(231,84,31)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="799.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.20%)</title><rect x="90.9449%" y="773" width="0.1969%" height="15" fill="rgb(244,133,0)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="783.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="757" width="0.1969%" height="15" fill="rgb(223,15,50)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="767.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.20%)</title><rect x="90.9449%" y="741" width="0.1969%" height="15" fill="rgb(250,118,49)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="751.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="725" width="0.1969%" height="15" fill="rgb(248,25,38)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="735.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.20%)</title><rect x="90.9449%" y="709" width="0.1969%" height="15" fill="rgb(215,70,14)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="719.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="693" width="0.1969%" height="15" fill="rgb(215,28,15)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="703.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.20%)</title><rect x="90.9449%" y="677" width="0.1969%" height="15" fill="rgb(243,6,28)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="687.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="661" width="0.1969%" height="15" fill="rgb(222,130,1)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="671.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.20%)</title><rect x="90.9449%" y="645" width="0.1969%" height="15" fill="rgb(236,166,44)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="655.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.20%)</title><rect x="90.9449%" y="629" width="0.1969%" height="15" fill="rgb(221,108,14)" fg:x="1386" fg:w="3"/><text x="91.1949%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;rustc_interface::util::run_in_thread_pool_with_globals&lt;rustc_interface::interface::run_compiler&lt;core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;, rustc_driver_impl::run_compiler::{closure#1}&gt;::{closure#0}, core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;&gt;::{closure#0}::{closure#0}, core::result::Result&lt;(), rustc_span::ErrorGuaranteed&gt;&gt; (1 samples, 0.07%)</title><rect x="91.1417%" y="869" width="0.0656%" height="15" fill="rgb(252,3,45)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="879.50"></text></g><g><title>rustc_interface::util::create_session (1 samples, 0.07%)</title><rect x="91.1417%" y="853" width="0.0656%" height="15" fill="rgb(237,68,30)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="863.50"></text></g><g><title>rustc_interface::util::add_configuration (1 samples, 0.07%)</title><rect x="91.1417%" y="837" width="0.0656%" height="15" fill="rgb(211,79,22)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="847.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::target_features (1 samples, 0.07%)</title><rect x="91.1417%" y="821" width="0.0656%" height="15" fill="rgb(252,185,21)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_span::symbol::Symbol&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_span::symbol::Symbol, core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::slice::iter::Iter&lt;(&amp;str, core::option::Option&lt;rustc_span::symbol::Symbol&gt;)&gt;, rustc_codegen_llvm::llvm_util::target_features::{closure#0}&gt;, rustc_codegen_llvm::llvm_util::target_features::{closure#1}&gt;, rustc_codegen_llvm::llvm_util::target_features::{closure#2}&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="91.1417%" y="805" width="0.0656%" height="15" fill="rgb(225,189,26)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="815.50"></text></g><g><title>&lt;&amp;mut rustc_codegen_llvm::llvm_util::target_features::{closure#1} as core::ops::function::FnMut&lt;(&amp;&amp;str,)&gt;&gt;::call_mut (1 samples, 0.07%)</title><rect x="91.1417%" y="789" width="0.0656%" height="15" fill="rgb(241,30,40)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="799.50"></text></g><g><title>LLVMRustHasFeature (1 samples, 0.07%)</title><rect x="91.1417%" y="773" width="0.0656%" height="15" fill="rgb(235,215,44)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="783.50"></text></g><g><title>llvm::MCSubtargetInfo::checkFeatures (1 samples, 0.07%)</title><rect x="91.1417%" y="757" width="0.0656%" height="15" fill="rgb(205,8,29)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="767.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="741" width="0.0656%" height="15" fill="rgb(241,137,42)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="751.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="725" width="0.0656%" height="15" fill="rgb(237,155,2)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="735.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="709" width="0.0656%" height="15" fill="rgb(245,29,42)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="719.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="693" width="0.0656%" height="15" fill="rgb(234,101,35)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="703.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="677" width="0.0656%" height="15" fill="rgb(228,64,37)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="687.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="661" width="0.0656%" height="15" fill="rgb(217,214,36)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="671.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="645" width="0.0656%" height="15" fill="rgb(243,70,3)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="655.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="629" width="0.0656%" height="15" fill="rgb(253,158,52)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="639.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="613" width="0.0656%" height="15" fill="rgb(234,111,54)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="623.50"></text></g><g><title>SetImpliedBits (1 samples, 0.07%)</title><rect x="91.1417%" y="597" width="0.0656%" height="15" fill="rgb(217,70,32)" fg:x="1389" fg:w="1"/><text x="91.3917%" y="607.50"></text></g><g><title>toml::tokens::Tokenizer::basic_string::{{closure}} (1 samples, 0.07%)</title><rect x="91.2073%" y="869" width="0.0656%" height="15" fill="rgb(234,18,33)" fg:x="1390" fg:w="1"/><text x="91.4573%" y="879.50"></text></g><g><title>[unknown] (138 samples, 9.06%)</title><rect x="82.2835%" y="885" width="9.0551%" height="15" fill="rgb(234,12,49)" fg:x="1254" fg:w="138"/><text x="82.5335%" y="895.50">[unknown]</text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.07%)</title><rect x="91.2730%" y="869" width="0.0656%" height="15" fill="rgb(236,10,21)" fg:x="1391" fg:w="1"/><text x="91.5230%" y="879.50"></text></g><g><title>_Fork (5 samples, 0.33%)</title><rect x="91.3386%" y="885" width="0.3281%" height="15" fill="rgb(248,182,45)" fg:x="1392" fg:w="5"/><text x="91.5886%" y="895.50"></text></g><g><title>__cxa_finalize (1 samples, 0.07%)</title><rect x="91.6667%" y="885" width="0.0656%" height="15" fill="rgb(217,95,36)" fg:x="1397" fg:w="1"/><text x="91.9167%" y="895.50"></text></g><g><title>llvm::cl::opt&lt;bool, false, llvm::cl::parser&lt;bool&gt; &gt;::~opt (1 samples, 0.07%)</title><rect x="91.6667%" y="869" width="0.0656%" height="15" fill="rgb(212,110,31)" fg:x="1397" fg:w="1"/><text x="91.9167%" y="879.50"></text></g><g><title>__mmap (16 samples, 1.05%)</title><rect x="91.7323%" y="885" width="1.0499%" height="15" fill="rgb(206,32,53)" fg:x="1398" fg:w="16"/><text x="91.9823%" y="895.50"></text></g><g><title>__mprotect (10 samples, 0.66%)</title><rect x="92.7822%" y="885" width="0.6562%" height="15" fill="rgb(246,141,37)" fg:x="1414" fg:w="10"/><text x="93.0322%" y="895.50"></text></g><g><title>__sysconf (2 samples, 0.13%)</title><rect x="93.4383%" y="885" width="0.1312%" height="15" fill="rgb(219,16,7)" fg:x="1424" fg:w="2"/><text x="93.6883%" y="895.50"></text></g><g><title>__tls_get_addr (1 samples, 0.07%)</title><rect x="93.5696%" y="885" width="0.0656%" height="15" fill="rgb(230,205,45)" fg:x="1426" fg:w="1"/><text x="93.8196%" y="895.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="93.6352%" y="885" width="0.1312%" height="15" fill="rgb(231,43,49)" fg:x="1427" fg:w="2"/><text x="93.8852%" y="895.50"></text></g><g><title>getdents64 (5 samples, 0.33%)</title><rect x="93.7664%" y="885" width="0.3281%" height="15" fill="rgb(212,106,34)" fg:x="1429" fg:w="5"/><text x="94.0164%" y="895.50"></text></g><g><title>llvm::CallInst::Create (1 samples, 0.07%)</title><rect x="94.0945%" y="885" width="0.0656%" height="15" fill="rgb(206,83,17)" fg:x="1434" fg:w="1"/><text x="94.3445%" y="895.50"></text></g><g><title>pthread_create (1 samples, 0.07%)</title><rect x="94.1601%" y="885" width="0.0656%" height="15" fill="rgb(244,154,49)" fg:x="1435" fg:w="1"/><text x="94.4101%" y="895.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.07%)</title><rect x="94.2257%" y="885" width="0.0656%" height="15" fill="rgb(244,149,49)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="895.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="94.2257%" y="869" width="0.0656%" height="15" fill="rgb(227,134,18)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="879.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.07%)</title><rect x="94.2257%" y="853" width="0.0656%" height="15" fill="rgb(237,116,36)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="863.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.07%)</title><rect x="94.2257%" y="837" width="0.0656%" height="15" fill="rgb(205,129,40)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="847.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.07%)</title><rect x="94.2257%" y="821" width="0.0656%" height="15" fill="rgb(236,178,4)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="831.50"></text></g><g><title>tcache_init (1 samples, 0.07%)</title><rect x="94.2257%" y="805" width="0.0656%" height="15" fill="rgb(251,76,53)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="815.50"></text></g><g><title>_rjem_je_cache_bin_preincrement (1 samples, 0.07%)</title><rect x="94.2257%" y="789" width="0.0656%" height="15" fill="rgb(242,92,40)" fg:x="1436" fg:w="1"/><text x="94.4757%" y="799.50"></text></g><g><title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="94.2913%" y="885" width="0.0656%" height="15" fill="rgb(209,45,30)" fg:x="1437" fg:w="1"/><text x="94.5413%" y="895.50"></text></g><g><title>pthread_rwlock_wrlock (1 samples, 0.07%)</title><rect x="94.3570%" y="885" width="0.0656%" height="15" fill="rgb(218,157,36)" fg:x="1438" fg:w="1"/><text x="94.6070%" y="895.50"></text></g><g><title>rustc_codegen_ssa::back::write::spawn_work::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (1 samples, 0.07%)</title><rect x="94.4226%" y="885" width="0.0656%" height="15" fill="rgb(222,186,16)" fg:x="1439" fg:w="1"/><text x="94.6726%" y="895.50"></text></g><g><title>all (1,524 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(254,72,35)" fg:x="0" fg:w="1524"/><text x="0.2500%" y="927.50"></text></g><g><title>rustc (468 samples, 30.71%)</title><rect x="69.2913%" y="901" width="30.7087%" height="15" fill="rgb(224,25,35)" fg:x="1056" fg:w="468"/><text x="69.5413%" y="911.50">rustc</text></g><g><title>syscall (84 samples, 5.51%)</title><rect x="94.4882%" y="885" width="5.5118%" height="15" fill="rgb(206,135,52)" fg:x="1440" fg:w="84"/><text x="94.7382%" y="895.50">syscall</text></g></svg></svg>