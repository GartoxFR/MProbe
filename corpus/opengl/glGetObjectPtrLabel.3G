'\" t
.\"     Title: glGetObjectPtrLabel
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLGETOBJECTPTRLABEL" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetObjectPtrLabel \- retrieve the label of a sync object identified by a pointer
.SH "C SPECIFICATION"
.HP \w'void\ glGetObjectPtrLabel('u
.BI "void glGetObjectPtrLabel(void\ *\ " "ptr" ", GLsizei\ " "bufSize" ", GLsizei\ *\ " "length" ", char\ *\ " "label" ");"
.SH "PARAMETERS"
.PP
\fIptr\fR
.RS 4
The name of the sync object whose label to retrieve\&.
.RE
.PP
\fIbufSize\fR
.RS 4
The length of the buffer whose address is in
\fIlabel\fR\&.
.RE
.PP
\fIlength\fR
.RS 4
The address of a variable to receive the length of the object label\&.
.RE
.PP
\fIlabel\fR
.RS 4
The address of a string that will receive the object label\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetObjectPtrLabel\fR
retrieves the label of the sync object identified by
\fIptr\fR\&.
.PP
\fIlabel\fR
is the address of a string that will be used to store the object label\&.
\fIbufSize\fR
specifies the number of characters in the array identified by
\fIlabel\fR\&.
\fIlength\fR
contains the address of a variable which will receive the number of characters in the object label\&. If
\fIlength\fR
is NULL, then it is ignored and no data is written\&. Likewise, if
\fIlabel\fR
is NULL, or if
\fIbufSize\fR
is zero then no data is written to
\fIlabel\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIidentifier\fR
is not one of the accepted object types\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIptr\fR
is not the name of an existing sync object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbufSize\fR
is zero\&.
.PP
If not NULL,
\fIlength\fR
and
\fIlabel\fR
should be addresses to which the client has write access, otherwise undefined behavior, including process termination may occur\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_LABEL_LENGTH\fR\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c.
T{
\fBglGetObjectPtrLabel\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglPushDebugGroup\fR(),
\fBglPopDebugGroup\fR(),
\fBglObjectLabel\fR(),
\fBglGetObjectLabel\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2013\-2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2013-2014 Khronos Group
.br
