'\" t
.\"     Title: glDrawTransformFeedbackStream
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLDRAWTRANSFORMFEEDB" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDrawTransformFeedbackStream \- render primitives using a count derived from a specifed stream of a transform feedback object
.SH "C SPECIFICATION"
.HP \w'void\ glDrawTransformFeedbackStream('u
.BI "void glDrawTransformFeedbackStream(GLenum\ " "mode" ", GLuint\ " "id" ", GLuint\ " "stream" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies what kind of primitives to render\&. Symbolic constants
\fBGL_POINTS\fR,
\fBGL_LINE_STRIP\fR,
\fBGL_LINE_LOOP\fR,
\fBGL_LINES\fR,
\fBGL_LINE_STRIP_ADJACENCY\fR,
\fBGL_LINES_ADJACENCY\fR,
\fBGL_TRIANGLE_STRIP\fR,
\fBGL_TRIANGLE_FAN\fR,
\fBGL_TRIANGLES\fR,
\fBGL_TRIANGLE_STRIP_ADJACENCY\fR,
\fBGL_TRIANGLES_ADJACENCY\fR, and
\fBGL_PATCHES\fR
are accepted\&.
.RE
.PP
\fIid\fR
.RS 4
Specifies the name of a transform feedback object from which to retrieve a primitive count\&.
.RE
.PP
\fIstream\fR
.RS 4
Specifies the index of the transform feedback stream from which to retrieve a primitive count\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDrawTransformFeedbackStream\fR
draws primitives of a type specified by
\fImode\fR
using a count retrieved from the transform feedback stream specified by
\fIstream\fR
of the transform feedback object specified by
\fIid\fR\&. Calling
\fBglDrawTransformFeedbackStream\fR
is equivalent to calling
\fBglDrawArrays\fR()
with
\fImode\fR
as specified,
\fIfirst\fR
set to zero, and
\fIcount\fR
set to the number of vertices captured on vertex stream
\fIstream\fR
the last time transform feedback was active on the transform feedback object named by
\fIid\fR\&.
.PP
Calling
\fBglDrawTransformFeedback\fR()
is equivalent to calling
\fBglDrawTransformFeedbackStream\fR
with
\fIstream\fR
set to zero\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is not an accepted value\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIid\fR
is not the name of a transform feedback object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIstream\fR
is greater than or equal to the value of
\fBGL_MAX_VERTEX_STREAMS\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound to an enabled array and the buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a geometry shader is active and
\fImode\fR
is incompatible with the input primitive type of the geometry shader in the currently installed program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fImode\fR
is
\fBGL_PATCHES\fR
and no tessellation control shader is active\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if

\fBglEndTransformFeedback\fR
has never been called while the transform feedback object named by
\fIid\fR
was bound\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c.
T{
\fBglDrawTransformFeedbackStream\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglDrawArrays\fR(),
\fBglDrawArraysInstanced\fR(),
\fBglDrawElements\fR(),
\fBglDrawRangeElements\fR(),
\fBglDrawTransformFeedback\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010\-2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2010-2014 Khronos Group.
.br
