'\" t
.\"     Title: glBindVertexBuffer
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLBINDVERTEXBUFFER" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBindVertexBuffer, glVertexArrayVertexBuffer \- bind a buffer to a vertex buffer bind point
.SH "C SPECIFICATION"
.HP \w'void\ glBindVertexBuffer('u
.BI "void glBindVertexBuffer(GLuint\ " "bindingindex" ", GLuint\ " "buffer" ", GLintptr\ " "offset" ", GLsizei\ " "stride" ");"
.HP \w'void\ glVertexArrayVertexBuffer('u
.BI "void glVertexArrayVertexBuffer(GLuint\ " "vaobj" ", GLuint\ " "bindingindex" ", GLuint\ " "buffer" ", GLintptr\ " "offset" ", GLsizei\ " "stride" ");"
.SH "PARAMETERS"
.PP
\fIvaobj\fR
.RS 4
Specifies the name of the vertex array object to be used by
\fBglVertexArrayVertexBuffer\fR
function\&.
.RE
.PP
\fIbindingindex\fR
.RS 4
The index of the vertex buffer binding point to which to bind the buffer\&.
.RE
.PP
\fIbuffer\fR
.RS 4
The name of a buffer to bind to the vertex buffer binding point\&.
.RE
.PP
\fIoffset\fR
.RS 4
The offset of the first element of the buffer\&.
.RE
.PP
\fIstride\fR
.RS 4
The distance between elements within the buffer\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBindVertexBuffer\fR
and
\fBglVertexArrayVertexBuffer\fR
bind the buffer named
\fIbuffer\fR
to the vertex buffer binding point whose index is given by
\fIbindingindex\fR\&.
\fBglBindVertexBuffer\fR
modifies the binding of the currently bound vertex array object, whereas
\fBglVertexArrayVertexBuffer\fR
allows the caller to specify ID of the vertex array object with an argument named
\fIvaobj\fR, for which the binding should be modified\&.
\fIoffset\fR
and
\fIstride\fR
specify the offset of the first element within the buffer and the distance between elements within the buffer, respectively, and are both measured in basic machine units\&.
\fIbindingindex\fR
must be less than the value of
\fBGL_MAX_VERTEX_ATTRIB_BINDINGS\fR\&.
\fIoffset\fR
and
\fIstride\fR
must be greater than or equal to zero\&. If
\fIbuffer\fR
is zero, then any buffer currently bound to the specified binding point is unbound\&.
.PP
If
\fIbuffer\fR
is not the name of an existing buffer object, the GL first creates a new state vector, initialized with a zero\-sized memory buffer and comprising all the state and with the same initial values as in case of
\fBglBindBuffer\fR\&.
\fIbuffer\fR
is then attached to the specified
\fIbindingindex\fR
of the vertex array object\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated by
\fBglBindVertexBuffer\fR
if no vertex array object is bound\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated by
\fBglVertexArrayVertexBuffer\fR
if
\fIvaobj\fR
is not the name of an existing vertex array object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbindingindex\fR
is greater than or equal to the value of
\fBGL_MAX_VERTEX_ATTRIB_BINDINGS\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIoffset\fR
or
\fIstride\fR
is less than zero, or if stride is greater than the value of
\fBGL_MAX_VERTEX_ATTRIB_STRIDE\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbuffer\fR
is not zero or the name of an existing buffer object (as returned by
\fBglGenBuffers\fR
or
\fBglCreateBuffers\fR)\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_VERTEX_ATTRIB_BINDINGS\fR\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c
l c c c c c c c c c c c c.
T{
\fBglBindVertexBuffer\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
T{
\fBglVertexArrayVertexBuffer\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglVertexAttribBinding\fR(),
\fBglVertexAttribFormat\fR(),
\fBglVertexAttribPointer\fR(),
\fBglVertexBindingDivisor\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2014 Khronos Group
.br
