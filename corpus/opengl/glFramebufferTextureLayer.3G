'\" t
.\"     Title: glFramebufferTextureLayer
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLFRAMEBUFFERTEXTURE" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glFramebufferTextureLayer, glNamedFramebufferTextureLayer \- attach a single layer of a texture object as a logical buffer of a framebuffer object
.SH "C SPECIFICATION"
.HP \w'void\ glFramebufferTextureLayer('u
.BI "void glFramebufferTextureLayer(GLenum\ " "target" ", GLenum\ " "attachment" ", GLuint\ " "texture" ", GLint\ " "level" ", GLint\ " "layer" ");"
.HP \w'void\ glNamedFramebufferTextureLayer('u
.BI "void glNamedFramebufferTextureLayer(GLuint\ " "framebuffer" ", GLenum\ " "attachment" ", GLuint\ " "texture" ", GLint\ " "level" ", GLint\ " "layer" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies the target to which the framebuffer is bound for
\fBglFramebufferTextureLayer\fR\&.
.RE
.PP
\fIframebuffer\fR
.RS 4
Specifies the name of the framebuffer object for
\fBglNamedFramebufferTextureLayer\fR\&.
.RE
.PP
\fIattachment\fR
.RS 4
Specifies the attachment point of the framebuffer\&.
.RE
.PP
\fItexture\fR
.RS 4
Specifies the name of an existing texture object to attach\&.
.RE
.PP
\fIlevel\fR
.RS 4
Specifies the mipmap level of the texture object to attach\&.
.RE
.PP
\fIlayer\fR
.RS 4
Specifies the layer of the texture object to attach\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglFramebufferTextureLayer\fR
and
\fBglNamedFramebufferTextureLayer\fR
attach a single layer of a three\-dimensional or array texture object as one of the logical buffers of the specified framebuffer object\&. Textures cannot be attached to the default draw and read framebuffer, so they are not valid targets of these commands\&.
.PP
For
\fBglFramebufferTextureLayer\fR, the framebuffer object is that bound to
\fItarget\fR, which must be
\fBGL_DRAW_FRAMEBUFFER\fR,
\fBGL_READ_FRAMEBUFFER\fR, or
\fBGL_FRAMEBUFFER\fR\&.
\fBGL_FRAMEBUFFER\fR
is equivalent to
\fBGL_DRAW_FRAMEBUFFER\fR\&.
.PP
For
\fBglNamedFramebufferTextureLayer\fR,
\fIframebuffer\fR
is the name of the framebuffer object\&.
.PP
\fIattachment\fR
specifies the logical attachment of the framebuffer and must be
\fBGL_COLOR_ATTACHMENT\fR\fIi\fR,
\fBGL_DEPTH_ATTACHMENT\fR,
\fBGL_STENCIL_ATTACHMENT\fR
or
\fBGL_DEPTH_STENCIL_ATTACHMENT\fR\&.
\fIi\fR
in
\fBGL_COLOR_ATTACHMENT\fR\fIi\fR
may range from zero to the value of
\fBGL_MAX_COLOR_ATTACHMENTS\fR
minus one\&. Attaching a level of a texture to
\fBGL_DEPTH_STENCIL_ATTACHMENT\fR
is equivalent to attaching that level to both the
\fBGL_DEPTH_ATTACHMENT\fR
\fIand\fR
the
\fBGL_STENCIL_ATTACHMENT\fR
attachment points simultaneously\&.
.PP
If
\fItexture\fR
is not zero, it must be the name of a three\-dimensional, two\-dimensional multisample array, one\- or two\-dimensional array, or cube map array texture\&.
.PP
If
\fItexture\fR
is a three\-dimensional texture, then
\fIlevel\fR
must be greater than or equal to zero and less than or equal to $log_2$ of the value of
\fBGL_MAX_3D_TEXTURE_SIZE\fR\&.
.PP
If
\fItexture\fR
is a two\-dimensional array texture, then
\fIlevel\fR
must be greater than or equal to zero and less than or equal to $log_2$ of the value of
\fBGL_MAX_TEXTURE_SIZE\fR\&.
.PP
For cube map textures,
\fIlayer\fR
is translated into a cube map face according to $$ face = k \ebmod 6\&. $$ For cube map array textures,
\fIlayer\fR
is translated into an array layer and face according to $$ layer = \eleft\elfloor { layer \eover 6 } \eright\erfloor$$ and $$ face = k \ebmod 6\&. $$
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated by
\fBglFramebufferTexture\fR
if
\fItarget\fR
is not one of the accepted framebuffer targets\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated by
\fBglFramebufferTexture\fR
if zero is bound to
\fItarget\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated by
\fBglNamedFramebufferTexture\fR
if
\fIframebuffer\fR
is not the name of an existing framebuffer object\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIattachment\fR
is not one of the accepted attachment points\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItexture\fR
is not zero and is not the name of an existing three\-dimensional, two\-dimensional multisample array, one\- or two\-dimensional array, cube map, or cube map array texture\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItexture\fR
is not zero and
\fIlevel\fR
is not a supported texture level for
\fItexture\fR, as described above\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItexture\fR
is not zero and
\fIlayer\fR
is larger than the value of
\fBGL_MAX_3D_TEXTURE_SIZE\fR
minus one (for three\-dimensional texture objects), or larger than the value of
\fBGL_MAX_ARRAY_TEXTURE_LAYERS\fR
minus one (for array texture objects)\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItexture\fR
is not zero and
\fIlayer\fR
is negative\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated by if
\fItexture\fR
is a buffer texture\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c
l c c c c c c c c c c c c.
T{
\fBglFramebufferTextureLayer\fR
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
T{
\fBglNamedFramebufferTextureLayer\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglGenFramebuffers\fR(),
\fBglBindFramebuffer\fR(),
\fBglGenRenderbuffers\fR(),
\fBglFramebufferTexture\fR(),
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010\-2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2010-2014 Khronos Group
.br
