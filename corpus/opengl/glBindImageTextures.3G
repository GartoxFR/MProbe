'\" t
.\"     Title: glBindImageTextures
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLBINDIMAGETEXTURES" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBindImageTextures \- bind one or more named texture images to a sequence of consecutive image units
.SH "C SPECIFICATION"
.HP \w'void\ glBindImageTextures('u
.BI "void glBindImageTextures(GLuint\ " "first" ", GLsizei\ " "count" ", const\ GLuint\ *" "textures" ");"
.SH "PARAMETERS"
.PP
\fIfirst\fR
.RS 4
Specifies the first image unit to which a texture is to be bound\&.
.RE
.PP
\fIcount\fR
.RS 4
Specifies the number of textures to bind\&.
.RE
.PP
\fItextures\fR
.RS 4
Specifies the address of an array of names of existing texture objects\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBindImageTextures\fR
binds images from an array of existing texture objects to a specified number of consecutive image units\&.
\fIcount\fR
specifies the number of texture objects whose names are stored in the array
\fItextures\fR\&. That number of texture names are read from the array and bound to the
\fIcount\fR
consecutive texture units starting from
\fIfirst\fR\&. If the name zero appears in the
\fItextures\fR
array, any existing binding to the image unit is reset\&. Any non\-zero entry in
\fItextures\fR
must be the name of an existing texture object\&. When a non\-zero entry in
\fItextures\fR
is present, the image at level zero is bound, the binding is considered layered, with the first layer set to zero, and the image is bound for read\-write access\&. The image unit format parameter is taken from the internal format of the image at level zero of the texture object\&. For cube map textures, the internal format of the positive X image of level zero is used\&. If
\fItextures\fR
is
\fBNULL\fR
then it is as if an appropriately sized array containing only zeros had been specified\&.
.PP
\fBglBindImageTextures\fR
is equivalent to the following pseudo code:
.sp
.if n \{\
.RS 4
.\}
.nf
    for (i = 0; i < count; i++) {
        if (textures == NULL || textures[i] = 0) {
            glBindImageTexture(first + i, 0, 0, GL_FALSE, 0, GL_READ_ONLY, GL_R8);
        } else {
            glBindImageTexture(first + i, textures[i], 0, GL_TRUE, 0, GL_READ_WRITE, lookupInternalFormat(textures[i]));
        }
    }
.fi
.if n \{\
.RE
.\}
.PP
Each entry in
\fItextures\fR
will be checked individually and if found to be invalid, the state for that image unit will not be changed and an error will be generated\&. However, the state for other texture image units referenced by the command will still be updated\&.
.SH "NOTES"
.PP
\fBglBindImageTextures\fR
is available only if the GL version is 4\&.4 or higher\&.
.PP
Note that because
\fBglBindImageTextures\fR
cannot create new textures (even if a name passed has been previously generated by call to
\fBglGenTextures\fR()), names passed to
\fBglBindImageTextures\fR
must have been bound at least once previously via a call to
\fBglBindTexture\fR()\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIfirst\fR
+
\fIcount\fR
is greater than the number of image units supported by the implementation\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if any value in
\fItextures\fR
is not zero or the name of an existing texture object\&.
.PP
\fBGL_INVALID_OPERATION\fR
error is generated if the internal format of the level zero texture image of any texture in textures is not supported\&.
.PP
\fBGL_INVALID_OPERATION\fR
error is generated if the width, height, or depth of the level zero texture image of any texture in textures is zero\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_TEXTURE_BINDING_1D\fR,
\fBGL_TEXTURE_BINDING_2D\fR,
\fBGL_TEXTURE_BINDING_3D\fR,
\fBGL_TEXTURE_BINDING_1D_ARRAY\fR,
\fBGL_TEXTURE_BINDING_2D_ARRAY\fR,
\fBGL_TEXTURE_BINDING_RECTANGLE\fR,
\fBGL_TEXTURE_BINDING_BUFFER\fR,
\fBGL_TEXTURE_BINDING_CUBE_MAP\fR,
\fBGL_TEXTURE_BINDING_CUBE_MAP\fR,
\fBGL_TEXTURE_BINDING_CUBE_MAP_ARRAY\fR,
\fBGL_TEXTURE_BINDING_2D_MULTISAMPLE\fR, or
\fBGL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY\fR\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c.
T{
\fBglBindImageTextures\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglBindTexture\fR(),
\fBglBindTextures\fR(),
\fBglDeleteTextures\fR(),
\fBglGenTextures\fR(),
\fBglGet\fR(),
\fBglGetTexParameter\fR(),
\fBglIsTexture\fR(),
\fBglTexStorage1D\fR(),
\fBglTexStorage2D\fR(),
\fBglTexStorage2DMultisample\fR(),
\fBglTexStorage3D\fR(),
\fBglTexStorage3DMultisample\fR(),
\fBglTexBuffer\fR(),
\fBglTexParameter\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2013\-2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2013-2014 Khronos Group
.br
