'\" t
.\"     Title: glCopyTexSubImage1D
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLCOPYTEXSUBIMAGE1D" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCopyTexSubImage1D, glCopyTextureSubImage1D \- copy a one\-dimensional texture subimage
.SH "C SPECIFICATION"
.HP \w'void\ glCopyTexSubImage1D('u
.BI "void glCopyTexSubImage1D(GLenum\ " "target" ", GLint\ " "level" ", GLint\ " "xoffset" ", GLint\ " "x" ", GLint\ " "y" ", GLsizei\ " "width" ");"
.HP \w'void\ glCopyTextureSubImage1D('u
.BI "void glCopyTextureSubImage1D(GLuint\ " "texture" ", GLint\ " "level" ", GLint\ " "xoffset" ", GLint\ " "x" ", GLint\ " "y" ", GLsizei\ " "width" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies the target to which the texture object is bound for
\fBglCopyTexSubImage1D\fR
function\&. Must be
\fBGL_TEXTURE_1D\fR\&.
.RE
.PP
\fItexture\fR
.RS 4
Specifies the texture object name for
\fBglCopyTextureSubImage1D\fR
function\&.
.RE
.PP
\fIlevel\fR
.RS 4
Specifies the level\-of\-detail number\&. Level 0 is the base image level\&. Level
\fIn\fR
is the
\fIn\fRth mipmap reduction image\&.
.RE
.PP
\fIxoffset\fR
.RS 4
Specifies the texel offset within the texture array\&.
.RE
.PP
\fIx\fR, \fIy\fR
.RS 4
Specify the window coordinates of the left corner of the row of pixels to be copied\&.
.RE
.PP
\fIwidth\fR
.RS 4
Specifies the width of the texture subimage\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglCopyTexSubImage1D\fR
and
\fBglCopyTextureSubImage1D\fR
replace a portion of a one\-dimensional texture image with pixels from the current
\fBGL_READ_BUFFER\fR
(rather than from main memory, as is the case for
\fBglTexSubImage1D\fR())\&. For
\fBglCopyTexSubImage1D\fR, the texture object that is bound to
\fItarget\fR
will be used for the process\&. For
\fBglCopyTextureSubImage1D\fR,
\fItexture\fR
tells which texture object should be used for the purpose of the call\&.
.PP
The screen\-aligned pixel row with left corner at (\fIx\fR,\e
\fIy\fR), and with length
\fIwidth\fR
replaces the portion of the texture array with x indices
\fIxoffset\fR
through
xoffset + width \- 1, inclusive\&. The destination in the texture array may not include any texels outside the texture array as it was originally specified\&.
.PP
The pixels in the row are processed exactly as if
\fBglReadPixels\fR()
had been called, but the process stops just before final conversion\&. At this point, all pixel component values are clamped to the range
0 1
and then converted to the texture\*(Aqs internal format for storage in the texel array\&.
.PP
It is not an error to specify a subtexture with zero width, but such a specification has no effect\&. If any of the pixels within the specified row of the current
\fBGL_READ_BUFFER\fR
are outside the read window associated with the current rendering context, then the values obtained for those pixels are undefined\&.
.PP
No change is made to the
\fIinternalformat\fR
or
\fIwidth\fR
parameters of the specified texture array or to texel values outside the specified subregion\&.
.SH "NOTES"
.PP
The
\fBglPixelStore\fR()
mode affects texture images\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated by
\fBglCopyTexSubImage1D\fR
if
\fItarget\fR
is not
\fBGL_TEXTURE_1D\fR\&.
.PP
\fBGL_INVALID_FRAMEBUFFER_OPERATION\fR
is generated if the object bound to
\fBGL_READ_FRAMEBUFFER_BINDING\fR
is not framebuffer complete\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated by
\fBglCopyTextureSubImage1D\fR
if
\fItexture\fR
is not the name of an existing texture object, or if the effective target of
\fItexture\fR
is not
\fBGL_TEXTURE_1D\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if the texture array has not been defined by a previous
\fBglTexImage1D\fR(),
\fBglCopyTexImage1D\fR(), or
\fBglTexStorage1D\fR()
operation\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIlevel\fR
is less than 0\&.
.PP
\fBGL_INVALID_VALUE\fR
may be generated if
level > log 2 ⁡ max, where
\fImax\fR
is the returned value of
\fBGL_MAX_TEXTURE_SIZE\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
xoffset < 0, or
xoffset + width > w, where
w
is the
\fBGL_TEXTURE_WIDTH\fR
of the texture image being modified\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if:
.PP
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the read buffer is
\fBGL_NONE\fR, or
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the value of
\fBGL_READ_FRAMEBUFFER_BINDING\fR
is non\-zero, and:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the read buffer selects an attachment that has no image attached, or
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the effective value of
\fBGL_SAMPLE_BUFFERS\fR
for the read framebuffer is one\&.
.RE
.RE
.PP
.SH "ASSOCIATED GETS"
.PP
\fBglGetTexImage\fR()
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c
l c c c c c c c c c c c c.
T{
\fBglCopyTexSubImage1D\fR
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
T{
\fBglCopyTextureSubImage1D\fR
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglCopyTexImage1D\fR(),
\fBglCopyTexImage2D\fR(),
\fBglCopyTexSubImage2D\fR(),
\fBglCopyTexSubImage3D\fR(),
\fBglPixelStore\fR(),
\fBglReadBuffer\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglTexParameter\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexSubImage3D\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. Copyright
\(co
2012\-2014 Khronos Group\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2014 Khronos Group
.br
