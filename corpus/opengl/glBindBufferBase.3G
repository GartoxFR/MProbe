'\" t
.\"     Title: glBindBufferBase
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 05/21/2022
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "GLBINDBUFFERBASE" "3G" "05/21/2022" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBindBufferBase \- bind a buffer object to an indexed buffer target
.SH "C SPECIFICATION"
.HP \w'void\ glBindBufferBase('u
.BI "void glBindBufferBase(GLenum\ " "target" ", GLuint\ " "index" ", GLuint\ " "buffer" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specify the target of the bind operation\&.
\fItarget\fR
must be one of
\fBGL_ATOMIC_COUNTER_BUFFER\fR,
\fBGL_TRANSFORM_FEEDBACK_BUFFER\fR,
\fBGL_UNIFORM_BUFFER\fR
or
\fBGL_SHADER_STORAGE_BUFFER\fR\&.
.RE
.PP
\fIindex\fR
.RS 4
Specify the index of the binding point within the array specified by
\fItarget\fR\&.
.RE
.PP
\fIbuffer\fR
.RS 4
The name of a buffer object to bind to the specified binding point\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBindBufferBase\fR
binds the buffer object
\fIbuffer\fR
to the binding point at index
\fIindex\fR
of the array of targets specified by
\fItarget\fR\&. Each
\fItarget\fR
represents an indexed array of buffer binding points, as well as a single general binding point that can be used by other buffer manipulation functions such as
\fBglBindBuffer\fR()
or
\fBglMapBuffer\fR()\&. In addition to binding
\fIbuffer\fR
to the indexed buffer binding target,
\fBglBindBufferBase\fR
also binds
\fIbuffer\fR
to the generic buffer binding point specified by
\fItarget\fR\&.
.SH "NOTES"
.PP
Calling
\fBglBindBufferBase\fR
is equivalent to calling
\fBglBindBufferRange\fR()
with
\fIoffset\fR
zero and
\fIsize\fR
equal to the size of the buffer\&.
.PP
The
\fBGL_ATOMIC_COUNTER_BUFFER\fR
target is available only if the GL version is 4\&.2 or greater\&.
.PP
The
\fBGL_SHADER_STORAGE_BUFFER\fR
target is available only if the GL version is 4\&.3 or greater\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not
\fBGL_ATOMIC_COUNTER_BUFFER\fR,
\fBGL_TRANSFORM_FEEDBACK_BUFFER\fR,
\fBGL_UNIFORM_BUFFER\fR
or
\fBGL_SHADER_STORAGE_BUFFER\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIindex\fR
is greater than or equal to the number of
\fItarget\fR\-specific indexed binding points\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbuffer\fR
does not have an associated data store, or if the size of that store is zero\&.
.SH "VERSION SUPPORT"
.TS
allbox tab(:);
lB cB s s s s s s s s s s s
lB cB cB cB cB cB cB cB cB cB cB cB cB.
T{

T}:T{
\fBOpenGL Version\fR
T}
T{
\fBFunction / Feature Name\fR
T}:T{
\fB2\&.0\fR
T}:T{
\fB2\&.1\fR
T}:T{
\fB3\&.0\fR
T}:T{
\fB3\&.1\fR
T}:T{
\fB3\&.2\fR
T}:T{
\fB3\&.3\fR
T}:T{
\fB4\&.0\fR
T}:T{
\fB4\&.1\fR
T}:T{
\fB4\&.2\fR
T}:T{
\fB4\&.3\fR
T}:T{
\fB4\&.4\fR
T}:T{
\fB4\&.5\fR
T}
.T&
l c c c c c c c c c c c c.
T{
\fBglBindBufferBase\fR
T}:T{
\-
T}:T{
\-
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}:T{
✔
T}
.TE
.sp 1
.SH "SEE ALSO"
.PP
\fBglGenBuffers\fR(),
\fBglDeleteBuffers\fR(),
\fBglBindBuffer\fR(),
\fBglBindBufferRange\fR(),
\fBglMapBuffer\fR(),
\fBglUnmapBuffer\fR(),
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010\-2014 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2010-2014 Khronos Group
.br
